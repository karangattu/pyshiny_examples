[
    {
        "controller_name": "playwright.controller.Accordion",
        "attributes": "| Name | Description |\n| --- | --- |\n| [expect](#shiny.playwright.controller.Accordion.expect) | Expectation method equivalent to `playwright.expect(self.loc)`. |\n| [id](#shiny.playwright.controller.Accordion.id) | The browser DOM `id` of the UI element. |\n| [loc](#shiny.playwright.controller.Accordion.loc) | Playwright `Locator` for each accordion items. |\n| [loc_container](#shiny.playwright.controller.Accordion.loc_container) | Playwright `Locator` for the accordion container. |\n| [page](#shiny.playwright.controller.Accordion.page) | Playwright `Page` of the Shiny app. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [accordion_panel](#shiny.playwright.controller.Accordion.accordion_panel) | Returns the accordion panel ([](:class:`~shiny.playwright.controls.AccordionPanel`)) with the specified data value. |\n| [expect_class](#shiny.playwright.controller.Accordion.expect_class) | Expects the accordion to have the specified class. |\n| [expect_height](#shiny.playwright.controller.Accordion.expect_height) | Expects the accordion to have the specified height. |\n| [expect_multiple](#shiny.playwright.controller.Accordion.expect_multiple) | Expects the accordion to be multiple or not. |\n| [expect_panels](#shiny.playwright.controller.Accordion.expect_panels) | Expects the accordion to have the specified panels. |\n| [expect_width](#shiny.playwright.controller.Accordion.expect_width) | Expects the accordion to have the specified width. |\n| [set](#shiny.playwright.controller.Accordion.set) | Sets the state of the accordion panel. |\n\n### accordion_panel { #shiny.playwright.controller.Accordion.accordion_panel }\n\n```python\nplaywright.controller.Accordion.accordion_panel(data_value)\n```\n\nReturns the accordion panel ([](:class:`~shiny.playwright.controls.AccordionPanel`))\nwith the specified data value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name       | Type         | Description                            | Default    |\n|------------|--------------|----------------------------------------|------------|\n| data_value | [str](`str`) | The data value of the accordion panel. | _required_ |\n\n### expect_class { #shiny.playwright.controller.Accordion.expect_class }\n\n```python\nplaywright.controller.Accordion.expect_class(class_name, *, timeout=None)\n```\n\nExpects the accordion to have the specified class.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name       | Type                                         | Description                                                           | Default    |\n|------------|----------------------------------------------|-----------------------------------------------------------------------|------------|\n| class_name | [str](`str`)                                 | The class name to expect.                                             | _required_ |\n| timeout    | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the class to appear. Defaults to `None`. | `None`     |\n\n### expect_height { #shiny.playwright.controller.Accordion.expect_height }\n\n```python\nplaywright.controller.Accordion.expect_height(value, *, timeout=None)\n```\n\nExpects the accordion to have the specified height.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                               | Description                                                                                 | Default    |\n|---------|----------------------------------------------------|---------------------------------------------------------------------------------------------|------------|\n| value   | [StyleValue](`shiny.playwright._types.StyleValue`) | The expected height.                                                                        | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)       | The maximum time to wait for the height to be visible and interactable. Defaults to `None`. | `None`     |\n\n### expect_multiple { #shiny.playwright.controller.Accordion.expect_multiple }\n\n```python\nplaywright.controller.Accordion.expect_multiple(value, *, timeout=None)\n```\n\nExpects the accordion to be multiple or not.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                               | Default    |\n|---------|----------------------------------------------|---------------------------------------------------------------------------|------------|\n| value   | [bool](`bool`)                               | `True` if the accordion is expected to be multiple, `False` otherwise.    | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### expect_panels { #shiny.playwright.controller.Accordion.expect_panels }\n\n```python\nplaywright.controller.Accordion.expect_panels(value, *, timeout=None)\n```\n\nExpects the accordion to have the specified panels.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                                     | Description                                                                                 | Default    |\n|---------|--------------------------------------------------------------------------|---------------------------------------------------------------------------------------------|------------|\n| value   | [list](`list`)\\[[PatternOrStr](`shiny.playwright._types.PatternOrStr`)\\] | The expected panels.                                                                        | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)                             | The maximum time to wait for the panels to be visible and interactable. Defaults to `None`. | `None`     |\n\n### expect_width { #shiny.playwright.controller.Accordion.expect_width }\n\n```python\nplaywright.controller.Accordion.expect_width(value, *, timeout=None)\n```\n\nExpects the accordion to have the specified width.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                               | Description                                                                       | Default    |\n|---------|----------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [StyleValue](`shiny.playwright._types.StyleValue`) | The expected width.                                                               | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)       | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### set { #shiny.playwright.controller.Accordion.set }\n\n```python\nplaywright.controller.Accordion.set(open, *, timeout=None)\n```\n\nSets the state of the accordion panel.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                           | Description                                                                                          | Default    |\n|---------|------------------------------------------------|------------------------------------------------------------------------------------------------------|------------|\n| open    | [str](`str`) \\| [list](`list`)\\[[str](`str`)\\] | The open accordion panel(s).                                                                         | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)   | The maximum time to wait for the accordion panel to be visible and interactable. Defaults to `None`. | `None`     |"
    },
    {
        "controller_name": "playwright.controller.AccordionPanel",
        "attributes": "| Name | Description |\n| --- | --- |\n| [expect](#shiny.playwright.controller.AccordionPanel.expect) | Expectation method equivalent to `playwright.expect(self.loc)`. |\n| [id](#shiny.playwright.controller.AccordionPanel.id) | The browser DOM `id` of the UI element. |\n| [loc](#shiny.playwright.controller.AccordionPanel.loc) | Playwright `Locator` of the UI element. |\n| [loc_body](#shiny.playwright.controller.AccordionPanel.loc_body) | Playwright `Locator` for the accordion panel's body. |\n| [loc_container](#shiny.playwright.controller.AccordionPanel.loc_container) | Playwright `Locator` for the container of the UI element. |\n| [loc_header](#shiny.playwright.controller.AccordionPanel.loc_header) | Playwright `Locator` for the accordion panel's header. |\n| [loc_icon](#shiny.playwright.controller.AccordionPanel.loc_icon) | Playwright `Locator` for the accordion panel's icon. |\n| [loc_label](#shiny.playwright.controller.AccordionPanel.loc_label) | Playwright `Locator` for the accordion panel's label. |\n| [page](#shiny.playwright.controller.AccordionPanel.page) | Playwright `Page` of the Shiny app. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [expect_body](#shiny.playwright.controller.AccordionPanel.expect_body) | Expects the accordion panel body to have the specified text. |\n| [expect_icon](#shiny.playwright.controller.AccordionPanel.expect_icon) | Expects the accordion panel icon to exist or not. |\n| [expect_label](#shiny.playwright.controller.AccordionPanel.expect_label) | Expects the accordion panel label to have the specified text. |\n| [expect_open](#shiny.playwright.controller.AccordionPanel.expect_open) | Expects the accordion panel to be open or closed. |\n| [expect_width](#shiny.playwright.controller.AccordionPanel.expect_width) | Expect the `width` attribute of a DOM element to have a specific value. |\n| [set](#shiny.playwright.controller.AccordionPanel.set) | Sets the state of the control to open or closed. |\n\n### expect_body { #shiny.playwright.controller.AccordionPanel.expect_body }\n\n```python\nplaywright.controller.AccordionPanel.expect_body(value, *, timeout=None)\n```\n\nExpects the accordion panel body to have the specified text.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                          | Default    |\n|---------|--------------------------------------------------------|----------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected text pattern or string.                                 | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the body to appear. Defaults to `None`. | `None`     |\n\n### expect_icon { #shiny.playwright.controller.AccordionPanel.expect_icon }\n\n```python\nplaywright.controller.AccordionPanel.expect_icon(exists, *, timeout=None)\n```\n\nExpects the accordion panel icon to exist or not.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                          | Default    |\n|---------|----------------------------------------------|----------------------------------------------------------------------|------------|\n| exists  | [bool](`bool`)                               | `True` if the icon is expected to exist, `False` otherwise.          | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the icon to appear. Defaults to `None`. | `None`     |\n\n### expect_label { #shiny.playwright.controller.AccordionPanel.expect_label }\n\n```python\nplaywright.controller.AccordionPanel.expect_label(value, *, timeout=None)\n```\n\nExpects the accordion panel label to have the specified text.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                           | Default    |\n|---------|--------------------------------------------------------|-----------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected text pattern or string.                                  | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the label to appear. Defaults to `None`. | `None`     |\n\n### expect_open { #shiny.playwright.controller.AccordionPanel.expect_open }\n\n```python\nplaywright.controller.AccordionPanel.expect_open(value, *, timeout=None)\n```\n\nExpects the accordion panel to be open or closed.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                               | Default    |\n|---------|----------------------------------------------|---------------------------------------------------------------------------|------------|\n| value   | [bool](`bool`)                               | `True` if the accordion panel is expected to be open, `False` otherwise.  | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### expect_width { #shiny.playwright.controller.AccordionPanel.expect_width }\n\n```python\nplaywright.controller.AccordionPanel.expect_width(value, *, timeout=None)\n```\n\nExpect the `width` attribute of a DOM element to have a specific value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                                                       | Default    |\n|---------|--------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected value of the `width` attribute.                                      | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### set { #shiny.playwright.controller.AccordionPanel.set }\n\n```python\nplaywright.controller.AccordionPanel.set(open, *, timeout=None)\n```\n\nSets the state of the control to open or closed.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                                                  | Default    |\n|---------|----------------------------------------------|----------------------------------------------------------------------------------------------|------------|\n| open    | [bool](`bool`)                               | `True` to open the accordion panel, False to close it.                                       | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the control to be visible and interactable. Defaults to `None`. | `None`     |"
    },
    {
        "controller_name": "playwright.controller.Card",
        "attributes": "| Name | Description |\n| --- | --- |\n| [expect](#shiny.playwright.controller.Card.expect) | Expectation method equivalent to `playwright.expect(self.loc)`. |\n| [id](#shiny.playwright.controller.Card.id) | The browser DOM `id` of the UI element. |\n| [loc](#shiny.playwright.controller.Card.loc) | Playwright `Locator` for the card's value. |\n| [loc_body](#shiny.playwright.controller.Card.loc_body) | Playwright `Locator` for the card body. |\n| [loc_container](#shiny.playwright.controller.Card.loc_container) | Playwright `Locator` for the card container. |\n| [loc_footer](#shiny.playwright.controller.Card.loc_footer) | Playwright `Locator` for the card footer. |\n| [loc_title](#shiny.playwright.controller.Card.loc_title) | Playwright `Locator` for the card title. |\n| [page](#shiny.playwright.controller.Card.page) | Playwright `Page` of the Shiny app. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [expect_body](#shiny.playwright.controller.Card.expect_body) | Expect the card body element to have the specified text. |\n| [expect_footer](#shiny.playwright.controller.Card.expect_footer) | Expects the card footer to have a specific text. |\n| [expect_full_screen](#shiny.playwright.controller.Card.expect_full_screen) | Verifies if the full screen mode is currently open. |\n| [expect_full_screen_available](#shiny.playwright.controller.Card.expect_full_screen_available) | Expects whether full screen mode is available for the element. |\n| [expect_header](#shiny.playwright.controller.Card.expect_header) | Expects the card header to have a specific text. |\n| [expect_height](#shiny.playwright.controller.Card.expect_height) | Expects the card to have a specific height. |\n| [expect_max_height](#shiny.playwright.controller.Card.expect_max_height) | Expects the card to have a specific maximum height. |\n| [expect_min_height](#shiny.playwright.controller.Card.expect_min_height) | Expects the card to have a specific minimum height. |\n| [expect_width](#shiny.playwright.controller.Card.expect_width) | Expect the `width` attribute of a DOM element to have a specific value. |\n| [set_full_screen](#shiny.playwright.controller.Card.set_full_screen) | Sets the element to full screen mode or exits full screen mode. |\n\n### expect_body { #shiny.playwright.controller.Card.expect_body }\n\n```python\nplaywright.controller.Card.expect_body(value, *, timeout=None)\n```\n\nExpect the card body element to have the specified text.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                                                                                               | Description                                                          | Default    |\n|---------|------------------------------------------------------------------------------------------------------------------------------------|----------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) \\| [list](`list`)\\[[PatternOrStr](`shiny.playwright._types.PatternOrStr`)\\] | The expected text or a list of expected texts.                       | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)                                                                                       | The maximum time to wait for the text to appear. Defaults to `None`. | `None`     |\n\n### expect_footer { #shiny.playwright.controller.Card.expect_footer }\n\n```python\nplaywright.controller.Card.expect_footer(value, *, timeout=None)\n```\n\nExpects the card footer to have a specific text.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                           | Description                                                                            | Default    |\n|---------|----------------------------------------------------------------|----------------------------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) \\| None | The expected text pattern or string Note: None if the footer is expected to not exist. | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)                   | The maximum time to wait for the expectation to pass. Defaults to `None`.              | `None`     |\n\n### expect_full_screen { #shiny.playwright.controller.Card.expect_full_screen }\n\n```python\nplaywright.controller.Card.expect_full_screen(value, *, timeout=None)\n```\n\nVerifies if the full screen mode is currently open.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                         | Default    |\n|---------|----------------------------------------------|---------------------------------------------------------------------|------------|\n| value   | [bool](`bool`)                               | `True` if the item is to be in full screen mode, `False` otherwise. | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the verification. Defaults to `None`.  | `None`     |\n\n### expect_full_screen_available { #shiny.playwright.controller.Card.expect_full_screen_available }\n\n```python\nplaywright.controller.Card.expect_full_screen_available(value, *, timeout=None)\n```\n\nExpects whether full screen mode is available for the element.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                                              | Default    |\n|---------|----------------------------------------------|------------------------------------------------------------------------------------------|------------|\n| value   | [bool](`bool`)                               | `True` if the element is expected to be available for full screen mode, False otherwise. | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the expectation to pass. Defaults to `None`.                | `None`     |\n\n### expect_header { #shiny.playwright.controller.Card.expect_header }\n\n```python\nplaywright.controller.Card.expect_header(value, *, timeout=None)\n```\n\nExpects the card header to have a specific text.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                           | Description                                                                                | Default    |\n|---------|----------------------------------------------------------------|--------------------------------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) \\| None | The expected text pattern or string.  Note: `None` if the header is expected to not exist. | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)                   | The maximum time to wait for the expectation to pass. Defaults to `None`.                  | `None`     |\n\n### expect_height { #shiny.playwright.controller.Card.expect_height }\n\n```python\nplaywright.controller.Card.expect_height(value, *, timeout=None)\n```\n\nExpects the card to have a specific height.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                               | Description                                                               | Default    |\n|---------|----------------------------------------------------|---------------------------------------------------------------------------|------------|\n| value   | [StyleValue](`shiny.playwright._types.StyleValue`) | The expected height value.                                                | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)       | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### expect_max_height { #shiny.playwright.controller.Card.expect_max_height }\n\n```python\nplaywright.controller.Card.expect_max_height(value, *, timeout=None)\n```\n\nExpects the card to have a specific maximum height.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                               | Description                                                               | Default    |\n|---------|----------------------------------------------------|---------------------------------------------------------------------------|------------|\n| value   | [StyleValue](`shiny.playwright._types.StyleValue`) | The expected maximum height value.                                        | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)       | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### expect_min_height { #shiny.playwright.controller.Card.expect_min_height }\n\n```python\nplaywright.controller.Card.expect_min_height(value, *, timeout=None)\n```\n\nExpects the card to have a specific minimum height.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                               | Description                                                               | Default    |\n|---------|----------------------------------------------------|---------------------------------------------------------------------------|------------|\n| value   | [StyleValue](`shiny.playwright._types.StyleValue`) | The expected minimum height value.                                        | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)       | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### expect_width { #shiny.playwright.controller.Card.expect_width }\n\n```python\nplaywright.controller.Card.expect_width(value, *, timeout=None)\n```\n\nExpect the `width` attribute of a DOM element to have a specific value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                                                       | Default    |\n|---------|--------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected value of the `width` attribute.                                      | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### set_full_screen { #shiny.playwright.controller.Card.set_full_screen }\n\n```python\nplaywright.controller.Card.set_full_screen(open, *, timeout=None)\n```\n\nSets the element to full screen mode or exits full screen mode.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                                       | Default    |\n|---------|----------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| open    | [bool](`bool`)                               | `True` to open the element in full screen mode, `False` to exit full screen mode. | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the operation to complete. Defaults to `None`.       | `None`     |"
    },
    {
        "controller_name": "playwright.controller.Chat",
        "attributes": "| Name | Description |\n| --- | --- |\n| [expect](#shiny.playwright.controller.Chat.expect) | Expectation method equivalent to `playwright.expect(self.loc)`. |\n| [id](#shiny.playwright.controller.Chat.id) | The browser DOM `id` of the UI element. |\n| [loc](#shiny.playwright.controller.Chat.loc) | Playwright `Locator` for the chat. |\n| [loc_input](#shiny.playwright.controller.Chat.loc_input) | Playwright `Locator` for the chat's <textarea> input. |\n| [loc_input_button](#shiny.playwright.controller.Chat.loc_input_button) | Playwright `Locator` for the chat's <button> input. |\n| [loc_input_container](#shiny.playwright.controller.Chat.loc_input_container) | Playwright `Locator` for the chat input container. |\n| [loc_latest_message](#shiny.playwright.controller.Chat.loc_latest_message) | Playwright `Locator` for the last message in the chat. |\n| [loc_messages](#shiny.playwright.controller.Chat.loc_messages) | Playwright `Locator` for the chat messages. |\n| [page](#shiny.playwright.controller.Chat.page) | Playwright `Page` of the Shiny app. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [expect_latest_message](#shiny.playwright.controller.Chat.expect_latest_message) | Expects the last message in the chat. |\n| [expect_messages](#shiny.playwright.controller.Chat.expect_messages) | Expects the chat messages. |\n| [expect_user_input](#shiny.playwright.controller.Chat.expect_user_input) | Expects the user message in the chat. |\n| [send_user_input](#shiny.playwright.controller.Chat.send_user_input) | Sends the user message in the chat. |\n| [set_user_input](#shiny.playwright.controller.Chat.set_user_input) | Sets the user message in the chat. |\n\n### expect_latest_message { #shiny.playwright.controller.Chat.expect_latest_message }\n\n```python\nplaywright.controller.Chat.expect_latest_message(value, *, timeout=None)\n```\n\nExpects the last message in the chat.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                               | Default    |\n|---------|--------------------------------------------------------|---------------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected last message.                                                | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### expect_messages { #shiny.playwright.controller.Chat.expect_messages }\n\n```python\nplaywright.controller.Chat.expect_messages(value, *, timeout=None)\n```\n\nExpects the chat messages.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                               | Default    |\n|---------|--------------------------------------------------------|---------------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected messages.                                                    | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### expect_user_input { #shiny.playwright.controller.Chat.expect_user_input }\n\n```python\nplaywright.controller.Chat.expect_user_input(value, *, timeout=None)\n```\n\nExpects the user message in the chat.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                               | Default    |\n|---------|--------------------------------------------------------|---------------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected user message.                                                | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### send_user_input { #shiny.playwright.controller.Chat.send_user_input }\n\n```python\nplaywright.controller.Chat.send_user_input(method='enter', timeout=None)\n```\n\nSends the user message in the chat.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                            | Description                                                                                     | Default   |\n|---------|-------------------------------------------------|-------------------------------------------------------------------------------------------------|-----------|\n| method  | [Literal](`typing.Literal`)\\['enter', 'click'\\] | The method to send the user message. Defaults to `\"enter\"`.                                     | `'enter'` |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)    | The maximum time to wait for the chat input to be visible and interactable. Defaults to `None`. | `None`    |\n\n### set_user_input { #shiny.playwright.controller.Chat.set_user_input }\n\n```python\nplaywright.controller.Chat.set_user_input(value, *, timeout=None)\n```\n\nSets the user message in the chat.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                                                     | Default    |\n|---------|----------------------------------------------|-------------------------------------------------------------------------------------------------|------------|\n| value   | [str](`str`)                                 | The message to send.                                                                            | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the chat input to be visible and interactable. Defaults to `None`. | `None`     |"
    },
    {
        "controller_name": "playwright.controller.DownloadButton",
        "attributes": "| Name | Description |\n| --- | --- |\n| [expect](#shiny.playwright.controller.DownloadButton.expect) | Expectation method equivalent to `playwright.expect(self.loc)`. |\n| [id](#shiny.playwright.controller.DownloadButton.id) | The browser DOM `id` of the UI element. |\n| [loc](#shiny.playwright.controller.DownloadButton.loc) | Playwright `Locator` of the UI element. |\n| [page](#shiny.playwright.controller.DownloadButton.page) | Playwright `Page` of the Shiny app. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [click](#shiny.playwright.controller.DownloadButton.click) | Clicks the input action. |\n| [expect_label](#shiny.playwright.controller.DownloadButton.expect_label) | Expect the label of the input button to have a specific value. |\n| [expect_width](#shiny.playwright.controller.DownloadButton.expect_width) | Expect the `width` attribute of a DOM element to have a specific value. |\n\n### click { #shiny.playwright.controller.DownloadButton.click }\n\n```python\nplaywright.controller.DownloadButton.click(timeout=None, **kwargs)\n```\n\nClicks the input action.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                                      | Default   |\n|---------|----------------------------------------------|----------------------------------------------------------------------------------|-----------|\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the input action to be clicked. Defaults to `None`. | `None`    |\n\n### expect_label { #shiny.playwright.controller.DownloadButton.expect_label }\n\n```python\nplaywright.controller.DownloadButton.expect_label(value, *, timeout=None)\n```\n\nExpect the label of the input button to have a specific value.\n\nNote: This must include the icon if it is present!\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                                       | Default    |\n|---------|--------------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected value of the label.                                                  | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### expect_width { #shiny.playwright.controller.DownloadButton.expect_width }\n\n```python\nplaywright.controller.DownloadButton.expect_width(value, *, timeout=None)\n```\n\nExpect the `width` attribute of a DOM element to have a specific value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                                                       | Default    |\n|---------|--------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected value of the `width` attribute.                                      | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |"
    },
    {
        "controller_name": "playwright.controller.DownloadLink",
        "attributes": "| Name | Description |\n| --- | --- |\n| [expect](#shiny.playwright.controller.DownloadLink.expect) | Expectation method equivalent to `playwright.expect(self.loc)`. |\n| [id](#shiny.playwright.controller.DownloadLink.id) | The browser DOM `id` of the UI element. |\n| [loc](#shiny.playwright.controller.DownloadLink.loc) | Playwright `Locator` of the UI element. |\n| [page](#shiny.playwright.controller.DownloadLink.page) | Playwright `Page` of the Shiny app. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [click](#shiny.playwright.controller.DownloadLink.click) | Clicks the input action. |\n| [expect_label](#shiny.playwright.controller.DownloadLink.expect_label) | Expect the label of the input button to have a specific value. |\n\n### click { #shiny.playwright.controller.DownloadLink.click }\n\n```python\nplaywright.controller.DownloadLink.click(timeout=None, **kwargs)\n```\n\nClicks the input action.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                                      | Default   |\n|---------|----------------------------------------------|----------------------------------------------------------------------------------|-----------|\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the input action to be clicked. Defaults to `None`. | `None`    |\n\n### expect_label { #shiny.playwright.controller.DownloadLink.expect_label }\n\n```python\nplaywright.controller.DownloadLink.expect_label(value, *, timeout=None)\n```\n\nExpect the label of the input button to have a specific value.\n\nNote: This must include the icon if it is present!\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                                       | Default    |\n|---------|--------------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected value of the label.                                                  | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |"
    },
    {
        "controller_name": "playwright.controller.InputActionLink",
        "attributes": "| Name | Description |\n| --- | --- |\n| [expect](#shiny.playwright.controller.InputActionLink.expect) | Expectation method equivalent to `playwright.expect(self.loc)`. |\n| [id](#shiny.playwright.controller.InputActionLink.id) | The browser DOM `id` of the UI element. |\n| [loc](#shiny.playwright.controller.InputActionLink.loc) | Playwright `Locator` of the UI element. |\n| [page](#shiny.playwright.controller.InputActionLink.page) | Playwright `Page` of the Shiny app. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [click](#shiny.playwright.controller.InputActionLink.click) | Clicks the input action. |\n| [expect_label](#shiny.playwright.controller.InputActionLink.expect_label) | Expect the label of the input button to have a specific value. |\n\n### click { #shiny.playwright.controller.InputActionLink.click }\n\n```python\nplaywright.controller.InputActionLink.click(timeout=None, **kwargs)\n```\n\nClicks the input action.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                                      | Default   |\n|---------|----------------------------------------------|----------------------------------------------------------------------------------|-----------|\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the input action to be clicked. Defaults to `None`. | `None`    |\n\n### expect_label { #shiny.playwright.controller.InputActionLink.expect_label }\n\n```python\nplaywright.controller.InputActionLink.expect_label(value, *, timeout=None)\n```\n\nExpect the label of the input button to have a specific value.\n\nNote: This must include the icon if it is present!\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                                       | Default    |\n|---------|--------------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected value of the label.                                                  | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |"
    },
    {
        "controller_name": "playwright.controller.InputCheckbox",
        "attributes": "| Name | Description |\n| --- | --- |\n| [expect](#shiny.playwright.controller.InputCheckbox.expect) | Expectation method equivalent to `playwright.expect(self.loc)`. |\n| [id](#shiny.playwright.controller.InputCheckbox.id) | The browser DOM `id` of the UI element. |\n| [loc](#shiny.playwright.controller.InputCheckbox.loc) | Playwright `Locator` of the UI element. |\n| [loc_container](#shiny.playwright.controller.InputCheckbox.loc_container) | Playwright `Locator` for the container of the UI element. |\n| [loc_label](#shiny.playwright.controller.InputCheckbox.loc_label) | Playwright `Locator` for the label of the UI element. |\n| [page](#shiny.playwright.controller.InputCheckbox.page) | Playwright `Page` of the Shiny app. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [expect_checked](#shiny.playwright.controller.InputCheckbox.expect_checked) | Expect the input checkbox to be checked. |\n| [expect_label](#shiny.playwright.controller.InputCheckbox.expect_label) | Expect the label of the input to have a specific text. |\n| [expect_width](#shiny.playwright.controller.InputCheckbox.expect_width) | Expect the input element to have a specific width. |\n| [set](#shiny.playwright.controller.InputCheckbox.set) | Sets the input checkbox. |\n\n### expect_checked { #shiny.playwright.controller.InputCheckbox.expect_checked }\n\n```python\nplaywright.controller.InputCheckbox.expect_checked(value, *, timeout=None)\n```\n\nExpect the input checkbox to be checked.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                                       | Default    |\n|---------|----------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [bool](`bool`)                               | Whether the input checkbox is checked.                                            | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### expect_label { #shiny.playwright.controller.InputCheckbox.expect_label }\n\n```python\nplaywright.controller.InputCheckbox.expect_label(value, *, timeout=None)\n```\n\nExpect the label of the input to have a specific text.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                                       | Default    |\n|---------|--------------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected text value of the label.                                             | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### expect_width { #shiny.playwright.controller.InputCheckbox.expect_width }\n\n```python\nplaywright.controller.InputCheckbox.expect_width(value, *, timeout=None)\n```\n\nExpect the input element to have a specific width.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                                                       | Default    |\n|---------|--------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected width.                                                               | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### set { #shiny.playwright.controller.InputCheckbox.set }\n\n```python\nplaywright.controller.InputCheckbox.set(value, *, timeout=None, **kwargs)\n```\n\nSets the input checkbox.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                                    | Default    |\n|---------|----------------------------------------------|--------------------------------------------------------------------------------|------------|\n| value   | [bool](`bool`)                               | The value of the input checkbox.                                               | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the input checkbox to be set. Defaults to `None`. | `None`     |"
    },
    {
        "controller_name": "playwright.controller.InputCheckboxGroup",
        "attributes": "| Name | Description |\n| --- | --- |\n| [expect](#shiny.playwright.controller.InputCheckboxGroup.expect) | Expectation method equivalent to `playwright.expect(self.loc)`. |\n| [id](#shiny.playwright.controller.InputCheckboxGroup.id) | The browser DOM `id` of the UI element. |\n| [loc](#shiny.playwright.controller.InputCheckboxGroup.loc) | Playwright `Locator` of the UI element. |\n| [loc_container](#shiny.playwright.controller.InputCheckboxGroup.loc_container) | Playwright `Locator` for the container of the UI element. |\n| [loc_label](#shiny.playwright.controller.InputCheckboxGroup.loc_label) | Playwright `Locator` for the label of the UI element. |\n| [page](#shiny.playwright.controller.InputCheckboxGroup.page) | Playwright `Page` of the Shiny app. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [expect_choice_labels](#shiny.playwright.controller.InputCheckboxGroup.expect_choice_labels) | Expect the labels of the choices. |\n| [expect_choices](#shiny.playwright.controller.InputCheckboxGroup.expect_choices) | Expect the checkbox choices. |\n| [expect_inline](#shiny.playwright.controller.InputCheckboxGroup.expect_inline) | Expect the input to be inline. |\n| [expect_label](#shiny.playwright.controller.InputCheckboxGroup.expect_label) | Expect the label of the input to have a specific text. |\n| [expect_selected](#shiny.playwright.controller.InputCheckboxGroup.expect_selected) | Expect the selected checkboxes. |\n| [expect_width](#shiny.playwright.controller.InputCheckboxGroup.expect_width) | Expect the input element to have a specific width. |\n| [set](#shiny.playwright.controller.InputCheckboxGroup.set) | Set the selected checkboxes. |\n\n### expect_choice_labels { #shiny.playwright.controller.InputCheckboxGroup.expect_choice_labels }\n\n```python\nplaywright.controller.InputCheckboxGroup.expect_choice_labels(\n    value,\n    *,\n    timeout=None,\n)\n```\n\nExpect the labels of the choices.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                           | Description                                          | Default    |\n|---------|----------------------------------------------------------------|------------------------------------------------------|------------|\n| value   | [ListPatternOrStr](`shiny.playwright._types.ListPatternOrStr`) | The expected labels.                                 | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)                   | The timeout for the expectation. Defaults to `None`. | `None`     |\n\n### expect_choices { #shiny.playwright.controller.InputCheckboxGroup.expect_choices }\n\n```python\nplaywright.controller.InputCheckboxGroup.expect_choices(value, *, timeout=None)\n```\n\nExpect the checkbox choices.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                           | Description                                          | Default    |\n|---------|----------------------------------------------------------------|------------------------------------------------------|------------|\n| value   | [ListPatternOrStr](`shiny.playwright._types.ListPatternOrStr`) | The expected choices.                                | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)                   | The timeout for the expectation. Defaults to `None`. | `None`     |\n\n### expect_inline { #shiny.playwright.controller.InputCheckboxGroup.expect_inline }\n\n```python\nplaywright.controller.InputCheckboxGroup.expect_inline(value, *, timeout=None)\n```\n\nExpect the input to be inline.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                          | Default    |\n|---------|----------------------------------------------|------------------------------------------------------|------------|\n| value   | [bool](`bool`)                               | Whether the input is inline.                         | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The timeout for the expectation. Defaults to `None`. | `None`     |\n\n### expect_label { #shiny.playwright.controller.InputCheckboxGroup.expect_label }\n\n```python\nplaywright.controller.InputCheckboxGroup.expect_label(value, *, timeout=None)\n```\n\nExpect the label of the input to have a specific text.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                                       | Default    |\n|---------|--------------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected text value of the label.                                             | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### expect_selected { #shiny.playwright.controller.InputCheckboxGroup.expect_selected }\n\n```python\nplaywright.controller.InputCheckboxGroup.expect_selected(value, *, timeout=None)\n```\n\nExpect the selected checkboxes.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                           | Description                                          | Default    |\n|---------|----------------------------------------------------------------|------------------------------------------------------|------------|\n| value   | [ListPatternOrStr](`shiny.playwright._types.ListPatternOrStr`) | The expected values of the selected checkboxes.      | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)                   | The timeout for the expectation. Defaults to `None`. | `None`     |\n\n### expect_width { #shiny.playwright.controller.InputCheckboxGroup.expect_width }\n\n```python\nplaywright.controller.InputCheckboxGroup.expect_width(value, *, timeout=None)\n```\n\nExpect the input element to have a specific width.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                                                       | Default    |\n|---------|--------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected width.                                                               | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### set { #shiny.playwright.controller.InputCheckboxGroup.set }\n\n```python\nplaywright.controller.InputCheckboxGroup.set(\n    selected,\n    *,\n    timeout=None,\n    **kwargs,\n)\n```\n\nSet the selected checkboxes.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name     | Type                                                     | Description                                     | Default    |\n|----------|----------------------------------------------------------|-------------------------------------------------|------------|\n| selected | [ListOrTuple](`shiny.types.ListOrTuple`)\\[[str](`str`)\\] | The values of the selected checkboxes.          | _required_ |\n| timeout  | [Timeout](`shiny.playwright._types.Timeout`)             | The timeout for the action. Defaults to `None`. | `None`     |"
    },
    {
        "controller_name": "playwright.controller.InputDarkMode",
        "attributes": "| Name | Description |\n| --- | --- |\n| [expect](#shiny.playwright.controller.InputDarkMode.expect) | Expectation method equivalent to `playwright.expect(self.loc)`. |\n| [id](#shiny.playwright.controller.InputDarkMode.id) | The browser DOM `id` of the UI element. |\n| [loc](#shiny.playwright.controller.InputDarkMode.loc) | Playwright `Locator` of the UI element. |\n| [page](#shiny.playwright.controller.InputDarkMode.page) | Playwright `Page` of the Shiny app. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [click](#shiny.playwright.controller.InputDarkMode.click) | Clicks the input dark mode. |\n| [expect_attribute](#shiny.playwright.controller.InputDarkMode.expect_attribute) | Expect the attribute named `attribute` of the input dark mode to have a specific value. |\n| [expect_mode](#shiny.playwright.controller.InputDarkMode.expect_mode) | Expect the `mode` attribute of the input dark mode to have a specific value. |\n| [expect_page_mode](#shiny.playwright.controller.InputDarkMode.expect_page_mode) | Expect the page to have a specific dark mode value. |\n\n### click { #shiny.playwright.controller.InputDarkMode.click }\n\n```python\nplaywright.controller.InputDarkMode.click(timeout=None)\n```\n\nClicks the input dark mode.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                                         | Default   |\n|---------|----------------------------------------------|-------------------------------------------------------------------------------------|-----------|\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the input dark mode to be clicked. Defaults to `None`. | `None`    |\n\n### expect_attribute { #shiny.playwright.controller.InputDarkMode.expect_attribute }\n\n```python\nplaywright.controller.InputDarkMode.expect_attribute(value, *, timeout=None)\n```\n\nExpect the attribute named `attribute` of the input dark mode to have a specific value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                                       | Default    |\n|---------|----------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [str](`str`)                                 | The expected value of the `attribute` attribute.                                  | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### expect_mode { #shiny.playwright.controller.InputDarkMode.expect_mode }\n\n```python\nplaywright.controller.InputDarkMode.expect_mode(value, *, timeout=None)\n```\n\nExpect the `mode` attribute of the input dark mode to have a specific value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                                       | Default    |\n|---------|----------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [str](`str`)                                 | The expected value of the `mode` attribute.                                       | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### expect_page_mode { #shiny.playwright.controller.InputDarkMode.expect_page_mode }\n\n```python\nplaywright.controller.InputDarkMode.expect_page_mode(value, *, timeout=None)\n```\n\nExpect the page to have a specific dark mode value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                                       | Default    |\n|---------|----------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [str](`str`)                                 | The expected value of the page's dark mode.                                       | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |"
    },
    {
        "controller_name": "playwright.controller.InputDate",
        "attributes": "| Name | Description |\n| --- | --- |\n| [expect](#shiny.playwright.controller.InputDate.expect) | Expectation method equivalent to `playwright.expect(self.loc)`. |\n| [id](#shiny.playwright.controller.InputDate.id) | The browser DOM `id` of the UI element. |\n| [loc](#shiny.playwright.controller.InputDate.loc) | Playwright `Locator` of the UI element. |\n| [loc_container](#shiny.playwright.controller.InputDate.loc_container) | Playwright `Locator` for the container of the UI element. |\n| [loc_label](#shiny.playwright.controller.InputDate.loc_label) | Playwright `Locator` for the label of the UI element. |\n| [page](#shiny.playwright.controller.InputDate.page) | Playwright `Page` of the Shiny app. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [expect_autoclose](#shiny.playwright.controller.InputDate.expect_autoclose) | Asserts that the input element has the expected `data-date-autoclose` attribute value. |\n| [expect_datesdisabled](#shiny.playwright.controller.InputDate.expect_datesdisabled) | Asserts that the input element has the expected `data-date-dates-disabled` attribute value. |\n| [expect_daysofweekdisabled](#shiny.playwright.controller.InputDate.expect_daysofweekdisabled) | Asserts that the input element has the expected `data-date-days-of-week-disabled` attribute value. |\n| [expect_format](#shiny.playwright.controller.InputDate.expect_format) | Asserts that the input element has the expected `data-date-format` attribute value. |\n| [expect_label](#shiny.playwright.controller.InputDate.expect_label) | Expect the label of the input to have a specific text. |\n| [expect_language](#shiny.playwright.controller.InputDate.expect_language) | Asserts that the input element has the expected `data-date-language` attribute value. |\n| [expect_max_date](#shiny.playwright.controller.InputDate.expect_max_date) | Asserts that the input element has the expected `data-max-date` attribute value. |\n| [expect_min_date](#shiny.playwright.controller.InputDate.expect_min_date) | Asserts that the input element has the expected `data-min-date` attribute value. |\n| [expect_startview](#shiny.playwright.controller.InputDate.expect_startview) | Asserts that the input element has the expected `data-date-start-view` attribute value. |\n| [expect_value](#shiny.playwright.controller.InputDate.expect_value) | Asserts that the input element has the expected value. |\n| [expect_weekstart](#shiny.playwright.controller.InputDate.expect_weekstart) | Asserts that the input element has the expected `data-date-week-start` attribute value. |\n| [expect_width](#shiny.playwright.controller.InputDate.expect_width) | Expect the input element to have a specific width. |\n| [set](#shiny.playwright.controller.InputDate.set) | Sets the text value |\n\n### expect_autoclose { #shiny.playwright.controller.InputDate.expect_autoclose }\n\n```python\nplaywright.controller.InputDate.expect_autoclose(value, *, timeout=None)\n```\n\nAsserts that the input element has the expected `data-date-autoclose` attribute value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                           | Description                                                           | Default    |\n|---------|------------------------------------------------|-----------------------------------------------------------------------|------------|\n| value   | [Literal](`typing.Literal`)\\['true', 'false'\\] | The expected `data-date-autoclose` attribute value.                   | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)   | The maximum time to wait for the value to appear. Defaults to `None`. | `None`     |\n\n### expect_datesdisabled { #shiny.playwright.controller.InputDate.expect_datesdisabled }\n\n```python\nplaywright.controller.InputDate.expect_datesdisabled(value, *, timeout=None)\n```\n\nAsserts that the input element has the expected `data-date-dates-disabled` attribute value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                           | Default    |\n|---------|----------------------------------------------|-----------------------------------------------------------------------|------------|\n| value   | [list](`list`)\\[[str](`str`)\\] \\| None       | The expected `data-date-dates-disabled` attribute value.              | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the value to appear. Defaults to `None`. | `None`     |\n\n### expect_daysofweekdisabled { #shiny.playwright.controller.InputDate.expect_daysofweekdisabled }\n\n```python\nplaywright.controller.InputDate.expect_daysofweekdisabled(\n    value,\n    *,\n    timeout=None,\n)\n```\n\nAsserts that the input element has the expected `data-date-days-of-week-disabled` attribute value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                           | Default    |\n|---------|----------------------------------------------|-----------------------------------------------------------------------|------------|\n| value   | [list](`list`)\\[[int](`int`)\\] \\| None       | The expected `data-date-days-of-week-disabled` attribute value.       | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the value to appear. Defaults to `None`. | `None`     |\n\n### expect_format { #shiny.playwright.controller.InputDate.expect_format }\n\n```python\nplaywright.controller.InputDate.expect_format(value, *, timeout=None)\n```\n\nAsserts that the input element has the expected `data-date-format` attribute value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                                           | Default    |\n|---------|--------------------------------------------------|-----------------------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected `data-date-format` attribute value.                      | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The maximum time to wait for the value to appear. Defaults to `None`. | `None`     |\n\n### expect_label { #shiny.playwright.controller.InputDate.expect_label }\n\n```python\nplaywright.controller.InputDate.expect_label(value, *, timeout=None)\n```\n\nExpect the label of the input to have a specific text.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                                       | Default    |\n|---------|--------------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected text value of the label.                                             | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### expect_language { #shiny.playwright.controller.InputDate.expect_language }\n\n```python\nplaywright.controller.InputDate.expect_language(value, *, timeout=None)\n```\n\nAsserts that the input element has the expected `data-date-language` attribute value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                                           | Default    |\n|---------|--------------------------------------------------|-----------------------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected `data-date-language` attribute value.                    | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The maximum time to wait for the value to appear. Defaults to `None`. | `None`     |\n\n### expect_max_date { #shiny.playwright.controller.InputDate.expect_max_date }\n\n```python\nplaywright.controller.InputDate.expect_max_date(value, *, timeout=None)\n```\n\nAsserts that the input element has the expected `data-max-date` attribute value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                                           | Default    |\n|---------|--------------------------------------------------|-----------------------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected `data-max-date` attribute value.                         | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The maximum time to wait for the value to appear. Defaults to `None`. | `None`     |\n\n### expect_min_date { #shiny.playwright.controller.InputDate.expect_min_date }\n\n```python\nplaywright.controller.InputDate.expect_min_date(value, *, timeout=None)\n```\n\nAsserts that the input element has the expected `data-min-date` attribute value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                                           | Default    |\n|---------|--------------------------------------------------|-----------------------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected `data-min-date` attribute value.                         | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The maximum time to wait for the value to appear. Defaults to `None`. | `None`     |\n\n### expect_startview { #shiny.playwright.controller.InputDate.expect_startview }\n\n```python\nplaywright.controller.InputDate.expect_startview(value, *, timeout=None)\n```\n\nAsserts that the input element has the expected `data-date-start-view` attribute value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                                           | Default    |\n|---------|--------------------------------------------------|-----------------------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected `data-date-start-view` attribute value.                  | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The maximum time to wait for the value to appear. Defaults to `None`. | `None`     |\n\n### expect_value { #shiny.playwright.controller.InputDate.expect_value }\n\n```python\nplaywright.controller.InputDate.expect_value(value, *, timeout=None)\n```\n\nAsserts that the input element has the expected value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                           | Default    |\n|---------|--------------------------------------------------------|-----------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected value.                                                   | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the value to appear. Defaults to `None`. | `None`     |\n\n### expect_weekstart { #shiny.playwright.controller.InputDate.expect_weekstart }\n\n```python\nplaywright.controller.InputDate.expect_weekstart(value, *, timeout=None)\n```\n\nAsserts that the input element has the expected `data-date-week-start` attribute value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                             | Description                                                           | Default    |\n|---------|------------------------------------------------------------------|-----------------------------------------------------------------------|------------|\n| value   | [int](`int`) \\| [AttrValue](`shiny.playwright._types.AttrValue`) | The expected `data-date-week-start` attribute value.                  | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)                     | The maximum time to wait for the value to appear. Defaults to `None`. | `None`     |\n\n### expect_width { #shiny.playwright.controller.InputDate.expect_width }\n\n```python\nplaywright.controller.InputDate.expect_width(value, *, timeout=None)\n```\n\nExpect the input element to have a specific width.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                                                       | Default    |\n|---------|--------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected width.                                                               | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### set { #shiny.playwright.controller.InputDate.set }\n\n```python\nplaywright.controller.InputDate.set(value, *, timeout=None)\n```\n\nSets the text value\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                          | Default    |\n|---------|----------------------------------------------|----------------------------------------------------------------------|------------|\n| value   | [str](`str`)                                 | The text to set.                                                     | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the text to be set. Defaults to `None`. | `None`     |"
    },
    {
        "controller_name": "playwright.controller.InputDateRange",
        "attributes": "| Name | Description |\n| --- | --- |\n| [date_end](#shiny.playwright.controller.InputDateRange.date_end) | The end date input element. |\n| [date_start](#shiny.playwright.controller.InputDateRange.date_start) | The start date input element. |\n| [expect](#shiny.playwright.controller.InputDateRange.expect) | Expectation method equivalent to `playwright.expect(self.loc)`. |\n| [id](#shiny.playwright.controller.InputDateRange.id) | The browser DOM `id` of the UI element. |\n| [loc](#shiny.playwright.controller.InputDateRange.loc) | Playwright `Locator` of the UI element. |\n| [loc_container](#shiny.playwright.controller.InputDateRange.loc_container) | Playwright `Locator` for the container of the UI element. |\n| [loc_end](#shiny.playwright.controller.InputDateRange.loc_end) | Playwright `Locator` of the end date input element. |\n| [loc_label](#shiny.playwright.controller.InputDateRange.loc_label) | Playwright `Locator` for the label of the UI element. |\n| [loc_separator](#shiny.playwright.controller.InputDateRange.loc_separator) | Playwright `Locator` of the separator between the two input elements. |\n| [loc_start](#shiny.playwright.controller.InputDateRange.loc_start) | Playwright `Locator` of the start date input element. |\n| [page](#shiny.playwright.controller.InputDateRange.page) | Playwright `Page` of the Shiny app. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [expect_autoclose](#shiny.playwright.controller.InputDateRange.expect_autoclose) | Asserts that the input element has the expected autoclose value. |\n| [expect_format](#shiny.playwright.controller.InputDateRange.expect_format) | Asserts that the input element has the expected format. |\n| [expect_label](#shiny.playwright.controller.InputDateRange.expect_label) | Expect the label of the input to have a specific text. |\n| [expect_language](#shiny.playwright.controller.InputDateRange.expect_language) | Asserts that the input element has the expected language. |\n| [expect_max_date](#shiny.playwright.controller.InputDateRange.expect_max_date) | Asserts that the input element has the expected maximum date. |\n| [expect_min_date](#shiny.playwright.controller.InputDateRange.expect_min_date) | Asserts that the input element has the expected minimum date. |\n| [expect_separator](#shiny.playwright.controller.InputDateRange.expect_separator) | Asserts that the input element has the expected separator. |\n| [expect_startview](#shiny.playwright.controller.InputDateRange.expect_startview) | Asserts that the input element has the expected start view. |\n| [expect_value](#shiny.playwright.controller.InputDateRange.expect_value) | Asserts that the input element has the expected value. |\n| [expect_weekstart](#shiny.playwright.controller.InputDateRange.expect_weekstart) | Asserts that the input element has the expected week start. |\n| [expect_width](#shiny.playwright.controller.InputDateRange.expect_width) | Expect the input element to have a specific width. |\n| [set](#shiny.playwright.controller.InputDateRange.set) | Sets the value of the input element. |\n\n### expect_autoclose { #shiny.playwright.controller.InputDateRange.expect_autoclose }\n\n```python\nplaywright.controller.InputDateRange.expect_autoclose(value, *, timeout=None)\n```\n\nAsserts that the input element has the expected autoclose value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                           | Description                                                           | Default    |\n|---------|------------------------------------------------|-----------------------------------------------------------------------|------------|\n| value   | [Literal](`typing.Literal`)\\['true', 'false'\\] | The expected autoclose value.                                         | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)   | The maximum time to wait for the value to appear. Defaults to `None`. | `None`     |\n\n### expect_format { #shiny.playwright.controller.InputDateRange.expect_format }\n\n```python\nplaywright.controller.InputDateRange.expect_format(value, *, timeout=None)\n```\n\nAsserts that the input element has the expected format.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                                            | Default    |\n|---------|--------------------------------------------------|------------------------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected format.                                                   | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The maximum time to wait for the format to appear. Defaults to `None`. | `None`     |\n\n### expect_label { #shiny.playwright.controller.InputDateRange.expect_label }\n\n```python\nplaywright.controller.InputDateRange.expect_label(value, *, timeout=None)\n```\n\nExpect the label of the input to have a specific text.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                                       | Default    |\n|---------|--------------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected text value of the label.                                             | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### expect_language { #shiny.playwright.controller.InputDateRange.expect_language }\n\n```python\nplaywright.controller.InputDateRange.expect_language(value, *, timeout=None)\n```\n\nAsserts that the input element has the expected language.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                                              | Default    |\n|---------|--------------------------------------------------|--------------------------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected language.                                                   | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The maximum time to wait for the language to appear. Defaults to `None`. | `None`     |\n\n### expect_max_date { #shiny.playwright.controller.InputDateRange.expect_max_date }\n\n```python\nplaywright.controller.InputDateRange.expect_max_date(value, *, timeout=None)\n```\n\nAsserts that the input element has the expected maximum date.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                                                  | Default    |\n|---------|--------------------------------------------------|------------------------------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected maximum date.                                                   | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The maximum time to wait for the maximum date to appear. Defaults to `None`. | `None`     |\n\n### expect_min_date { #shiny.playwright.controller.InputDateRange.expect_min_date }\n\n```python\nplaywright.controller.InputDateRange.expect_min_date(value, *, timeout=None)\n```\n\nAsserts that the input element has the expected minimum date.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                                                  | Default    |\n|---------|--------------------------------------------------|------------------------------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected minimum date.                                                   | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The maximum time to wait for the minimum date to appear. Defaults to `None`. | `None`     |\n\n### expect_separator { #shiny.playwright.controller.InputDateRange.expect_separator }\n\n```python\nplaywright.controller.InputDateRange.expect_separator(value, *, timeout=None)\n```\n\nAsserts that the input element has the expected separator.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                               | Default    |\n|---------|--------------------------------------------------------|---------------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected separator.                                                   | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the separator to appear. Defaults to `None`. | `None`     |\n\n### expect_startview { #shiny.playwright.controller.InputDateRange.expect_startview }\n\n```python\nplaywright.controller.InputDateRange.expect_startview(value, *, timeout=None)\n```\n\nAsserts that the input element has the expected start view.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                                                | Default    |\n|---------|--------------------------------------------------|----------------------------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected start view.                                                   | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The maximum time to wait for the start view to appear. Defaults to `None`. | `None`     |\n\n### expect_value { #shiny.playwright.controller.InputDateRange.expect_value }\n\n```python\nplaywright.controller.InputDateRange.expect_value(value, *, timeout=None)\n```\n\nAsserts that the input element has the expected value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                                                                                                                                                                                                                                                                                                                                                                                                                                 | Description                                                                                     | Default    |\n|---------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------|------------|\n| value   | [typing](`typing`).[Tuple](`typing.Tuple`)\\[[PatternOrStr](`shiny.playwright._types.PatternOrStr`), [PatternOrStr](`shiny.playwright._types.PatternOrStr`)\\] \\| [typing](`typing`).[Tuple](`typing.Tuple`)\\[[PatternOrStr](`shiny.playwright._types.PatternOrStr`), [MISSING_TYPE](`shiny.types.MISSING_TYPE`)\\] \\| [typing](`typing`).[Tuple](`typing.Tuple`)\\[[MISSING_TYPE](`shiny.types.MISSING_TYPE`), [PatternOrStr](`shiny.playwright._types.PatternOrStr`)\\] | The expected value. The first element is the start date and the second element is the end date. | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)                                                                                                                                                                                                                                                                                                                                                                                                                         | The maximum time to wait for the value to appear. Defaults to `None`.                           | `None`     |\n\n### expect_weekstart { #shiny.playwright.controller.InputDateRange.expect_weekstart }\n\n```python\nplaywright.controller.InputDateRange.expect_weekstart(value, *, timeout=None)\n```\n\nAsserts that the input element has the expected week start.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                             | Description                                                                | Default    |\n|---------|------------------------------------------------------------------|----------------------------------------------------------------------------|------------|\n| value   | [int](`int`) \\| [AttrValue](`shiny.playwright._types.AttrValue`) | The expected week start.                                                   | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)                     | The maximum time to wait for the week start to appear. Defaults to `None`. | `None`     |\n\n### expect_width { #shiny.playwright.controller.InputDateRange.expect_width }\n\n```python\nplaywright.controller.InputDateRange.expect_width(value, *, timeout=None)\n```\n\nExpect the input element to have a specific width.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                                                       | Default    |\n|---------|--------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected width.                                                               | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### set { #shiny.playwright.controller.InputDateRange.set }\n\n```python\nplaywright.controller.InputDateRange.set(value, *, timeout=None)\n```\n\nSets the value of the input element.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                                                     | Description                                                                                   | Default    |\n|---------|------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------|------------|\n| value   | [typing](`typing`).[Tuple](`typing.Tuple`)\\[[str](`str`) \\| None, [str](`str`) \\| None\\] | The value to set. The first element is the start date and the second element is the end date. | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)                                             | The maximum time to wait for the value to be set. Defaults to `None`.                         | `None`     |"
    },
    {
        "controller_name": "playwright.controller.InputFile",
        "attributes": "| Name | Description |\n| --- | --- |\n| [expect](#shiny.playwright.controller.InputFile.expect) | Expectation method equivalent to `playwright.expect(self.loc)`. |\n| [id](#shiny.playwright.controller.InputFile.id) | The browser DOM `id` of the UI element. |\n| [loc](#shiny.playwright.controller.InputFile.loc) | Playwright `Locator` of the UI element. |\n| [loc_button](#shiny.playwright.controller.InputFile.loc_button) | Playwright `Locator` of the button. |\n| [loc_container](#shiny.playwright.controller.InputFile.loc_container) | Playwright `Locator` for the container of the UI element. |\n| [loc_file_display](#shiny.playwright.controller.InputFile.loc_file_display) | Playwright `Locator` of the file display. |\n| [loc_label](#shiny.playwright.controller.InputFile.loc_label) | Playwright `Locator` for the label of the UI element. |\n| [loc_progress](#shiny.playwright.controller.InputFile.loc_progress) | Playwright `Locator` of the progress bar. |\n| [page](#shiny.playwright.controller.InputFile.page) | Playwright `Page` of the Shiny app. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [expect_accept](#shiny.playwright.controller.InputFile.expect_accept) | Expect the `accept` attribute to have a specific value. |\n| [expect_button_label](#shiny.playwright.controller.InputFile.expect_button_label) | Expect the button label to have a specific value. |\n| [expect_capture](#shiny.playwright.controller.InputFile.expect_capture) | Expect the `capture` attribute to have a specific value. |\n| [expect_complete](#shiny.playwright.controller.InputFile.expect_complete) | Expect the file upload to be complete. |\n| [expect_label](#shiny.playwright.controller.InputFile.expect_label) | Expect the label of the input to have a specific text. |\n| [expect_multiple](#shiny.playwright.controller.InputFile.expect_multiple) | Expect the `multiple` attribute to have a specific value. |\n| [expect_width](#shiny.playwright.controller.InputFile.expect_width) | Expect the width of the input file to have a specific value. |\n| [set](#shiny.playwright.controller.InputFile.set) | Set the file upload. |\n\n### expect_accept { #shiny.playwright.controller.InputFile.expect_accept }\n\n```python\nplaywright.controller.InputFile.expect_accept(value, *, timeout=None)\n```\n\nExpect the `accept` attribute to have a specific value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                                               | Description                                          | Default    |\n|---------|------------------------------------------------------------------------------------|------------------------------------------------------|------------|\n| value   | [list](`list`)\\[[str](`str`)\\] \\| [AttrValue](`shiny.playwright._types.AttrValue`) | The expected value of the `accept` attribute.        | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)                                       | The timeout for the expectation. Defaults to `None`. | `None`     |\n\n### expect_button_label { #shiny.playwright.controller.InputFile.expect_button_label }\n\n```python\nplaywright.controller.InputFile.expect_button_label(value, *, timeout=None)\n```\n\nExpect the button label to have a specific value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                          | Default    |\n|---------|--------------------------------------------------------|------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected value of the button label.              | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The timeout for the expectation. Defaults to `None`. | `None`     |\n\n### expect_capture { #shiny.playwright.controller.InputFile.expect_capture }\n\n```python\nplaywright.controller.InputFile.expect_capture(value, *, timeout=None)\n```\n\nExpect the `capture` attribute to have a specific value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                         | Description                                          | Default    |\n|---------|--------------------------------------------------------------|------------------------------------------------------|------------|\n| value   | [Literal](`typing.Literal`)\\['environment', 'user'\\] \\| None | The expected value of the `capture` attribute.       | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)                 | The timeout for the expectation. Defaults to `None`. | `None`     |\n\n### expect_complete { #shiny.playwright.controller.InputFile.expect_complete }\n\n```python\nplaywright.controller.InputFile.expect_complete(timeout=None)\n```\n\nExpect the file upload to be complete.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                          | Default   |\n|---------|----------------------------------------------|------------------------------------------------------|-----------|\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The timeout for the expectation. Defaults to `None`. | `None`    |\n\n### expect_label { #shiny.playwright.controller.InputFile.expect_label }\n\n```python\nplaywright.controller.InputFile.expect_label(value, *, timeout=None)\n```\n\nExpect the label of the input to have a specific text.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                                       | Default    |\n|---------|--------------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected text value of the label.                                             | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### expect_multiple { #shiny.playwright.controller.InputFile.expect_multiple }\n\n```python\nplaywright.controller.InputFile.expect_multiple(value, *, timeout=None)\n```\n\nExpect the `multiple` attribute to have a specific value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                          | Default    |\n|---------|----------------------------------------------|------------------------------------------------------|------------|\n| value   | [bool](`bool`)                               | The expected value of the `multiple` attribute.      | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The timeout for the expectation. Defaults to `None`. | `None`     |\n\n### expect_width { #shiny.playwright.controller.InputFile.expect_width }\n\n```python\nplaywright.controller.InputFile.expect_width(value, *, timeout=None)\n```\n\nExpect the width of the input file to have a specific value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                               | Description                                                                       | Default    |\n|---------|----------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [StyleValue](`shiny.playwright._types.StyleValue`) | The expected value of the width.                                                  | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)       | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### set { #shiny.playwright.controller.InputFile.set }\n\n```python\nplaywright.controller.InputFile.set(\n    file_path,\n    *,\n    timeout=None,\n    expect_complete_timeout=30 * 1000,\n)\n```\n\nSet the file upload.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name                    | Type                                                                                                                                                                                                                                                                   | Description                                                                           | Default     |\n|-------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------|-------------|\n| file_path               | [str](`str`) \\| [pathlib](`pathlib`).[Path](`pathlib.Path`) \\| [FilePayload](`playwright.sync_api.FilePayload`) \\| [list](`list`)\\[[str](`str`) \\| [pathlib](`pathlib`).[Path](`pathlib.Path`)\\] \\| [list](`list`)\\[[FilePayload](`playwright.sync_api.FilePayload`)\\] | The path to the file to upload.                                                       | _required_  |\n| timeout                 | [Timeout](`shiny.playwright._types.Timeout`)                                                                                                                                                                                                                           | The timeout for the action. Defaults to `None`.                                       | `None`      |\n| expect_complete_timeout | [Timeout](`shiny.playwright._types.Timeout`)                                                                                                                                                                                                                           | The timeout for the expectation that the upload is complete. Defaults to `30 * 1000`. | `30 * 1000` |"
    },
    {
        "controller_name": "playwright.controller.InputNumeric",
        "attributes": "| Name | Description |\n| --- | --- |\n| [expect](#shiny.playwright.controller.InputNumeric.expect) | Expectation method equivalent to `playwright.expect(self.loc)`. |\n| [id](#shiny.playwright.controller.InputNumeric.id) | The browser DOM `id` of the UI element. |\n| [loc](#shiny.playwright.controller.InputNumeric.loc) | Playwright `Locator` of the UI element. |\n| [loc_container](#shiny.playwright.controller.InputNumeric.loc_container) | Playwright `Locator` for the container of the UI element. |\n| [loc_label](#shiny.playwright.controller.InputNumeric.loc_label) | Playwright `Locator` for the label of the UI element. |\n| [page](#shiny.playwright.controller.InputNumeric.page) | Playwright `Page` of the Shiny app. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [expect_label](#shiny.playwright.controller.InputNumeric.expect_label) | Expect the label of the input to have a specific text. |\n| [expect_max](#shiny.playwright.controller.InputNumeric.expect_max) | Expect the maximum numeric value to be a specific value. |\n| [expect_min](#shiny.playwright.controller.InputNumeric.expect_min) | Expect the minimum numeric value to be a specific value. |\n| [expect_step](#shiny.playwright.controller.InputNumeric.expect_step) | Expect step value when incrementing/decrementing the numeric input. |\n| [expect_value](#shiny.playwright.controller.InputNumeric.expect_value) | Expect the value of the text input to have a specific value. |\n| [expect_width](#shiny.playwright.controller.InputNumeric.expect_width) | Expect the input element to have a specific width. |\n| [set](#shiny.playwright.controller.InputNumeric.set) | Sets the text value |\n\n### expect_label { #shiny.playwright.controller.InputNumeric.expect_label }\n\n```python\nplaywright.controller.InputNumeric.expect_label(value, *, timeout=None)\n```\n\nExpect the label of the input to have a specific text.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                                       | Default    |\n|---------|--------------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected text value of the label.                                             | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### expect_max { #shiny.playwright.controller.InputNumeric.expect_max }\n\n```python\nplaywright.controller.InputNumeric.expect_max(value, *, timeout=None)\n```\n\nExpect the maximum numeric value to be a specific value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                                                       | Default    |\n|---------|--------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected maximum numeric value.                                               | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### expect_min { #shiny.playwright.controller.InputNumeric.expect_min }\n\n```python\nplaywright.controller.InputNumeric.expect_min(value, *, timeout=None)\n```\n\nExpect the minimum numeric value to be a specific value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                                                       | Default    |\n|---------|--------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected minimum numeric value.                                               | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### expect_step { #shiny.playwright.controller.InputNumeric.expect_step }\n\n```python\nplaywright.controller.InputNumeric.expect_step(value, *, timeout=None)\n```\n\nExpect step value when incrementing/decrementing the numeric input.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                                                       | Default    |\n|---------|--------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected step value for the numeric input.                                    | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### expect_value { #shiny.playwright.controller.InputNumeric.expect_value }\n\n```python\nplaywright.controller.InputNumeric.expect_value(value, *, timeout=None)\n```\n\nExpect the value of the text input to have a specific value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                                       | Default    |\n|---------|--------------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected value of the text input.                                             | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### expect_width { #shiny.playwright.controller.InputNumeric.expect_width }\n\n```python\nplaywright.controller.InputNumeric.expect_width(value, *, timeout=None)\n```\n\nExpect the input element to have a specific width.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                                                       | Default    |\n|---------|--------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected width.                                                               | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### set { #shiny.playwright.controller.InputNumeric.set }\n\n```python\nplaywright.controller.InputNumeric.set(value, *, timeout=None)\n```\n\nSets the text value\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                          | Default    |\n|---------|----------------------------------------------|----------------------------------------------------------------------|------------|\n| value   | [str](`str`)                                 | The text to set.                                                     | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the text to be set. Defaults to `None`. | `None`     |"
    },
    {
        "controller_name": "playwright.controller.InputPassword",
        "attributes": "| Name | Description |\n| --- | --- |\n| [expect](#shiny.playwright.controller.InputPassword.expect) | Expectation method equivalent to `playwright.expect(self.loc)`. |\n| [id](#shiny.playwright.controller.InputPassword.id) | The browser DOM `id` of the UI element. |\n| [loc](#shiny.playwright.controller.InputPassword.loc) | Playwright `Locator` of the UI element. |\n| [loc_container](#shiny.playwright.controller.InputPassword.loc_container) | Playwright `Locator` for the container of the UI element. |\n| [loc_label](#shiny.playwright.controller.InputPassword.loc_label) | Playwright `Locator` for the label of the UI element. |\n| [page](#shiny.playwright.controller.InputPassword.page) | Playwright `Page` of the Shiny app. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [expect_label](#shiny.playwright.controller.InputPassword.expect_label) | Expect the label of the input to have a specific text. |\n| [expect_placeholder](#shiny.playwright.controller.InputPassword.expect_placeholder) | Expect the `placeholder` attribute of the input to have a specific value. |\n| [expect_value](#shiny.playwright.controller.InputPassword.expect_value) | Expect the value of the text input to have a specific value. |\n| [expect_width](#shiny.playwright.controller.InputPassword.expect_width) | Expect the `width` attribute of the input password to have a specific value. |\n| [set](#shiny.playwright.controller.InputPassword.set) | Sets the text value |\n\n### expect_label { #shiny.playwright.controller.InputPassword.expect_label }\n\n```python\nplaywright.controller.InputPassword.expect_label(value, *, timeout=None)\n```\n\nExpect the label of the input to have a specific text.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                                       | Default    |\n|---------|--------------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected text value of the label.                                             | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### expect_placeholder { #shiny.playwright.controller.InputPassword.expect_placeholder }\n\n```python\nplaywright.controller.InputPassword.expect_placeholder(value, *, timeout=None)\n```\n\nExpect the `placeholder` attribute of the input to have a specific value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                                                       | Default    |\n|---------|--------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected value of the `placeholder` attribute.                                | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### expect_value { #shiny.playwright.controller.InputPassword.expect_value }\n\n```python\nplaywright.controller.InputPassword.expect_value(value, *, timeout=None)\n```\n\nExpect the value of the text input to have a specific value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                                       | Default    |\n|---------|--------------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected value of the text input.                                             | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### expect_width { #shiny.playwright.controller.InputPassword.expect_width }\n\n```python\nplaywright.controller.InputPassword.expect_width(value, *, timeout=None)\n```\n\nExpect the `width` attribute of the input password to have a specific value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                               | Description                                                                       | Default    |\n|---------|----------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [StyleValue](`shiny.playwright._types.StyleValue`) | The expected value of the `width` attribute.                                      | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)       | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### set { #shiny.playwright.controller.InputPassword.set }\n\n```python\nplaywright.controller.InputPassword.set(value, *, timeout=None)\n```\n\nSets the text value\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                          | Default    |\n|---------|----------------------------------------------|----------------------------------------------------------------------|------------|\n| value   | [str](`str`)                                 | The text to set.                                                     | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the text to be set. Defaults to `None`. | `None`     |"
    },
    {
        "controller_name": "playwright.controller.InputRadioButtons",
        "attributes": "| Name | Description |\n| --- | --- |\n| [expect](#shiny.playwright.controller.InputRadioButtons.expect) | Expectation method equivalent to `playwright.expect(self.loc)`. |\n| [id](#shiny.playwright.controller.InputRadioButtons.id) | The browser DOM `id` of the UI element. |\n| [loc](#shiny.playwright.controller.InputRadioButtons.loc) | Playwright `Locator` of the UI element. |\n| [loc_choice_labels](#shiny.playwright.controller.InputRadioButtons.loc_choice_labels) | Playwright `Locator` of the labels of the radio button choices. |\n| [loc_choices](#shiny.playwright.controller.InputRadioButtons.loc_choices) | Playwright `Locator` of the radio button choices. |\n| [loc_container](#shiny.playwright.controller.InputRadioButtons.loc_container) | Playwright `Locator` for the container of the UI element. |\n| [loc_label](#shiny.playwright.controller.InputRadioButtons.loc_label) | Playwright `Locator` for the label of the UI element. |\n| [loc_selected](#shiny.playwright.controller.InputRadioButtons.loc_selected) | Playwright `Locator` of the selected radio button. |\n| [page](#shiny.playwright.controller.InputRadioButtons.page) | Playwright `Page` of the Shiny app. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [expect_choice_labels](#shiny.playwright.controller.InputRadioButtons.expect_choice_labels) | Expect the labels of the choices. |\n| [expect_choices](#shiny.playwright.controller.InputRadioButtons.expect_choices) | Expect the radio button choices. |\n| [expect_inline](#shiny.playwright.controller.InputRadioButtons.expect_inline) | Expect the input to be inline. |\n| [expect_label](#shiny.playwright.controller.InputRadioButtons.expect_label) | Expect the label of the input to have a specific text. |\n| [expect_selected](#shiny.playwright.controller.InputRadioButtons.expect_selected) | Expect the selected radio button. |\n| [expect_width](#shiny.playwright.controller.InputRadioButtons.expect_width) | Expect the input element to have a specific width. |\n| [set](#shiny.playwright.controller.InputRadioButtons.set) | Set the selected radio button. |\n\n### expect_choice_labels { #shiny.playwright.controller.InputRadioButtons.expect_choice_labels }\n\n```python\nplaywright.controller.InputRadioButtons.expect_choice_labels(\n    value,\n    *,\n    timeout=None,\n)\n```\n\nExpect the labels of the choices.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                           | Description                                          | Default    |\n|---------|----------------------------------------------------------------|------------------------------------------------------|------------|\n| value   | [ListPatternOrStr](`shiny.playwright._types.ListPatternOrStr`) | The expected labels.                                 | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)                   | The timeout for the expectation. Defaults to `None`. | `None`     |\n\n### expect_choices { #shiny.playwright.controller.InputRadioButtons.expect_choices }\n\n```python\nplaywright.controller.InputRadioButtons.expect_choices(value, *, timeout=None)\n```\n\nExpect the radio button choices.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                           | Description                                          | Default    |\n|---------|----------------------------------------------------------------|------------------------------------------------------|------------|\n| value   | [ListPatternOrStr](`shiny.playwright._types.ListPatternOrStr`) | The expected choices.                                | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)                   | The timeout for the expectation. Defaults to `None`. | `None`     |\n\n### expect_inline { #shiny.playwright.controller.InputRadioButtons.expect_inline }\n\n```python\nplaywright.controller.InputRadioButtons.expect_inline(value, *, timeout=None)\n```\n\nExpect the input to be inline.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                          | Default    |\n|---------|----------------------------------------------|------------------------------------------------------|------------|\n| value   | [bool](`bool`)                               | Whether the input is inline.                         | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The timeout for the expectation. Defaults to `None`. | `None`     |\n\n### expect_label { #shiny.playwright.controller.InputRadioButtons.expect_label }\n\n```python\nplaywright.controller.InputRadioButtons.expect_label(value, *, timeout=None)\n```\n\nExpect the label of the input to have a specific text.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                                       | Default    |\n|---------|--------------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected text value of the label.                                             | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### expect_selected { #shiny.playwright.controller.InputRadioButtons.expect_selected }\n\n```python\nplaywright.controller.InputRadioButtons.expect_selected(value, *, timeout=None)\n```\n\nExpect the selected radio button.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                           | Description                                          | Default    |\n|---------|----------------------------------------------------------------|------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) \\| None | The expected value of the selected radio button.     | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)                   | The timeout for the expectation. Defaults to `None`. | `None`     |\n\n### expect_width { #shiny.playwright.controller.InputRadioButtons.expect_width }\n\n```python\nplaywright.controller.InputRadioButtons.expect_width(value, *, timeout=None)\n```\n\nExpect the input element to have a specific width.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                                                       | Default    |\n|---------|--------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected width.                                                               | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### set { #shiny.playwright.controller.InputRadioButtons.set }\n\n```python\nplaywright.controller.InputRadioButtons.set(selected, *, timeout=None, **kwargs)\n```\n\nSet the selected radio button.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name     | Type                                         | Description                                     | Default    |\n|----------|----------------------------------------------|-------------------------------------------------|------------|\n| selected | [str](`str`)                                 | The value of the selected radio button.         | _required_ |\n| timeout  | [Timeout](`shiny.playwright._types.Timeout`) | The timeout for the action. Defaults to `None`. | `None`     |"
    },
    {
        "controller_name": "playwright.controller.InputSelect",
        "attributes": "| Name | Description |\n| --- | --- |\n| [expect](#shiny.playwright.controller.InputSelect.expect) | Expectation method equivalent to `playwright.expect(self.loc)`. |\n| [id](#shiny.playwright.controller.InputSelect.id) | The browser DOM `id` of the UI element. |\n| [loc](#shiny.playwright.controller.InputSelect.loc) | Playwright `Locator` of the UI element. |\n| [loc_container](#shiny.playwright.controller.InputSelect.loc_container) | Playwright `Locator` for the container of the UI element. |\n| [loc_label](#shiny.playwright.controller.InputSelect.loc_label) | Playwright `Locator` for the label of the UI element. |\n| [page](#shiny.playwright.controller.InputSelect.page) | Playwright `Page` of the Shiny app. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [expect_choice_groups](#shiny.playwright.controller.InputSelect.expect_choice_groups) | Expect the choice groups of the input select to be an exact match. |\n| [expect_choice_labels](#shiny.playwright.controller.InputSelect.expect_choice_labels) | Expect the choice labels of the input select to be an exact match. |\n| [expect_choices](#shiny.playwright.controller.InputSelect.expect_choices) | Expect the available options of the input select to be an exact match. |\n| [expect_label](#shiny.playwright.controller.InputSelect.expect_label) | Expect the label of the input to have a specific text. |\n| [expect_multiple](#shiny.playwright.controller.InputSelect.expect_multiple) | Expect the input selectize to allow multiple selections. |\n| [expect_selected](#shiny.playwright.controller.InputSelect.expect_selected) | Expect the selected option(s) of the input select to be an exact match. |\n| [expect_size](#shiny.playwright.controller.InputSelect.expect_size) | Expect the size attribute of the input select to have a specific value. |\n| [expect_width](#shiny.playwright.controller.InputSelect.expect_width) | Expect the input element to have a specific width. |\n| [set](#shiny.playwright.controller.InputSelect.set) | Sets the selected option(s) of the input select. |\n\n### expect_choice_groups { #shiny.playwright.controller.InputSelect.expect_choice_groups }\n\n```python\nplaywright.controller.InputSelect.expect_choice_groups(\n    choice_groups,\n    *,\n    timeout=None,\n)\n```\n\nExpect the choice groups of the input select to be an exact match.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name          | Type                                                           | Description                                                                       | Default    |\n|---------------|----------------------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| choice_groups | [ListPatternOrStr](`shiny.playwright._types.ListPatternOrStr`) | The expected choice groups of the input select.                                   | _required_ |\n| timeout       | [Timeout](`shiny.playwright._types.Timeout`)                   | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### expect_choice_labels { #shiny.playwright.controller.InputSelect.expect_choice_labels }\n\n```python\nplaywright.controller.InputSelect.expect_choice_labels(value, *, timeout=None)\n```\n\nExpect the choice labels of the input select to be an exact match.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                           | Description                                                                       | Default    |\n|---------|----------------------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [ListPatternOrStr](`shiny.playwright._types.ListPatternOrStr`) | The expected choice labels of the input select.                                   | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)                   | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### expect_choices { #shiny.playwright.controller.InputSelect.expect_choices }\n\n```python\nplaywright.controller.InputSelect.expect_choices(choices, *, timeout=None)\n```\n\nExpect the available options of the input select to be an exact match.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                           | Description                                                                       | Default    |\n|---------|----------------------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| choices | [ListPatternOrStr](`shiny.playwright._types.ListPatternOrStr`) | The expected choices of the input select.                                         | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)                   | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### expect_label { #shiny.playwright.controller.InputSelect.expect_label }\n\n```python\nplaywright.controller.InputSelect.expect_label(value, *, timeout=None)\n```\n\nExpect the label of the input to have a specific text.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                                       | Default    |\n|---------|--------------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected text value of the label.                                             | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### expect_multiple { #shiny.playwright.controller.InputSelect.expect_multiple }\n\n```python\nplaywright.controller.InputSelect.expect_multiple(value, *, timeout=None)\n```\n\nExpect the input selectize to allow multiple selections.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                                       | Default    |\n|---------|----------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [bool](`bool`)                               | Whether the input select allows multiple selections.                              | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### expect_selected { #shiny.playwright.controller.InputSelect.expect_selected }\n\n```python\nplaywright.controller.InputSelect.expect_selected(value, *, timeout=None)\n```\n\nExpect the selected option(s) of the input select to be an exact match.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                                                                                     | Description                                                                       | Default    |\n|---------|--------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) \\| [ListPatternOrStr](`shiny.playwright._types.ListPatternOrStr`) | The expected value(s) of the selected option(s).                                  | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)                                                                             | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### expect_size { #shiny.playwright.controller.InputSelect.expect_size }\n\n```python\nplaywright.controller.InputSelect.expect_size(value, *, timeout=None)\n```\n\nExpect the size attribute of the input select to have a specific value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                                                       | Default    |\n|---------|--------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected value of the `size` attribute.                                       | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### expect_width { #shiny.playwright.controller.InputSelect.expect_width }\n\n```python\nplaywright.controller.InputSelect.expect_width(value, *, timeout=None)\n```\n\nExpect the input element to have a specific width.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                                                       | Default    |\n|---------|--------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected width.                                                               | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### set { #shiny.playwright.controller.InputSelect.set }\n\n```python\nplaywright.controller.InputSelect.set(selected, *, timeout=None)\n```\n\nSets the selected option(s) of the input select.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name     | Type                                                                     | Description                                                               | Default    |\n|----------|--------------------------------------------------------------------------|---------------------------------------------------------------------------|------------|\n| selected | [str](`str`) \\| [ListOrTuple](`shiny.types.ListOrTuple`)\\[[str](`str`)\\] | The value(s) of the selected option(s).                                   | _required_ |\n| timeout  | [Timeout](`shiny.playwright._types.Timeout`)                             | The maximum time to wait for the selection to be set. Defaults to `None`. | `None`     |"
    },
    {
        "controller_name": "playwright.controller.InputSelectize",
        "attributes": "| Name | Description |\n| --- | --- |\n| [expect](#shiny.playwright.controller.InputSelectize.expect) | Expectation method equivalent to `playwright.expect(self.loc)`. |\n| [id](#shiny.playwright.controller.InputSelectize.id) | The browser DOM `id` of the UI element. |\n| [loc_container](#shiny.playwright.controller.InputSelectize.loc_container) | Playwright `Locator` for the container of the UI element. |\n| [loc_label](#shiny.playwright.controller.InputSelectize.loc_label) | Playwright `Locator` for the label of the UI element. |\n| [page](#shiny.playwright.controller.InputSelectize.page) | Playwright `Page` of the Shiny app. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [expect_choice_groups](#shiny.playwright.controller.InputSelectize.expect_choice_groups) | Expect the choice groups of the input select to be an exact match. |\n| [expect_choice_labels](#shiny.playwright.controller.InputSelectize.expect_choice_labels) | Expect the choice labels of the input selectize to be an exact match. |\n| [expect_choices](#shiny.playwright.controller.InputSelectize.expect_choices) | Expect the available options of the input selectize to be an exact match. |\n| [expect_label](#shiny.playwright.controller.InputSelectize.expect_label) | Expect the label of the input to have a specific text. |\n| [expect_multiple](#shiny.playwright.controller.InputSelectize.expect_multiple) | Expect the input selectize to allow multiple selections. |\n| [expect_selected](#shiny.playwright.controller.InputSelectize.expect_selected) | Expect the selected option(s) of the input select to be an exact match. |\n| [expect_width](#shiny.playwright.controller.InputSelectize.expect_width) | Expect the input element to have a specific width. |\n| [set](#shiny.playwright.controller.InputSelectize.set) | Sets the selected option(s) of the input selectize. |\n\n### expect_choice_groups { #shiny.playwright.controller.InputSelectize.expect_choice_groups }\n\n```python\nplaywright.controller.InputSelectize.expect_choice_groups(\n    choice_groups,\n    *,\n    timeout=None,\n)\n```\n\nExpect the choice groups of the input select to be an exact match.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name          | Type                                                           | Description                                                                       | Default    |\n|---------------|----------------------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| choice_groups | [ListPatternOrStr](`shiny.playwright._types.ListPatternOrStr`) | The expected choice groups of the input select.                                   | _required_ |\n| timeout       | [Timeout](`shiny.playwright._types.Timeout`)                   | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### expect_choice_labels { #shiny.playwright.controller.InputSelectize.expect_choice_labels }\n\n```python\nplaywright.controller.InputSelectize.expect_choice_labels(\n    value,\n    *,\n    timeout=None,\n)\n```\n\nExpect the choice labels of the input selectize to be an exact match.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                           | Description                                                                       | Default    |\n|---------|----------------------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [ListPatternOrStr](`shiny.playwright._types.ListPatternOrStr`) | The expected choice labels of the input select.                                   | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)                   | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### expect_choices { #shiny.playwright.controller.InputSelectize.expect_choices }\n\n```python\nplaywright.controller.InputSelectize.expect_choices(choices, *, timeout=None)\n```\n\nExpect the available options of the input selectize to be an exact match.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                           | Description                                                                       | Default    |\n|---------|----------------------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| choices | [ListPatternOrStr](`shiny.playwright._types.ListPatternOrStr`) | The expected choices of the input select.                                         | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)                   | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### expect_label { #shiny.playwright.controller.InputSelectize.expect_label }\n\n```python\nplaywright.controller.InputSelectize.expect_label(value, *, timeout=None)\n```\n\nExpect the label of the input to have a specific text.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                                       | Default    |\n|---------|--------------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected text value of the label.                                             | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### expect_multiple { #shiny.playwright.controller.InputSelectize.expect_multiple }\n\n```python\nplaywright.controller.InputSelectize.expect_multiple(value, *, timeout=None)\n```\n\nExpect the input selectize to allow multiple selections.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                                       | Default    |\n|---------|----------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [bool](`bool`)                               | Whether the input select allows multiple selections.                              | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### expect_selected { #shiny.playwright.controller.InputSelectize.expect_selected }\n\n```python\nplaywright.controller.InputSelectize.expect_selected(value, *, timeout=None)\n```\n\nExpect the selected option(s) of the input select to be an exact match.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                           | Description                                                                       | Default    |\n|---------|----------------------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [ListPatternOrStr](`shiny.playwright._types.ListPatternOrStr`) | The expected value(s) of the selected option(s).                                  | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)                   | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### expect_width { #shiny.playwright.controller.InputSelectize.expect_width }\n\n```python\nplaywright.controller.InputSelectize.expect_width(value, *, timeout=None)\n```\n\nExpect the input element to have a specific width.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                                                       | Default    |\n|---------|--------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected width.                                                               | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### set { #shiny.playwright.controller.InputSelectize.set }\n\n```python\nplaywright.controller.InputSelectize.set(selected, *, timeout=None)\n```\n\nSets the selected option(s) of the input selectize.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name     | Type                                           | Description                                                               | Default    |\n|----------|------------------------------------------------|---------------------------------------------------------------------------|------------|\n| selected | [str](`str`) \\| [list](`list`)\\[[str](`str`)\\] | The value(s) of the selected option(s).                                   | _required_ |\n| timeout  | [Timeout](`shiny.playwright._types.Timeout`)   | The maximum time to wait for the selection to be set. Defaults to `None`. | `None`     |"
    },
    {
        "controller_name": "playwright.controller.InputSlider",
        "attributes": "| Name | Description |\n| --- | --- |\n| [expect](#shiny.playwright.controller.InputSlider.expect) | Expectation method equivalent to `playwright.expect(self.loc)`. |\n| [id](#shiny.playwright.controller.InputSlider.id) | The browser DOM `id` of the UI element. |\n| [loc](#shiny.playwright.controller.InputSlider.loc) | Playwright `Locator` of the UI element. |\n| [loc_container](#shiny.playwright.controller.InputSlider.loc_container) | Playwright `Locator` for the container of the UI element. |\n| [loc_irs](#shiny.playwright.controller.InputSlider.loc_irs) | Playwright `Locator` of the input slider. |\n| [loc_irs_label](#shiny.playwright.controller.InputSlider.loc_irs_label) | Playwright `Locator` of the input slider label. |\n| [loc_irs_ticks](#shiny.playwright.controller.InputSlider.loc_irs_ticks) | Playwright `Locator` of the input slider ticks. |\n| [loc_label](#shiny.playwright.controller.InputSlider.loc_label) | Playwright `Locator` for the label of the UI element. |\n| [loc_play_pause](#shiny.playwright.controller.InputSlider.loc_play_pause) | Playwright `Locator` of the play/pause button. |\n| [page](#shiny.playwright.controller.InputSlider.page) | Playwright `Page` of the Shiny app. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [click_pause](#shiny.playwright.controller.InputSlider.click_pause) | Click the pause button. |\n| [click_play](#shiny.playwright.controller.InputSlider.click_play) | Click the play button. |\n| [expect_animate](#shiny.playwright.controller.InputSlider.expect_animate) | Expect the animate button to exist. |\n| [expect_drag_range](#shiny.playwright.controller.InputSlider.expect_drag_range) | Asserts that the input element has the expected `data-drag-range` attribute value. |\n| [expect_label](#shiny.playwright.controller.InputSlider.expect_label) | Expect the label of the input to have a specific text. |\n| [expect_max](#shiny.playwright.controller.InputSlider.expect_max) | Expect the input element to have the expected `max` attribute value. |\n| [expect_min](#shiny.playwright.controller.InputSlider.expect_min) | Expect the input element to have the expected `min` attribute value. |\n| [expect_post](#shiny.playwright.controller.InputSlider.expect_post) | Expect the input element to have the expected `data-post` attribute value. |\n| [expect_pre](#shiny.playwright.controller.InputSlider.expect_pre) | Expect the input element to have the expected `data-pre` attribute value. |\n| [expect_sep](#shiny.playwright.controller.InputSlider.expect_sep) | Expect the input element to have the expected `data-sep` attribute value. |\n| [expect_step](#shiny.playwright.controller.InputSlider.expect_step) | Expect the input element to have the expected `step` attribute value. |\n| [expect_tick_labels](#shiny.playwright.controller.InputSlider.expect_tick_labels) | Expect the tick labels of the input slider. |\n| [expect_ticks](#shiny.playwright.controller.InputSlider.expect_ticks) | Expect the input element to have the expected `data-ticks` attribute value. |\n| [expect_time_format](#shiny.playwright.controller.InputSlider.expect_time_format) | Asserts that the input element has the expected `data-time-format` attribute value. |\n| [expect_timezone](#shiny.playwright.controller.InputSlider.expect_timezone) | Asserts that the input element has the expected `data-timezone` attribute value. |\n| [expect_value](#shiny.playwright.controller.InputSlider.expect_value) | Asserts that the input element has the expected value. |\n| [expect_width](#shiny.playwright.controller.InputSlider.expect_width) | Expect the input element to have a specific width. |\n| [set](#shiny.playwright.controller.InputSlider.set) | Set the value of the slider. |\n\n### click_pause { #shiny.playwright.controller.InputSlider.click_pause }\n\n```python\nplaywright.controller.InputSlider.click_pause(timeout=None)\n```\n\nClick the pause button.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                     | Default   |\n|---------|----------------------------------------------|-------------------------------------------------|-----------|\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The timeout for the action. Defaults to `None`. | `None`    |\n\n### click_play { #shiny.playwright.controller.InputSlider.click_play }\n\n```python\nplaywright.controller.InputSlider.click_play(timeout=None)\n```\n\nClick the play button.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                     | Default   |\n|---------|----------------------------------------------|-------------------------------------------------|-----------|\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The timeout for the action. Defaults to `None`. | `None`    |\n\n### expect_animate { #shiny.playwright.controller.InputSlider.expect_animate }\n\n```python\nplaywright.controller.InputSlider.expect_animate(exists, *, timeout=None)\n```\n\nExpect the animate button to exist.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                          | Default    |\n|---------|----------------------------------------------|------------------------------------------------------|------------|\n| exists  | [bool](`bool`)                               | Whether the animate button should exist.             | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The timeout for the expectation. Defaults to `None`. | `None`     |\n\n### expect_drag_range { #shiny.playwright.controller.InputSlider.expect_drag_range }\n\n```python\nplaywright.controller.InputSlider.expect_drag_range(value, *, timeout=None)\n```\n\nAsserts that the input element has the expected `data-drag-range` attribute value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                                           | Default    |\n|---------|--------------------------------------------------|-----------------------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected value.                                                   | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The maximum time to wait for the value to appear. Defaults to `None`. | `None`     |\n\n### expect_label { #shiny.playwright.controller.InputSlider.expect_label }\n\n```python\nplaywright.controller.InputSlider.expect_label(value, *, timeout=None)\n```\n\nExpect the label of the input to have a specific text.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                                       | Default    |\n|---------|--------------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected text value of the label.                                             | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### expect_max { #shiny.playwright.controller.InputSlider.expect_max }\n\n```python\nplaywright.controller.InputSlider.expect_max(value, *, timeout=None)\n```\n\nExpect the input element to have the expected `max` attribute value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                          | Default    |\n|---------|--------------------------------------------------|------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected value.                                  | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The timeout for the expectation. Defaults to `None`. | `None`     |\n\n### expect_min { #shiny.playwright.controller.InputSlider.expect_min }\n\n```python\nplaywright.controller.InputSlider.expect_min(value, *, timeout=None)\n```\n\nExpect the input element to have the expected `min` attribute value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                          | Default    |\n|---------|--------------------------------------------------|------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected value.                                  | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The timeout for the expectation. Defaults to `None`. | `None`     |\n\n### expect_post { #shiny.playwright.controller.InputSlider.expect_post }\n\n```python\nplaywright.controller.InputSlider.expect_post(value, *, timeout=None)\n```\n\nExpect the input element to have the expected `data-post` attribute value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                          | Default    |\n|---------|--------------------------------------------------|------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected value.                                  | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The timeout for the expectation. Defaults to `None`. | `None`     |\n\n### expect_pre { #shiny.playwright.controller.InputSlider.expect_pre }\n\n```python\nplaywright.controller.InputSlider.expect_pre(value, *, timeout=None)\n```\n\nExpect the input element to have the expected `data-pre` attribute value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                          | Default    |\n|---------|--------------------------------------------------|------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected value.                                  | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The timeout for the expectation. Defaults to `None`. | `None`     |\n\n### expect_sep { #shiny.playwright.controller.InputSlider.expect_sep }\n\n```python\nplaywright.controller.InputSlider.expect_sep(value, *, timeout=None)\n```\n\nExpect the input element to have the expected `data-sep` attribute value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                          | Default    |\n|---------|--------------------------------------------------|------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected value.                                  | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The timeout for the expectation. Defaults to `None`. | `None`     |\n\n### expect_step { #shiny.playwright.controller.InputSlider.expect_step }\n\n```python\nplaywright.controller.InputSlider.expect_step(value, *, timeout=None)\n```\n\nExpect the input element to have the expected `step` attribute value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                          | Default    |\n|---------|--------------------------------------------------|------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected value.                                  | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The timeout for the expectation. Defaults to `None`. | `None`     |\n\n### expect_tick_labels { #shiny.playwright.controller.InputSlider.expect_tick_labels }\n\n```python\nplaywright.controller.InputSlider.expect_tick_labels(value, *, timeout=None)\n```\n\nExpect the tick labels of the input slider.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                                   | Description                                          | Default    |\n|---------|------------------------------------------------------------------------|------------------------------------------------------|------------|\n| value   | [ListPatternOrStr](`shiny.playwright._types.ListPatternOrStr`) \\| None | The expected tick labels.                            | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)                           | The timeout for the expectation. Defaults to `None`. | `None`     |\n\n### expect_ticks { #shiny.playwright.controller.InputSlider.expect_ticks }\n\n```python\nplaywright.controller.InputSlider.expect_ticks(value, *, timeout=None)\n```\n\nExpect the input element to have the expected `data-ticks` attribute value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                          | Default    |\n|---------|--------------------------------------------------|------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected value.                                  | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The timeout for the expectation. Defaults to `None`. | `None`     |\n\n### expect_time_format { #shiny.playwright.controller.InputSlider.expect_time_format }\n\n```python\nplaywright.controller.InputSlider.expect_time_format(value, *, timeout=None)\n```\n\nAsserts that the input element has the expected `data-time-format` attribute value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                                           | Default    |\n|---------|--------------------------------------------------|-----------------------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected value.                                                   | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The maximum time to wait for the value to appear. Defaults to `None`. | `None`     |\n\n### expect_timezone { #shiny.playwright.controller.InputSlider.expect_timezone }\n\n```python\nplaywright.controller.InputSlider.expect_timezone(value, *, timeout=None)\n```\n\nAsserts that the input element has the expected `data-timezone` attribute value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                                           | Default    |\n|---------|--------------------------------------------------|-----------------------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected value.                                                   | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The maximum time to wait for the value to appear. Defaults to `None`. | `None`     |\n\n### expect_value { #shiny.playwright.controller.InputSlider.expect_value }\n\n```python\nplaywright.controller.InputSlider.expect_value(value, *, timeout=None)\n```\n\nAsserts that the input element has the expected value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                           | Default    |\n|---------|--------------------------------------------------------|-----------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected value.                                                   | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the value to appear. Defaults to `None`. | `None`     |\n\n### expect_width { #shiny.playwright.controller.InputSlider.expect_width }\n\n```python\nplaywright.controller.InputSlider.expect_width(value, *, timeout=None)\n```\n\nExpect the input element to have a specific width.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                                                       | Default    |\n|---------|--------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected width.                                                               | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### set { #shiny.playwright.controller.InputSlider.set }\n\n```python\nplaywright.controller.InputSlider.set(value, *, max_err_values=15, timeout=None)\n```\n\nSet the value of the slider.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name           | Type                                         | Description                                                                              | Default    |\n|----------------|----------------------------------------------|------------------------------------------------------------------------------------------|------------|\n| value          | [str](`str`)                                 | The value to set the slider to.                                                          | _required_ |\n| max_err_values | [int](`int`)                                 | The maximum number of error values to display if the value is not found. Defaults to 15. | `15`       |\n| timeout        | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the value to appear. Defaults to `None`.                    | `None`     |"
    },
    {
        "controller_name": "playwright.controller.InputSliderRange",
        "attributes": "| Name | Description |\n| --- | --- |\n| [expect](#shiny.playwright.controller.InputSliderRange.expect) | Expectation method equivalent to `playwright.expect(self.loc)`. |\n| [id](#shiny.playwright.controller.InputSliderRange.id) | The browser DOM `id` of the UI element. |\n| [loc](#shiny.playwright.controller.InputSliderRange.loc) | Playwright `Locator` of the UI element. |\n| [loc_container](#shiny.playwright.controller.InputSliderRange.loc_container) | Playwright `Locator` for the container of the UI element. |\n| [loc_irs](#shiny.playwright.controller.InputSliderRange.loc_irs) | Playwright `Locator` of the input slider. |\n| [loc_irs_label_from](#shiny.playwright.controller.InputSliderRange.loc_irs_label_from) | Playwright `Locator` of the input slider label for the `from` handle. |\n| [loc_irs_label_to](#shiny.playwright.controller.InputSliderRange.loc_irs_label_to) | Playwright `Locator` of the input slider label for the `to` handle. |\n| [loc_irs_ticks](#shiny.playwright.controller.InputSliderRange.loc_irs_ticks) | Playwright `Locator` of the input slider ticks. |\n| [loc_label](#shiny.playwright.controller.InputSliderRange.loc_label) | Playwright `Locator` for the label of the UI element. |\n| [loc_play_pause](#shiny.playwright.controller.InputSliderRange.loc_play_pause) | Playwright `Locator` of the play/pause button. |\n| [page](#shiny.playwright.controller.InputSliderRange.page) | Playwright `Page` of the Shiny app. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [click_pause](#shiny.playwright.controller.InputSliderRange.click_pause) | Click the pause button. |\n| [click_play](#shiny.playwright.controller.InputSliderRange.click_play) | Click the play button. |\n| [expect_animate](#shiny.playwright.controller.InputSliderRange.expect_animate) | Expect the animate button to exist. |\n| [expect_drag_range](#shiny.playwright.controller.InputSliderRange.expect_drag_range) | Asserts that the input element has the expected `data-drag-range` attribute value. |\n| [expect_label](#shiny.playwright.controller.InputSliderRange.expect_label) | Expect the label of the input to have a specific text. |\n| [expect_max](#shiny.playwright.controller.InputSliderRange.expect_max) | Expect the input element to have the expected `max` attribute value. |\n| [expect_min](#shiny.playwright.controller.InputSliderRange.expect_min) | Expect the input element to have the expected `min` attribute value. |\n| [expect_post](#shiny.playwright.controller.InputSliderRange.expect_post) | Expect the input element to have the expected `data-post` attribute value. |\n| [expect_pre](#shiny.playwright.controller.InputSliderRange.expect_pre) | Expect the input element to have the expected `data-pre` attribute value. |\n| [expect_sep](#shiny.playwright.controller.InputSliderRange.expect_sep) | Expect the input element to have the expected `data-sep` attribute value. |\n| [expect_step](#shiny.playwright.controller.InputSliderRange.expect_step) | Expect the input element to have the expected `step` attribute value. |\n| [expect_tick_labels](#shiny.playwright.controller.InputSliderRange.expect_tick_labels) | Expect the tick labels of the input slider. |\n| [expect_ticks](#shiny.playwright.controller.InputSliderRange.expect_ticks) | Expect the input element to have the expected `data-ticks` attribute value. |\n| [expect_time_format](#shiny.playwright.controller.InputSliderRange.expect_time_format) | Asserts that the input element has the expected `data-time-format` attribute value. |\n| [expect_timezone](#shiny.playwright.controller.InputSliderRange.expect_timezone) | Asserts that the input element has the expected `data-timezone` attribute value. |\n| [expect_value](#shiny.playwright.controller.InputSliderRange.expect_value) | Asserts that the input element has the expected value. |\n| [expect_width](#shiny.playwright.controller.InputSliderRange.expect_width) | Expect the input element to have a specific width. |\n| [set](#shiny.playwright.controller.InputSliderRange.set) | Set the value of the slider. |\n\n### click_pause { #shiny.playwright.controller.InputSliderRange.click_pause }\n\n```python\nplaywright.controller.InputSliderRange.click_pause(timeout=None)\n```\n\nClick the pause button.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                     | Default   |\n|---------|----------------------------------------------|-------------------------------------------------|-----------|\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The timeout for the action. Defaults to `None`. | `None`    |\n\n### click_play { #shiny.playwright.controller.InputSliderRange.click_play }\n\n```python\nplaywright.controller.InputSliderRange.click_play(timeout=None)\n```\n\nClick the play button.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                     | Default   |\n|---------|----------------------------------------------|-------------------------------------------------|-----------|\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The timeout for the action. Defaults to `None`. | `None`    |\n\n### expect_animate { #shiny.playwright.controller.InputSliderRange.expect_animate }\n\n```python\nplaywright.controller.InputSliderRange.expect_animate(exists, *, timeout=None)\n```\n\nExpect the animate button to exist.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                          | Default    |\n|---------|----------------------------------------------|------------------------------------------------------|------------|\n| exists  | [bool](`bool`)                               | Whether the animate button should exist.             | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The timeout for the expectation. Defaults to `None`. | `None`     |\n\n### expect_drag_range { #shiny.playwright.controller.InputSliderRange.expect_drag_range }\n\n```python\nplaywright.controller.InputSliderRange.expect_drag_range(value, *, timeout=None)\n```\n\nAsserts that the input element has the expected `data-drag-range` attribute value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                                           | Default    |\n|---------|--------------------------------------------------|-----------------------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected value.                                                   | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The maximum time to wait for the value to appear. Defaults to `None`. | `None`     |\n\n### expect_label { #shiny.playwright.controller.InputSliderRange.expect_label }\n\n```python\nplaywright.controller.InputSliderRange.expect_label(value, *, timeout=None)\n```\n\nExpect the label of the input to have a specific text.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                                       | Default    |\n|---------|--------------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected text value of the label.                                             | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### expect_max { #shiny.playwright.controller.InputSliderRange.expect_max }\n\n```python\nplaywright.controller.InputSliderRange.expect_max(value, *, timeout=None)\n```\n\nExpect the input element to have the expected `max` attribute value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                          | Default    |\n|---------|--------------------------------------------------|------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected value.                                  | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The timeout for the expectation. Defaults to `None`. | `None`     |\n\n### expect_min { #shiny.playwright.controller.InputSliderRange.expect_min }\n\n```python\nplaywright.controller.InputSliderRange.expect_min(value, *, timeout=None)\n```\n\nExpect the input element to have the expected `min` attribute value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                          | Default    |\n|---------|--------------------------------------------------|------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected value.                                  | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The timeout for the expectation. Defaults to `None`. | `None`     |\n\n### expect_post { #shiny.playwright.controller.InputSliderRange.expect_post }\n\n```python\nplaywright.controller.InputSliderRange.expect_post(value, *, timeout=None)\n```\n\nExpect the input element to have the expected `data-post` attribute value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                          | Default    |\n|---------|--------------------------------------------------|------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected value.                                  | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The timeout for the expectation. Defaults to `None`. | `None`     |\n\n### expect_pre { #shiny.playwright.controller.InputSliderRange.expect_pre }\n\n```python\nplaywright.controller.InputSliderRange.expect_pre(value, *, timeout=None)\n```\n\nExpect the input element to have the expected `data-pre` attribute value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                          | Default    |\n|---------|--------------------------------------------------|------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected value.                                  | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The timeout for the expectation. Defaults to `None`. | `None`     |\n\n### expect_sep { #shiny.playwright.controller.InputSliderRange.expect_sep }\n\n```python\nplaywright.controller.InputSliderRange.expect_sep(value, *, timeout=None)\n```\n\nExpect the input element to have the expected `data-sep` attribute value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                          | Default    |\n|---------|--------------------------------------------------|------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected value.                                  | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The timeout for the expectation. Defaults to `None`. | `None`     |\n\n### expect_step { #shiny.playwright.controller.InputSliderRange.expect_step }\n\n```python\nplaywright.controller.InputSliderRange.expect_step(value, *, timeout=None)\n```\n\nExpect the input element to have the expected `step` attribute value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                          | Default    |\n|---------|--------------------------------------------------|------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected value.                                  | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The timeout for the expectation. Defaults to `None`. | `None`     |\n\n### expect_tick_labels { #shiny.playwright.controller.InputSliderRange.expect_tick_labels }\n\n```python\nplaywright.controller.InputSliderRange.expect_tick_labels(\n    value,\n    *,\n    timeout=None,\n)\n```\n\nExpect the tick labels of the input slider.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                                   | Description                                          | Default    |\n|---------|------------------------------------------------------------------------|------------------------------------------------------|------------|\n| value   | [ListPatternOrStr](`shiny.playwright._types.ListPatternOrStr`) \\| None | The expected tick labels.                            | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)                           | The timeout for the expectation. Defaults to `None`. | `None`     |\n\n### expect_ticks { #shiny.playwright.controller.InputSliderRange.expect_ticks }\n\n```python\nplaywright.controller.InputSliderRange.expect_ticks(value, *, timeout=None)\n```\n\nExpect the input element to have the expected `data-ticks` attribute value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                          | Default    |\n|---------|--------------------------------------------------|------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected value.                                  | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The timeout for the expectation. Defaults to `None`. | `None`     |\n\n### expect_time_format { #shiny.playwright.controller.InputSliderRange.expect_time_format }\n\n```python\nplaywright.controller.InputSliderRange.expect_time_format(\n    value,\n    *,\n    timeout=None,\n)\n```\n\nAsserts that the input element has the expected `data-time-format` attribute value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                                           | Default    |\n|---------|--------------------------------------------------|-----------------------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected value.                                                   | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The maximum time to wait for the value to appear. Defaults to `None`. | `None`     |\n\n### expect_timezone { #shiny.playwright.controller.InputSliderRange.expect_timezone }\n\n```python\nplaywright.controller.InputSliderRange.expect_timezone(value, *, timeout=None)\n```\n\nAsserts that the input element has the expected `data-timezone` attribute value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                                           | Default    |\n|---------|--------------------------------------------------|-----------------------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected value.                                                   | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The maximum time to wait for the value to appear. Defaults to `None`. | `None`     |\n\n### expect_value { #shiny.playwright.controller.InputSliderRange.expect_value }\n\n```python\nplaywright.controller.InputSliderRange.expect_value(value, *, timeout=None)\n```\n\nAsserts that the input element has the expected value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                                                                                                                                                                                                                                                                                                                                                                                                                                 | Description                                                           | Default    |\n|---------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------|------------|\n| value   | [typing](`typing`).[Tuple](`typing.Tuple`)\\[[PatternOrStr](`shiny.playwright._types.PatternOrStr`), [PatternOrStr](`shiny.playwright._types.PatternOrStr`)\\] \\| [typing](`typing`).[Tuple](`typing.Tuple`)\\[[PatternOrStr](`shiny.playwright._types.PatternOrStr`), [MISSING_TYPE](`shiny.types.MISSING_TYPE`)\\] \\| [typing](`typing`).[Tuple](`typing.Tuple`)\\[[MISSING_TYPE](`shiny.types.MISSING_TYPE`), [PatternOrStr](`shiny.playwright._types.PatternOrStr`)\\] | The expected value.                                                   | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)                                                                                                                                                                                                                                                                                                                                                                                                                         | The maximum time to wait for the value to appear. Defaults to `None`. | `None`     |\n\n### expect_width { #shiny.playwright.controller.InputSliderRange.expect_width }\n\n```python\nplaywright.controller.InputSliderRange.expect_width(value, *, timeout=None)\n```\n\nExpect the input element to have a specific width.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                                                       | Default    |\n|---------|--------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected width.                                                               | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### set { #shiny.playwright.controller.InputSliderRange.set }\n\n```python\nplaywright.controller.InputSliderRange.set(\n    value,\n    *,\n    max_err_values=15,\n    timeout=None,\n)\n```\n\nSet the value of the slider.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name           | Type                                                                                                                                                                                                                                                                                         | Description                                                                              | Default    |\n|----------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------------------------------------------------------------------------------------|------------|\n| value          | [typing](`typing`).[Tuple](`typing.Tuple`)\\[[str](`str`), [str](`str`)\\] \\| [typing](`typing`).[Tuple](`typing.Tuple`)\\[[str](`str`), [MISSING_TYPE](`shiny.types.MISSING_TYPE`)\\] \\| [typing](`typing`).[Tuple](`typing.Tuple`)\\[[MISSING_TYPE](`shiny.types.MISSING_TYPE`), [str](`str`)\\] | The value to set the slider to.                                                          | _required_ |\n| max_err_values | [int](`int`)                                                                                                                                                                                                                                                                                 | The maximum number of error values to display if the value is not found. Defaults to 15. | `15`       |\n| timeout        | [Timeout](`shiny.playwright._types.Timeout`)                                                                                                                                                                                                                                                 | The maximum time to wait for the value to appear. Defaults to `None`.                    | `None`     |"
    },
    {
        "controller_name": "playwright.controller.InputSwitch",
        "attributes": "| Name | Description |\n| --- | --- |\n| [expect](#shiny.playwright.controller.InputSwitch.expect) | Expectation method equivalent to `playwright.expect(self.loc)`. |\n| [id](#shiny.playwright.controller.InputSwitch.id) | The browser DOM `id` of the UI element. |\n| [loc](#shiny.playwright.controller.InputSwitch.loc) | Playwright `Locator` of the UI element. |\n| [loc_container](#shiny.playwright.controller.InputSwitch.loc_container) | Playwright `Locator` for the container of the UI element. |\n| [loc_label](#shiny.playwright.controller.InputSwitch.loc_label) | Playwright `Locator` for the label of the UI element. |\n| [page](#shiny.playwright.controller.InputSwitch.page) | Playwright `Page` of the Shiny app. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [expect_checked](#shiny.playwright.controller.InputSwitch.expect_checked) | Expect the input checkbox to be checked. |\n| [expect_label](#shiny.playwright.controller.InputSwitch.expect_label) | Expect the label of the input to have a specific text. |\n| [expect_width](#shiny.playwright.controller.InputSwitch.expect_width) | Expect the input element to have a specific width. |\n| [set](#shiny.playwright.controller.InputSwitch.set) | Sets the input checkbox. |\n\n### expect_checked { #shiny.playwright.controller.InputSwitch.expect_checked }\n\n```python\nplaywright.controller.InputSwitch.expect_checked(value, *, timeout=None)\n```\n\nExpect the input checkbox to be checked.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                                       | Default    |\n|---------|----------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [bool](`bool`)                               | Whether the input checkbox is checked.                                            | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### expect_label { #shiny.playwright.controller.InputSwitch.expect_label }\n\n```python\nplaywright.controller.InputSwitch.expect_label(value, *, timeout=None)\n```\n\nExpect the label of the input to have a specific text.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                                       | Default    |\n|---------|--------------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected text value of the label.                                             | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### expect_width { #shiny.playwright.controller.InputSwitch.expect_width }\n\n```python\nplaywright.controller.InputSwitch.expect_width(value, *, timeout=None)\n```\n\nExpect the input element to have a specific width.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                                                       | Default    |\n|---------|--------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected width.                                                               | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### set { #shiny.playwright.controller.InputSwitch.set }\n\n```python\nplaywright.controller.InputSwitch.set(value, *, timeout=None, **kwargs)\n```\n\nSets the input checkbox.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                                    | Default    |\n|---------|----------------------------------------------|--------------------------------------------------------------------------------|------------|\n| value   | [bool](`bool`)                               | The value of the input checkbox.                                               | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the input checkbox to be set. Defaults to `None`. | `None`     |"
    },
    {
        "controller_name": "playwright.controller.InputTaskButton",
        "attributes": "| Name | Description |\n| --- | --- |\n| [expect](#shiny.playwright.controller.InputTaskButton.expect) | Expectation method equivalent to `playwright.expect(self.loc)`. |\n| [id](#shiny.playwright.controller.InputTaskButton.id) | The browser DOM `id` of the UI element. |\n| [loc](#shiny.playwright.controller.InputTaskButton.loc) | Playwright `Locator` of the UI element. |\n| [page](#shiny.playwright.controller.InputTaskButton.page) | Playwright `Page` of the Shiny app. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [click](#shiny.playwright.controller.InputTaskButton.click) | Clicks the input action. |\n| [expect_auto_reset](#shiny.playwright.controller.InputTaskButton.expect_auto_reset) | Expect the `auto-reset` attribute of the input task button to have a specific value. |\n| [expect_label](#shiny.playwright.controller.InputTaskButton.expect_label) | Expect the label of the input task button to have a specific value. |\n| [expect_label_busy](#shiny.playwright.controller.InputTaskButton.expect_label_busy) | Expect the label of a busy input task button to have a specific value. |\n| [expect_label_ready](#shiny.playwright.controller.InputTaskButton.expect_label_ready) | Expect the label of a ready input task button to have a specific value. |\n| [expect_label_state](#shiny.playwright.controller.InputTaskButton.expect_label_state) | Expect the label of the input task button to have a specific value in a specific state. |\n| [expect_state](#shiny.playwright.controller.InputTaskButton.expect_state) | Expect the state of the input task button to have a specific value. |\n| [expect_width](#shiny.playwright.controller.InputTaskButton.expect_width) | Expect the `width` attribute of a DOM element to have a specific value. |\n\n### click { #shiny.playwright.controller.InputTaskButton.click }\n\n```python\nplaywright.controller.InputTaskButton.click(timeout=None, **kwargs)\n```\n\nClicks the input action.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                                      | Default   |\n|---------|----------------------------------------------|----------------------------------------------------------------------------------|-----------|\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the input action to be clicked. Defaults to `None`. | `None`    |\n\n### expect_auto_reset { #shiny.playwright.controller.InputTaskButton.expect_auto_reset }\n\n```python\nplaywright.controller.InputTaskButton.expect_auto_reset(value, timeout=None)\n```\n\nExpect the `auto-reset` attribute of the input task button to have a specific value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                                       | Default    |\n|---------|----------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [bool](`bool`)                               | The expected value of the `auto-reset` attribute.                                 | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### expect_label { #shiny.playwright.controller.InputTaskButton.expect_label }\n\n```python\nplaywright.controller.InputTaskButton.expect_label(value, *, timeout=None)\n```\n\nExpect the label of the input task button to have a specific value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                                       | Default    |\n|---------|--------------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected value of the label.                                                  | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### expect_label_busy { #shiny.playwright.controller.InputTaskButton.expect_label_busy }\n\n```python\nplaywright.controller.InputTaskButton.expect_label_busy(value, *, timeout=None)\n```\n\nExpect the label of a busy input task button to have a specific value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                                       | Default    |\n|---------|--------------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected value of the label.                                                  | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### expect_label_ready { #shiny.playwright.controller.InputTaskButton.expect_label_ready }\n\n```python\nplaywright.controller.InputTaskButton.expect_label_ready(value, *, timeout=None)\n```\n\nExpect the label of a ready input task button to have a specific value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                                       | Default    |\n|---------|--------------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected value of the label.                                                  | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### expect_label_state { #shiny.playwright.controller.InputTaskButton.expect_label_state }\n\n```python\nplaywright.controller.InputTaskButton.expect_label_state(\n    state,\n    value,\n    *,\n    timeout=None,\n)\n```\n\nExpect the label of the input task button to have a specific value in a specific state.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                                       | Default    |\n|---------|--------------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| state   | [str](`str`)                                           | The state of the input task button.                                               | _required_ |\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected value of the label.                                                  | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### expect_state { #shiny.playwright.controller.InputTaskButton.expect_state }\n\n```python\nplaywright.controller.InputTaskButton.expect_state(value, *, timeout=None)\n```\n\nExpect the state of the input task button to have a specific value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                           | Description                                                                       | Default    |\n|---------|----------------------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [Literal](`typing.Literal`)\\['ready', 'busy'\\] \\| [str](`str`) | The expected value of the state of the input task button.                         | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)                   | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### expect_width { #shiny.playwright.controller.InputTaskButton.expect_width }\n\n```python\nplaywright.controller.InputTaskButton.expect_width(value, *, timeout=None)\n```\n\nExpect the `width` attribute of a DOM element to have a specific value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                                                       | Default    |\n|---------|--------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected value of the `width` attribute.                                      | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |"
    },
    {
        "controller_name": "playwright.controller.InputText",
        "attributes": "| Name | Description |\n| --- | --- |\n| [expect](#shiny.playwright.controller.InputText.expect) | Expectation method equivalent to `playwright.expect(self.loc)`. |\n| [id](#shiny.playwright.controller.InputText.id) | The browser DOM `id` of the UI element. |\n| [loc](#shiny.playwright.controller.InputText.loc) | Playwright `Locator` of the UI element. |\n| [loc_container](#shiny.playwright.controller.InputText.loc_container) | Playwright `Locator` for the container of the UI element. |\n| [loc_label](#shiny.playwright.controller.InputText.loc_label) | Playwright `Locator` for the label of the UI element. |\n| [page](#shiny.playwright.controller.InputText.page) | Playwright `Page` of the Shiny app. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [expect_autocomplete](#shiny.playwright.controller.InputText.expect_autocomplete) | Expect the `autocomplete` attribute of the input to have a specific value. |\n| [expect_label](#shiny.playwright.controller.InputText.expect_label) | Expect the label of the input to have a specific text. |\n| [expect_placeholder](#shiny.playwright.controller.InputText.expect_placeholder) | Expect the `placeholder` attribute of the input to have a specific value. |\n| [expect_spellcheck](#shiny.playwright.controller.InputText.expect_spellcheck) | Expect the `spellcheck` attribute of the input to have a specific value. |\n| [expect_value](#shiny.playwright.controller.InputText.expect_value) | Expect the value of the text input to have a specific value. |\n| [expect_width](#shiny.playwright.controller.InputText.expect_width) | Expect the input element to have a specific width. |\n| [set](#shiny.playwright.controller.InputText.set) | Sets the text value |\n\n### expect_autocomplete { #shiny.playwright.controller.InputText.expect_autocomplete }\n\n```python\nplaywright.controller.InputText.expect_autocomplete(value, *, timeout=None)\n```\n\nExpect the `autocomplete` attribute of the input to have a specific value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                                                       | Default    |\n|---------|--------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected value of the `autocomplete` attribute.                               | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### expect_label { #shiny.playwright.controller.InputText.expect_label }\n\n```python\nplaywright.controller.InputText.expect_label(value, *, timeout=None)\n```\n\nExpect the label of the input to have a specific text.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                                       | Default    |\n|---------|--------------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected text value of the label.                                             | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### expect_placeholder { #shiny.playwright.controller.InputText.expect_placeholder }\n\n```python\nplaywright.controller.InputText.expect_placeholder(value, *, timeout=None)\n```\n\nExpect the `placeholder` attribute of the input to have a specific value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                                                       | Default    |\n|---------|--------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected value of the `placeholder` attribute.                                | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### expect_spellcheck { #shiny.playwright.controller.InputText.expect_spellcheck }\n\n```python\nplaywright.controller.InputText.expect_spellcheck(value, *, timeout=None)\n```\n\nExpect the `spellcheck` attribute of the input to have a specific value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                                       | Default    |\n|---------|--------------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [Literal](`typing.Literal`)\\['true', 'false'\\] \\| None | The expected value of the `spellcheck` attribute.                                 | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### expect_value { #shiny.playwright.controller.InputText.expect_value }\n\n```python\nplaywright.controller.InputText.expect_value(value, *, timeout=None)\n```\n\nExpect the value of the text input to have a specific value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                                       | Default    |\n|---------|--------------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected value of the text input.                                             | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### expect_width { #shiny.playwright.controller.InputText.expect_width }\n\n```python\nplaywright.controller.InputText.expect_width(value, *, timeout=None)\n```\n\nExpect the input element to have a specific width.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                                                       | Default    |\n|---------|--------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected width.                                                               | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### set { #shiny.playwright.controller.InputText.set }\n\n```python\nplaywright.controller.InputText.set(value, *, timeout=None)\n```\n\nSets the text value\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                          | Default    |\n|---------|----------------------------------------------|----------------------------------------------------------------------|------------|\n| value   | [str](`str`)                                 | The text to set.                                                     | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the text to be set. Defaults to `None`. | `None`     |"
    },
    {
        "controller_name": "playwright.controller.InputTextArea",
        "attributes": "| Name | Description |\n| --- | --- |\n| [expect](#shiny.playwright.controller.InputTextArea.expect) | Expectation method equivalent to `playwright.expect(self.loc)`. |\n| [id](#shiny.playwright.controller.InputTextArea.id) | The browser DOM `id` of the UI element. |\n| [loc](#shiny.playwright.controller.InputTextArea.loc) | Playwright `Locator` of the UI element. |\n| [loc_container](#shiny.playwright.controller.InputTextArea.loc_container) | Playwright `Locator` for the container of the UI element. |\n| [loc_label](#shiny.playwright.controller.InputTextArea.loc_label) | Playwright `Locator` for the label of the UI element. |\n| [page](#shiny.playwright.controller.InputTextArea.page) | Playwright `Page` of the Shiny app. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [expect_autocomplete](#shiny.playwright.controller.InputTextArea.expect_autocomplete) | Expect the `autocomplete` attribute of the input to have a specific value. |\n| [expect_autoresize](#shiny.playwright.controller.InputTextArea.expect_autoresize) | Expect the `autoresize` attribute of the input text area to have a specific value. |\n| [expect_cols](#shiny.playwright.controller.InputTextArea.expect_cols) | Expect the `cols` attribute of the input text area to have a specific value. |\n| [expect_height](#shiny.playwright.controller.InputTextArea.expect_height) | Expect the `height` attribute of the input text area to have a specific value. |\n| [expect_label](#shiny.playwright.controller.InputTextArea.expect_label) | Expect the label of the input to have a specific text. |\n| [expect_placeholder](#shiny.playwright.controller.InputTextArea.expect_placeholder) | Expect the `placeholder` attribute of the input to have a specific value. |\n| [expect_resize](#shiny.playwright.controller.InputTextArea.expect_resize) | Expect the `resize` attribute of the input text area to have a specific value. |\n| [expect_rows](#shiny.playwright.controller.InputTextArea.expect_rows) | Expect the `rows` attribute of the input text area to have a specific value. |\n| [expect_spellcheck](#shiny.playwright.controller.InputTextArea.expect_spellcheck) | Expect the `spellcheck` attribute of the input to have a specific value. |\n| [expect_value](#shiny.playwright.controller.InputTextArea.expect_value) | Expect the value of the text input to have a specific value. |\n| [expect_width](#shiny.playwright.controller.InputTextArea.expect_width) | Expect the `width` attribute of the input text area to have a specific value. |\n| [set](#shiny.playwright.controller.InputTextArea.set) | Sets the text value |\n\n### expect_autocomplete { #shiny.playwright.controller.InputTextArea.expect_autocomplete }\n\n```python\nplaywright.controller.InputTextArea.expect_autocomplete(value, *, timeout=None)\n```\n\nExpect the `autocomplete` attribute of the input to have a specific value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                                                       | Default    |\n|---------|--------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected value of the `autocomplete` attribute.                               | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### expect_autoresize { #shiny.playwright.controller.InputTextArea.expect_autoresize }\n\n```python\nplaywright.controller.InputTextArea.expect_autoresize(value, *, timeout=None)\n```\n\nExpect the `autoresize` attribute of the input text area to have a specific value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                                       | Default    |\n|---------|----------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [bool](`bool`)                               | The expected value of the `autoresize` attribute.                                 | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### expect_cols { #shiny.playwright.controller.InputTextArea.expect_cols }\n\n```python\nplaywright.controller.InputTextArea.expect_cols(value, *, timeout=None)\n```\n\nExpect the `cols` attribute of the input text area to have a specific value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                                                       | Default    |\n|---------|--------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected value of the `cols` attribute.                                       | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### expect_height { #shiny.playwright.controller.InputTextArea.expect_height }\n\n```python\nplaywright.controller.InputTextArea.expect_height(value, *, timeout=None)\n```\n\nExpect the `height` attribute of the input text area to have a specific value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                               | Description                                                                       | Default    |\n|---------|----------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [StyleValue](`shiny.playwright._types.StyleValue`) | The expected value of the `height` attribute.                                     | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)       | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### expect_label { #shiny.playwright.controller.InputTextArea.expect_label }\n\n```python\nplaywright.controller.InputTextArea.expect_label(value, *, timeout=None)\n```\n\nExpect the label of the input to have a specific text.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                                       | Default    |\n|---------|--------------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected text value of the label.                                             | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### expect_placeholder { #shiny.playwright.controller.InputTextArea.expect_placeholder }\n\n```python\nplaywright.controller.InputTextArea.expect_placeholder(value, *, timeout=None)\n```\n\nExpect the `placeholder` attribute of the input to have a specific value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                                                       | Default    |\n|---------|--------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected value of the `placeholder` attribute.                                | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### expect_resize { #shiny.playwright.controller.InputTextArea.expect_resize }\n\n```python\nplaywright.controller.InputTextArea.expect_resize(value, *, timeout=None)\n```\n\nExpect the `resize` attribute of the input text area to have a specific value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                         | Description                                                                       | Default    |\n|---------|--------------------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [Resize](`shiny.playwright.controller._base.Resize`) \\| None | The expected value of the `resize` attribute.                                     | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)                 | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### expect_rows { #shiny.playwright.controller.InputTextArea.expect_rows }\n\n```python\nplaywright.controller.InputTextArea.expect_rows(value, *, timeout=None)\n```\n\nExpect the `rows` attribute of the input text area to have a specific value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                                                       | Default    |\n|---------|--------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected value of the `rows` attribute.                                       | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### expect_spellcheck { #shiny.playwright.controller.InputTextArea.expect_spellcheck }\n\n```python\nplaywright.controller.InputTextArea.expect_spellcheck(value, *, timeout=None)\n```\n\nExpect the `spellcheck` attribute of the input to have a specific value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                                       | Default    |\n|---------|--------------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [Literal](`typing.Literal`)\\['true', 'false'\\] \\| None | The expected value of the `spellcheck` attribute.                                 | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### expect_value { #shiny.playwright.controller.InputTextArea.expect_value }\n\n```python\nplaywright.controller.InputTextArea.expect_value(value, *, timeout=None)\n```\n\nExpect the value of the text input to have a specific value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                                       | Default    |\n|---------|--------------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected value of the text input.                                             | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### expect_width { #shiny.playwright.controller.InputTextArea.expect_width }\n\n```python\nplaywright.controller.InputTextArea.expect_width(value, *, timeout=None)\n```\n\nExpect the `width` attribute of the input text area to have a specific value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                               | Description                                                                       | Default    |\n|---------|----------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [StyleValue](`shiny.playwright._types.StyleValue`) | The expected value of the `width` attribute.                                      | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)       | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### set { #shiny.playwright.controller.InputTextArea.set }\n\n```python\nplaywright.controller.InputTextArea.set(value, *, timeout=None)\n```\n\nSets the text value\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                          | Default    |\n|---------|----------------------------------------------|----------------------------------------------------------------------|------------|\n| value   | [str](`str`)                                 | The text to set.                                                     | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the text to be set. Defaults to `None`. | `None`     |"
    },
    {
        "controller_name": "playwright.controller.NavItem",
        "attributes": "| Name | Description |\n| --- | --- |\n| [loc](#shiny.playwright.controller.NavItem.loc) | Playwright `Locator` for the nav item. |\n| [loc_container](#shiny.playwright.controller.NavItem.loc_container) | Playwright `Locator` for the nav item container. |\n| [loc_content](#shiny.playwright.controller.NavItem.loc_content) | Returns the locator for the content of the nav item. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [click](#shiny.playwright.controller.NavItem.click) | Clicks the nav item. |\n| [expect_active](#shiny.playwright.controller.NavItem.expect_active) | Expects the nav item to be active or inactive. |\n\n### click { #shiny.playwright.controller.NavItem.click }\n\n`playwright.controller.NavItem.click(timeout=None)`\n\nClicks the nav item.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the nav item to be visible and interactable. Defaults to `None`.\n\n### expect_active { #shiny.playwright.controller.NavItem.expect_active }\n\n`playwright.controller.NavItem.expect_active(value, *, timeout=None)`\n\nExpects the nav item to be active or inactive.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">active</span></code>\n\n:   `True` if the nav item is expected to be active, False otherwise.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the expectation to pass. Defaults to `None`."
    },
    {
        "controller_name": "playwright.controller.NavPanel",
        "attributes": "| Name | Description |\n| --- | --- |\n| [expect](#shiny.playwright.controller.NavPanel.expect) | Expectation method equivalent to `playwright.expect(self.loc)`. |\n| [id](#shiny.playwright.controller.NavPanel.id) | The browser DOM `id` of the UI element. |\n| [loc](#shiny.playwright.controller.NavPanel.loc) | Playwright `Locator` for the nav panel. |\n| [loc_container](#shiny.playwright.controller.NavPanel.loc_container) | Playwright `Locator` for the nav panel container. |\n| [loc_content](#shiny.playwright.controller.NavPanel.loc_content) | Returns the locator for the content of the nav panel. |\n| [page](#shiny.playwright.controller.NavPanel.page) | Playwright `Page` of the Shiny app. |\n| [panel_value](#shiny.playwright.controller.NavPanel.panel_value) | The `data-value` attribute used to identify the nav panel within the larger navset. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [click](#shiny.playwright.controller.NavPanel.click) | Clicks the nav panel. |\n| [expect_active](#shiny.playwright.controller.NavPanel.expect_active) | Expects the nav panel to be active or inactive. |\n\n### click { #shiny.playwright.controller.NavPanel.click }\n\n```python\nplaywright.controller.NavPanel.click(timeout=None)\n```\n\nClicks the nav panel.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                                                    | Default   |\n|---------|----------------------------------------------|------------------------------------------------------------------------------------------------|-----------|\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the nav panel to be visible and interactable. Defaults to `None`. | `None`    |\n\n### expect_active { #shiny.playwright.controller.NavPanel.expect_active }\n\n```python\nplaywright.controller.NavPanel.expect_active(value, *, timeout=None)\n```\n\nExpects the nav panel to be active or inactive.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                               | Default    |\n|---------|----------------------------------------------|---------------------------------------------------------------------------|------------|\n| value   | [bool](`bool`)                               | `True` if the nav panel is expected to be active, False otherwise.        | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |"
    },
    {
        "controller_name": "playwright.controller.NavsetBar",
        "attributes": "| Name | Description |\n| --- | --- |\n| [expect](#shiny.playwright.controller.NavsetBar.expect) | Expectation method equivalent to `playwright.expect(self.loc)`. |\n| [id](#shiny.playwright.controller.NavsetBar.id) | The browser DOM `id` of the UI element. |\n| [loc](#shiny.playwright.controller.NavsetBar.loc) | Playwright `Locator` of the UI element. |\n| [loc_container](#shiny.playwright.controller.NavsetBar.loc_container) | Playwright `Locator` for the container of the UI element. |\n| [page](#shiny.playwright.controller.NavsetBar.page) | Playwright `Page` of the Shiny app. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [expect_bg](#shiny.playwright.controller.NavsetBar.expect_bg) | Expects the navset bar to have the specified background color. |\n| [expect_fluid](#shiny.playwright.controller.NavsetBar.expect_fluid) | Expects the navset bar to have a fluid or fixed layout. |\n| [expect_gap](#shiny.playwright.controller.NavsetBar.expect_gap) | Expects the navset bar to have the specified gap. |\n| [expect_inverse](#shiny.playwright.controller.NavsetBar.expect_inverse) | Expects the navset bar to be light text color if inverse is True |\n| [expect_nav_titles](#shiny.playwright.controller.NavsetBar.expect_nav_titles) | Expects the control to have the specified nav titles. |\n| [expect_nav_values](#shiny.playwright.controller.NavsetBar.expect_nav_values) | Expects the control to have the specified nav values. |\n| [expect_position](#shiny.playwright.controller.NavsetBar.expect_position) | Expects the navset bar to have the specified position. |\n| [expect_sidebar](#shiny.playwright.controller.NavsetBar.expect_sidebar) | Assert whether or not the sidebar exists within the navset. |\n| [expect_title](#shiny.playwright.controller.NavsetBar.expect_title) | Expects the navset title to have the specified text. |\n| [expect_value](#shiny.playwright.controller.NavsetBar.expect_value) | Expects the control to have the specified value. |\n| [get_loc_active_content](#shiny.playwright.controller.NavsetBar.get_loc_active_content) | Returns the locator for the active content. |\n| [nav_panel](#shiny.playwright.controller.NavsetBar.nav_panel) | Returns the nav panel ([](:class:`~shiny.playwright.controls.NavPanel`)) with the specified value. |\n| [set](#shiny.playwright.controller.NavsetBar.set) | Sets the state of the control to open or closed. |\n\n### expect_bg { #shiny.playwright.controller.NavsetBar.expect_bg }\n\n```python\nplaywright.controller.NavsetBar.expect_bg(bg, *, timeout=None)\n```\n\nExpects the navset bar to have the specified background color.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                               | Default    |\n|---------|--------------------------------------------------------|---------------------------------------------------------------------------|------------|\n| bg      | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected background color.                                            | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### expect_fluid { #shiny.playwright.controller.NavsetBar.expect_fluid }\n\n```python\nplaywright.controller.NavsetBar.expect_fluid(value, *, timeout=None)\n```\n\nExpects the navset bar to have a fluid or fixed layout.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                               | Default    |\n|---------|----------------------------------------------|---------------------------------------------------------------------------|------------|\n| value   | [bool](`bool`)                               | `True` if the layout is `fluid` or `False` if it is `fixed`.              | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### expect_gap { #shiny.playwright.controller.NavsetBar.expect_gap }\n\n```python\nplaywright.controller.NavsetBar.expect_gap(gap, *, timeout=None)\n```\n\nExpects the navset bar to have the specified gap.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                               | Default    |\n|---------|--------------------------------------------------------|---------------------------------------------------------------------------|------------|\n| gap     | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected gap.                                                         | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### expect_inverse { #shiny.playwright.controller.NavsetBar.expect_inverse }\n\n```python\nplaywright.controller.NavsetBar.expect_inverse(value, *, timeout=None)\n```\n\nExpects the navset bar to be light text color if inverse is True\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                                         | Default    |\n|---------|----------------------------------------------|-------------------------------------------------------------------------------------|------------|\n| value   | [bool](`bool`)                               | `True` if the navset bar is expected to have inverse text color, `False` otherwise. | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the expectation to pass. Defaults to `None`.           | `None`     |\n\n### expect_nav_titles { #shiny.playwright.controller.NavsetBar.expect_nav_titles }\n\n```python\nplaywright.controller.NavsetBar.expect_nav_titles(value, *, timeout=None)\n```\n\nExpects the control to have the specified nav titles.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                                     | Description                                                               | Default    |\n|---------|--------------------------------------------------------------------------|---------------------------------------------------------------------------|------------|\n| value   | [list](`list`)\\[[PatternOrStr](`shiny.playwright._types.PatternOrStr`)\\] | The expected nav titles.                                                  | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)                             | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### expect_nav_values { #shiny.playwright.controller.NavsetBar.expect_nav_values }\n\n```python\nplaywright.controller.NavsetBar.expect_nav_values(value, *, timeout=None)\n```\n\nExpects the control to have the specified nav values.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                                     | Description                                                               | Default    |\n|---------|--------------------------------------------------------------------------|---------------------------------------------------------------------------|------------|\n| value   | [list](`list`)\\[[PatternOrStr](`shiny.playwright._types.PatternOrStr`)\\] | The expected nav values.                                                  | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)                             | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### expect_position { #shiny.playwright.controller.NavsetBar.expect_position }\n\n```python\nplaywright.controller.NavsetBar.expect_position(\n    position='static-top',\n    *,\n    timeout=None,\n)\n```\n\nExpects the navset bar to have the specified position.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name     | Type                                                                                              | Description                                                               | Default        |\n|----------|---------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------|----------------|\n| position | [Literal](`typing_extensions.Literal`)\\['fixed-top', 'fixed-bottom', 'static-top', 'sticky-top'\\] | The expected position. Defaults to `'static-top'`.                        | `'static-top'` |\n| timeout  | [Timeout](`shiny.playwright._types.Timeout`)                                                      | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`         |\n\n### expect_sidebar { #shiny.playwright.controller.NavsetBar.expect_sidebar }\n\n```python\nplaywright.controller.NavsetBar.expect_sidebar(exists, *, timeout=None)\n```\n\nAssert whether or not the sidebar exists within the navset.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                               | Default    |\n|---------|----------------------------------------------|---------------------------------------------------------------------------|------------|\n| exists  | [bool](`bool`)                               | `True` if the sidebar exists within the navset.                           | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### expect_title { #shiny.playwright.controller.NavsetBar.expect_title }\n\n```python\nplaywright.controller.NavsetBar.expect_title(value, *, timeout=None)\n```\n\nExpects the navset title to have the specified text.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                               | Default    |\n|---------|--------------------------------------------------------|---------------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected text pattern or string.                                      | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### expect_value { #shiny.playwright.controller.NavsetBar.expect_value }\n\n```python\nplaywright.controller.NavsetBar.expect_value(value, *, timeout=None)\n```\n\nExpects the control to have the specified value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                               | Default    |\n|---------|--------------------------------------------------------|---------------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected value.                                                       | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### get_loc_active_content { #shiny.playwright.controller.NavsetBar.get_loc_active_content }\n\n```python\nplaywright.controller.NavsetBar.get_loc_active_content(timeout=None)\n```\n\nReturns the locator for the active content.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                             | Default   |\n|---------|----------------------------------------------|-------------------------------------------------------------------------|-----------|\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the locator to appear. Defaults to `None`. | `None`    |\n\n### nav_panel { #shiny.playwright.controller.NavsetBar.nav_panel }\n\n```python\nplaywright.controller.NavsetBar.nav_panel(value)\n```\n\nReturns the nav panel ([](:class:`~shiny.playwright.controls.NavPanel`))\nwith the specified value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name   | Type         | Description                 | Default    |\n|--------|--------------|-----------------------------|------------|\n| value  | [str](`str`) | The value of the nav panel. | _required_ |\n\n### set { #shiny.playwright.controller.NavsetBar.set }\n\n```python\nplaywright.controller.NavsetBar.set(value, *, timeout=None)\n```\n\nSets the state of the control to open or closed.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name   | Type         | Description            | Default    |\n|--------|--------------|------------------------|------------|\n| value  | [str](`str`) | The selected nav item. | _required_ |"
    },
    {
        "controller_name": "playwright.controller.NavsetCardPill",
        "attributes": "| Name | Description |\n| --- | --- |\n| [expect](#shiny.playwright.controller.NavsetCardPill.expect) | Expectation method equivalent to `playwright.expect(self.loc)`. |\n| [id](#shiny.playwright.controller.NavsetCardPill.id) | The browser DOM `id` of the UI element. |\n| [loc](#shiny.playwright.controller.NavsetCardPill.loc) | Playwright `Locator` of the UI element. |\n| [loc_container](#shiny.playwright.controller.NavsetCardPill.loc_container) | Playwright `Locator` for the container of the UI element. |\n| [page](#shiny.playwright.controller.NavsetCardPill.page) | Playwright `Page` of the Shiny app. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [expect_nav_titles](#shiny.playwright.controller.NavsetCardPill.expect_nav_titles) | Expects the control to have the specified nav titles. |\n| [expect_nav_values](#shiny.playwright.controller.NavsetCardPill.expect_nav_values) | Expects the control to have the specified nav values. |\n| [expect_placement](#shiny.playwright.controller.NavsetCardPill.expect_placement) | Expects the navset to have the specified placement. |\n| [expect_sidebar](#shiny.playwright.controller.NavsetCardPill.expect_sidebar) | Assert whether or not the sidebar exists within the navset. |\n| [expect_title](#shiny.playwright.controller.NavsetCardPill.expect_title) | Expects the navset title to have the specified text. |\n| [expect_value](#shiny.playwright.controller.NavsetCardPill.expect_value) | Expects the control to have the specified value. |\n| [get_loc_active_content](#shiny.playwright.controller.NavsetCardPill.get_loc_active_content) | Returns the locator for the active content. |\n| [nav_panel](#shiny.playwright.controller.NavsetCardPill.nav_panel) | Returns the nav panel ([](:class:`~shiny.playwright.controls.NavPanel`)) with the specified value. |\n| [set](#shiny.playwright.controller.NavsetCardPill.set) | Sets the state of the control to open or closed. |\n\n### expect_nav_titles { #shiny.playwright.controller.NavsetCardPill.expect_nav_titles }\n\n```python\nplaywright.controller.NavsetCardPill.expect_nav_titles(value, *, timeout=None)\n```\n\nExpects the control to have the specified nav titles.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                                     | Description                                                               | Default    |\n|---------|--------------------------------------------------------------------------|---------------------------------------------------------------------------|------------|\n| value   | [list](`list`)\\[[PatternOrStr](`shiny.playwright._types.PatternOrStr`)\\] | The expected nav titles.                                                  | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)                             | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### expect_nav_values { #shiny.playwright.controller.NavsetCardPill.expect_nav_values }\n\n```python\nplaywright.controller.NavsetCardPill.expect_nav_values(value, *, timeout=None)\n```\n\nExpects the control to have the specified nav values.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                                     | Description                                                               | Default    |\n|---------|--------------------------------------------------------------------------|---------------------------------------------------------------------------|------------|\n| value   | [list](`list`)\\[[PatternOrStr](`shiny.playwright._types.PatternOrStr`)\\] | The expected nav values.                                                  | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)                             | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### expect_placement { #shiny.playwright.controller.NavsetCardPill.expect_placement }\n\n```python\nplaywright.controller.NavsetCardPill.expect_placement(\n    location='above',\n    *,\n    timeout=None,\n)\n```\n\nExpects the navset to have the specified placement.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name     | Type                                                       | Description                                                               | Default   |\n|----------|------------------------------------------------------------|---------------------------------------------------------------------------|-----------|\n| location | [Literal](`typing_extensions.Literal`)\\['above', 'below'\\] | The expected placement location. Defaults to `'above'`.                   | `'above'` |\n| timeout  | [Timeout](`shiny.playwright._types.Timeout`)               | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`    |\n\n### expect_sidebar { #shiny.playwright.controller.NavsetCardPill.expect_sidebar }\n\n```python\nplaywright.controller.NavsetCardPill.expect_sidebar(exists, *, timeout=None)\n```\n\nAssert whether or not the sidebar exists within the navset.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                               | Default    |\n|---------|----------------------------------------------|---------------------------------------------------------------------------|------------|\n| exists  | [bool](`bool`)                               | `True` if the sidebar exists within the navset.                           | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### expect_title { #shiny.playwright.controller.NavsetCardPill.expect_title }\n\n```python\nplaywright.controller.NavsetCardPill.expect_title(value, *, timeout=None)\n```\n\nExpects the navset title to have the specified text.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                               | Default    |\n|---------|--------------------------------------------------------|---------------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected text pattern or string.                                      | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### expect_value { #shiny.playwright.controller.NavsetCardPill.expect_value }\n\n```python\nplaywright.controller.NavsetCardPill.expect_value(value, *, timeout=None)\n```\n\nExpects the control to have the specified value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                               | Default    |\n|---------|--------------------------------------------------------|---------------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected value.                                                       | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### get_loc_active_content { #shiny.playwright.controller.NavsetCardPill.get_loc_active_content }\n\n```python\nplaywright.controller.NavsetCardPill.get_loc_active_content(timeout=None)\n```\n\nReturns the locator for the active content.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                             | Default   |\n|---------|----------------------------------------------|-------------------------------------------------------------------------|-----------|\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the locator to appear. Defaults to `None`. | `None`    |\n\n### nav_panel { #shiny.playwright.controller.NavsetCardPill.nav_panel }\n\n```python\nplaywright.controller.NavsetCardPill.nav_panel(value)\n```\n\nReturns the nav panel ([](:class:`~shiny.playwright.controls.NavPanel`))\nwith the specified value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name   | Type         | Description                 | Default    |\n|--------|--------------|-----------------------------|------------|\n| value  | [str](`str`) | The value of the nav panel. | _required_ |\n\n### set { #shiny.playwright.controller.NavsetCardPill.set }\n\n```python\nplaywright.controller.NavsetCardPill.set(value, *, timeout=None)\n```\n\nSets the state of the control to open or closed.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name   | Type         | Description            | Default    |\n|--------|--------------|------------------------|------------|\n| value  | [str](`str`) | The selected nav item. | _required_ |"
    },
    {
        "controller_name": "playwright.controller.NavsetCardTab",
        "attributes": "| Name | Description |\n| --- | --- |\n| [expect](#shiny.playwright.controller.NavsetCardTab.expect) | Expectation method equivalent to `playwright.expect(self.loc)`. |\n| [id](#shiny.playwright.controller.NavsetCardTab.id) | The browser DOM `id` of the UI element. |\n| [loc](#shiny.playwright.controller.NavsetCardTab.loc) | Playwright `Locator` of the UI element. |\n| [loc_container](#shiny.playwright.controller.NavsetCardTab.loc_container) | Playwright `Locator` for the container of the UI element. |\n| [page](#shiny.playwright.controller.NavsetCardTab.page) | Playwright `Page` of the Shiny app. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [expect_nav_titles](#shiny.playwright.controller.NavsetCardTab.expect_nav_titles) | Expects the control to have the specified nav titles. |\n| [expect_nav_values](#shiny.playwright.controller.NavsetCardTab.expect_nav_values) | Expects the control to have the specified nav values. |\n| [expect_sidebar](#shiny.playwright.controller.NavsetCardTab.expect_sidebar) | Assert whether or not the sidebar exists within the navset. |\n| [expect_title](#shiny.playwright.controller.NavsetCardTab.expect_title) | Expects the navset title to have the specified text. |\n| [expect_value](#shiny.playwright.controller.NavsetCardTab.expect_value) | Expects the control to have the specified value. |\n| [get_loc_active_content](#shiny.playwright.controller.NavsetCardTab.get_loc_active_content) | Returns the locator for the active content. |\n| [nav_panel](#shiny.playwright.controller.NavsetCardTab.nav_panel) | Returns the nav panel ([](:class:`~shiny.playwright.controls.NavPanel`)) with the specified value. |\n| [set](#shiny.playwright.controller.NavsetCardTab.set) | Sets the state of the control to open or closed. |\n\n### expect_nav_titles { #shiny.playwright.controller.NavsetCardTab.expect_nav_titles }\n\n```python\nplaywright.controller.NavsetCardTab.expect_nav_titles(value, *, timeout=None)\n```\n\nExpects the control to have the specified nav titles.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                                     | Description                                                               | Default    |\n|---------|--------------------------------------------------------------------------|---------------------------------------------------------------------------|------------|\n| value   | [list](`list`)\\[[PatternOrStr](`shiny.playwright._types.PatternOrStr`)\\] | The expected nav titles.                                                  | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)                             | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### expect_nav_values { #shiny.playwright.controller.NavsetCardTab.expect_nav_values }\n\n```python\nplaywright.controller.NavsetCardTab.expect_nav_values(value, *, timeout=None)\n```\n\nExpects the control to have the specified nav values.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                                     | Description                                                               | Default    |\n|---------|--------------------------------------------------------------------------|---------------------------------------------------------------------------|------------|\n| value   | [list](`list`)\\[[PatternOrStr](`shiny.playwright._types.PatternOrStr`)\\] | The expected nav values.                                                  | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)                             | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### expect_sidebar { #shiny.playwright.controller.NavsetCardTab.expect_sidebar }\n\n```python\nplaywright.controller.NavsetCardTab.expect_sidebar(exists, *, timeout=None)\n```\n\nAssert whether or not the sidebar exists within the navset.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                               | Default    |\n|---------|----------------------------------------------|---------------------------------------------------------------------------|------------|\n| exists  | [bool](`bool`)                               | `True` if the sidebar exists within the navset.                           | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### expect_title { #shiny.playwright.controller.NavsetCardTab.expect_title }\n\n```python\nplaywright.controller.NavsetCardTab.expect_title(value, *, timeout=None)\n```\n\nExpects the navset title to have the specified text.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                               | Default    |\n|---------|--------------------------------------------------------|---------------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected text pattern or string.                                      | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### expect_value { #shiny.playwright.controller.NavsetCardTab.expect_value }\n\n```python\nplaywright.controller.NavsetCardTab.expect_value(value, *, timeout=None)\n```\n\nExpects the control to have the specified value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                               | Default    |\n|---------|--------------------------------------------------------|---------------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected value.                                                       | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### get_loc_active_content { #shiny.playwright.controller.NavsetCardTab.get_loc_active_content }\n\n```python\nplaywright.controller.NavsetCardTab.get_loc_active_content(timeout=None)\n```\n\nReturns the locator for the active content.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                             | Default   |\n|---------|----------------------------------------------|-------------------------------------------------------------------------|-----------|\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the locator to appear. Defaults to `None`. | `None`    |\n\n### nav_panel { #shiny.playwright.controller.NavsetCardTab.nav_panel }\n\n```python\nplaywright.controller.NavsetCardTab.nav_panel(value)\n```\n\nReturns the nav panel ([](:class:`~shiny.playwright.controls.NavPanel`))\nwith the specified value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name   | Type         | Description                 | Default    |\n|--------|--------------|-----------------------------|------------|\n| value  | [str](`str`) | The value of the nav panel. | _required_ |\n\n### set { #shiny.playwright.controller.NavsetCardTab.set }\n\n```python\nplaywright.controller.NavsetCardTab.set(value, *, timeout=None)\n```\n\nSets the state of the control to open or closed.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name   | Type         | Description            | Default    |\n|--------|--------------|------------------------|------------|\n| value  | [str](`str`) | The selected nav item. | _required_ |"
    },
    {
        "controller_name": "playwright.controller.NavsetCardUnderline",
        "attributes": "| Name | Description |\n| --- | --- |\n| [expect](#shiny.playwright.controller.NavsetCardUnderline.expect) | Expectation method equivalent to `playwright.expect(self.loc)`. |\n| [id](#shiny.playwright.controller.NavsetCardUnderline.id) | The browser DOM `id` of the UI element. |\n| [loc](#shiny.playwright.controller.NavsetCardUnderline.loc) | Playwright `Locator` of the UI element. |\n| [loc_container](#shiny.playwright.controller.NavsetCardUnderline.loc_container) | Playwright `Locator` for the container of the UI element. |\n| [page](#shiny.playwright.controller.NavsetCardUnderline.page) | Playwright `Page` of the Shiny app. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [expect_nav_titles](#shiny.playwright.controller.NavsetCardUnderline.expect_nav_titles) | Expects the control to have the specified nav titles. |\n| [expect_nav_values](#shiny.playwright.controller.NavsetCardUnderline.expect_nav_values) | Expects the control to have the specified nav values. |\n| [expect_placement](#shiny.playwright.controller.NavsetCardUnderline.expect_placement) | Expects the navset to have the specified placement. |\n| [expect_sidebar](#shiny.playwright.controller.NavsetCardUnderline.expect_sidebar) | Assert whether or not the sidebar exists within the navset. |\n| [expect_title](#shiny.playwright.controller.NavsetCardUnderline.expect_title) | Expects the navset title to have the specified text. |\n| [expect_value](#shiny.playwright.controller.NavsetCardUnderline.expect_value) | Expects the control to have the specified value. |\n| [get_loc_active_content](#shiny.playwright.controller.NavsetCardUnderline.get_loc_active_content) | Returns the locator for the active content. |\n| [nav_panel](#shiny.playwright.controller.NavsetCardUnderline.nav_panel) | Returns the nav panel ([](:class:`~shiny.playwright.controls.NavPanel`)) with the specified value. |\n| [set](#shiny.playwright.controller.NavsetCardUnderline.set) | Sets the state of the control to open or closed. |\n\n### expect_nav_titles { #shiny.playwright.controller.NavsetCardUnderline.expect_nav_titles }\n\n```python\nplaywright.controller.NavsetCardUnderline.expect_nav_titles(\n    value,\n    *,\n    timeout=None,\n)\n```\n\nExpects the control to have the specified nav titles.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                                     | Description                                                               | Default    |\n|---------|--------------------------------------------------------------------------|---------------------------------------------------------------------------|------------|\n| value   | [list](`list`)\\[[PatternOrStr](`shiny.playwright._types.PatternOrStr`)\\] | The expected nav titles.                                                  | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)                             | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### expect_nav_values { #shiny.playwright.controller.NavsetCardUnderline.expect_nav_values }\n\n```python\nplaywright.controller.NavsetCardUnderline.expect_nav_values(\n    value,\n    *,\n    timeout=None,\n)\n```\n\nExpects the control to have the specified nav values.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                                     | Description                                                               | Default    |\n|---------|--------------------------------------------------------------------------|---------------------------------------------------------------------------|------------|\n| value   | [list](`list`)\\[[PatternOrStr](`shiny.playwright._types.PatternOrStr`)\\] | The expected nav values.                                                  | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)                             | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### expect_placement { #shiny.playwright.controller.NavsetCardUnderline.expect_placement }\n\n```python\nplaywright.controller.NavsetCardUnderline.expect_placement(\n    location='above',\n    *,\n    timeout=None,\n)\n```\n\nExpects the navset to have the specified placement.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name     | Type                                                       | Description                                                               | Default   |\n|----------|------------------------------------------------------------|---------------------------------------------------------------------------|-----------|\n| location | [Literal](`typing_extensions.Literal`)\\['above', 'below'\\] | The expected placement location. Defaults to `'above'`.                   | `'above'` |\n| timeout  | [Timeout](`shiny.playwright._types.Timeout`)               | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`    |\n\n### expect_sidebar { #shiny.playwright.controller.NavsetCardUnderline.expect_sidebar }\n\n```python\nplaywright.controller.NavsetCardUnderline.expect_sidebar(\n    exists,\n    *,\n    timeout=None,\n)\n```\n\nAssert whether or not the sidebar exists within the navset.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                               | Default    |\n|---------|----------------------------------------------|---------------------------------------------------------------------------|------------|\n| exists  | [bool](`bool`)                               | `True` if the sidebar exists within the navset.                           | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### expect_title { #shiny.playwright.controller.NavsetCardUnderline.expect_title }\n\n```python\nplaywright.controller.NavsetCardUnderline.expect_title(value, *, timeout=None)\n```\n\nExpects the navset title to have the specified text.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                               | Default    |\n|---------|--------------------------------------------------------|---------------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected text pattern or string.                                      | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### expect_value { #shiny.playwright.controller.NavsetCardUnderline.expect_value }\n\n```python\nplaywright.controller.NavsetCardUnderline.expect_value(value, *, timeout=None)\n```\n\nExpects the control to have the specified value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                               | Default    |\n|---------|--------------------------------------------------------|---------------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected value.                                                       | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### get_loc_active_content { #shiny.playwright.controller.NavsetCardUnderline.get_loc_active_content }\n\n```python\nplaywright.controller.NavsetCardUnderline.get_loc_active_content(timeout=None)\n```\n\nReturns the locator for the active content.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                             | Default   |\n|---------|----------------------------------------------|-------------------------------------------------------------------------|-----------|\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the locator to appear. Defaults to `None`. | `None`    |\n\n### nav_panel { #shiny.playwright.controller.NavsetCardUnderline.nav_panel }\n\n```python\nplaywright.controller.NavsetCardUnderline.nav_panel(value)\n```\n\nReturns the nav panel ([](:class:`~shiny.playwright.controls.NavPanel`))\nwith the specified value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name   | Type         | Description                 | Default    |\n|--------|--------------|-----------------------------|------------|\n| value  | [str](`str`) | The value of the nav panel. | _required_ |\n\n### set { #shiny.playwright.controller.NavsetCardUnderline.set }\n\n```python\nplaywright.controller.NavsetCardUnderline.set(value, *, timeout=None)\n```\n\nSets the state of the control to open or closed.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name   | Type         | Description            | Default    |\n|--------|--------------|------------------------|------------|\n| value  | [str](`str`) | The selected nav item. | _required_ |"
    },
    {
        "controller_name": "playwright.controller.NavsetHidden",
        "attributes": "| Name | Description |\n| --- | --- |\n| [expect](#shiny.playwright.controller.NavsetHidden.expect) | Expectation method equivalent to `playwright.expect(self.loc)`. |\n| [id](#shiny.playwright.controller.NavsetHidden.id) | The browser DOM `id` of the UI element. |\n| [loc](#shiny.playwright.controller.NavsetHidden.loc) | Playwright `Locator` of the UI element. |\n| [loc_container](#shiny.playwright.controller.NavsetHidden.loc_container) | Playwright `Locator` for the container of the UI element. |\n| [page](#shiny.playwright.controller.NavsetHidden.page) | Playwright `Page` of the Shiny app. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [expect_nav_titles](#shiny.playwright.controller.NavsetHidden.expect_nav_titles) | Expects the control to have the specified nav titles. |\n| [expect_nav_values](#shiny.playwright.controller.NavsetHidden.expect_nav_values) | Expects the control to have the specified nav values. |\n| [expect_value](#shiny.playwright.controller.NavsetHidden.expect_value) | Expects the control to have the specified value. |\n| [get_loc_active_content](#shiny.playwright.controller.NavsetHidden.get_loc_active_content) | Returns the locator for the active content. |\n| [nav_panel](#shiny.playwright.controller.NavsetHidden.nav_panel) | Returns the nav panel ([](:class:`~shiny.playwright.controls.NavPanel`)) with the specified value. |\n| [set](#shiny.playwright.controller.NavsetHidden.set) | Sets the state of the control to open or closed. |\n\n### expect_nav_titles { #shiny.playwright.controller.NavsetHidden.expect_nav_titles }\n\n```python\nplaywright.controller.NavsetHidden.expect_nav_titles(value, *, timeout=None)\n```\n\nExpects the control to have the specified nav titles.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                                     | Description                                                               | Default    |\n|---------|--------------------------------------------------------------------------|---------------------------------------------------------------------------|------------|\n| value   | [list](`list`)\\[[PatternOrStr](`shiny.playwright._types.PatternOrStr`)\\] | The expected nav titles.                                                  | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)                             | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### expect_nav_values { #shiny.playwright.controller.NavsetHidden.expect_nav_values }\n\n```python\nplaywright.controller.NavsetHidden.expect_nav_values(value, *, timeout=None)\n```\n\nExpects the control to have the specified nav values.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                                     | Description                                                               | Default    |\n|---------|--------------------------------------------------------------------------|---------------------------------------------------------------------------|------------|\n| value   | [list](`list`)\\[[PatternOrStr](`shiny.playwright._types.PatternOrStr`)\\] | The expected nav values.                                                  | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)                             | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### expect_value { #shiny.playwright.controller.NavsetHidden.expect_value }\n\n```python\nplaywright.controller.NavsetHidden.expect_value(value, *, timeout=None)\n```\n\nExpects the control to have the specified value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                               | Default    |\n|---------|--------------------------------------------------------|---------------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected value.                                                       | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### get_loc_active_content { #shiny.playwright.controller.NavsetHidden.get_loc_active_content }\n\n```python\nplaywright.controller.NavsetHidden.get_loc_active_content(timeout=None)\n```\n\nReturns the locator for the active content.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                             | Default   |\n|---------|----------------------------------------------|-------------------------------------------------------------------------|-----------|\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the locator to appear. Defaults to `None`. | `None`    |\n\n### nav_panel { #shiny.playwright.controller.NavsetHidden.nav_panel }\n\n```python\nplaywright.controller.NavsetHidden.nav_panel(value)\n```\n\nReturns the nav panel ([](:class:`~shiny.playwright.controls.NavPanel`))\nwith the specified value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name   | Type         | Description                 | Default    |\n|--------|--------------|-----------------------------|------------|\n| value  | [str](`str`) | The value of the nav panel. | _required_ |\n\n### set { #shiny.playwright.controller.NavsetHidden.set }\n\n```python\nplaywright.controller.NavsetHidden.set(value, *, timeout=None)\n```\n\nSets the state of the control to open or closed.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name   | Type         | Description            | Default    |\n|--------|--------------|------------------------|------------|\n| value  | [str](`str`) | The selected nav item. | _required_ |"
    },
    {
        "controller_name": "playwright.controller.NavsetPill",
        "attributes": "| Name | Description |\n| --- | --- |\n| [expect](#shiny.playwright.controller.NavsetPill.expect) | Expectation method equivalent to `playwright.expect(self.loc)`. |\n| [id](#shiny.playwright.controller.NavsetPill.id) | The browser DOM `id` of the UI element. |\n| [loc](#shiny.playwright.controller.NavsetPill.loc) | Playwright `Locator` of the UI element. |\n| [loc_container](#shiny.playwright.controller.NavsetPill.loc_container) | Playwright `Locator` for the container of the UI element. |\n| [page](#shiny.playwright.controller.NavsetPill.page) | Playwright `Page` of the Shiny app. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [expect_nav_titles](#shiny.playwright.controller.NavsetPill.expect_nav_titles) | Expects the control to have the specified nav titles. |\n| [expect_nav_values](#shiny.playwright.controller.NavsetPill.expect_nav_values) | Expects the control to have the specified nav values. |\n| [expect_value](#shiny.playwright.controller.NavsetPill.expect_value) | Expects the control to have the specified value. |\n| [get_loc_active_content](#shiny.playwright.controller.NavsetPill.get_loc_active_content) | Returns the locator for the active content. |\n| [nav_panel](#shiny.playwright.controller.NavsetPill.nav_panel) | Returns the nav panel ([](:class:`~shiny.playwright.controls.NavPanel`)) with the specified value. |\n| [set](#shiny.playwright.controller.NavsetPill.set) | Sets the state of the control to open or closed. |\n\n### expect_nav_titles { #shiny.playwright.controller.NavsetPill.expect_nav_titles }\n\n```python\nplaywright.controller.NavsetPill.expect_nav_titles(value, *, timeout=None)\n```\n\nExpects the control to have the specified nav titles.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                                     | Description                                                               | Default    |\n|---------|--------------------------------------------------------------------------|---------------------------------------------------------------------------|------------|\n| value   | [list](`list`)\\[[PatternOrStr](`shiny.playwright._types.PatternOrStr`)\\] | The expected nav titles.                                                  | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)                             | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### expect_nav_values { #shiny.playwright.controller.NavsetPill.expect_nav_values }\n\n```python\nplaywright.controller.NavsetPill.expect_nav_values(value, *, timeout=None)\n```\n\nExpects the control to have the specified nav values.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                                     | Description                                                               | Default    |\n|---------|--------------------------------------------------------------------------|---------------------------------------------------------------------------|------------|\n| value   | [list](`list`)\\[[PatternOrStr](`shiny.playwright._types.PatternOrStr`)\\] | The expected nav values.                                                  | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)                             | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### expect_value { #shiny.playwright.controller.NavsetPill.expect_value }\n\n```python\nplaywright.controller.NavsetPill.expect_value(value, *, timeout=None)\n```\n\nExpects the control to have the specified value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                               | Default    |\n|---------|--------------------------------------------------------|---------------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected value.                                                       | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### get_loc_active_content { #shiny.playwright.controller.NavsetPill.get_loc_active_content }\n\n```python\nplaywright.controller.NavsetPill.get_loc_active_content(timeout=None)\n```\n\nReturns the locator for the active content.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                             | Default   |\n|---------|----------------------------------------------|-------------------------------------------------------------------------|-----------|\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the locator to appear. Defaults to `None`. | `None`    |\n\n### nav_panel { #shiny.playwright.controller.NavsetPill.nav_panel }\n\n```python\nplaywright.controller.NavsetPill.nav_panel(value)\n```\n\nReturns the nav panel ([](:class:`~shiny.playwright.controls.NavPanel`))\nwith the specified value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name   | Type         | Description                 | Default    |\n|--------|--------------|-----------------------------|------------|\n| value  | [str](`str`) | The value of the nav panel. | _required_ |\n\n### set { #shiny.playwright.controller.NavsetPill.set }\n\n```python\nplaywright.controller.NavsetPill.set(value, *, timeout=None)\n```\n\nSets the state of the control to open or closed.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name   | Type         | Description            | Default    |\n|--------|--------------|------------------------|------------|\n| value  | [str](`str`) | The selected nav item. | _required_ |"
    },
    {
        "controller_name": "playwright.controller.NavsetPillList",
        "attributes": "| Name | Description |\n| --- | --- |\n| [expect](#shiny.playwright.controller.NavsetPillList.expect) | Expectation method equivalent to `playwright.expect(self.loc)`. |\n| [id](#shiny.playwright.controller.NavsetPillList.id) | The browser DOM `id` of the UI element. |\n| [loc](#shiny.playwright.controller.NavsetPillList.loc) | Playwright `Locator` of the UI element. |\n| [loc_container](#shiny.playwright.controller.NavsetPillList.loc_container) | Playwright `Locator` for the container of the UI element. |\n| [page](#shiny.playwright.controller.NavsetPillList.page) | Playwright `Page` of the Shiny app. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [expect_nav_titles](#shiny.playwright.controller.NavsetPillList.expect_nav_titles) | Expects the control to have the specified nav titles. |\n| [expect_nav_values](#shiny.playwright.controller.NavsetPillList.expect_nav_values) | Expects the control to have the specified nav values. |\n| [expect_value](#shiny.playwright.controller.NavsetPillList.expect_value) | Expects the control to have the specified value. |\n| [expect_well](#shiny.playwright.controller.NavsetPillList.expect_well) | Expects the navset pill list to have a well. |\n| [expect_widths](#shiny.playwright.controller.NavsetPillList.expect_widths) | Expects the navset pill list to have the specified widths. |\n| [get_loc_active_content](#shiny.playwright.controller.NavsetPillList.get_loc_active_content) | Returns the locator for the active content. |\n| [nav_panel](#shiny.playwright.controller.NavsetPillList.nav_panel) | Returns the nav panel ([](:class:`~shiny.playwright.controls.NavPanel`)) with the specified value. |\n| [set](#shiny.playwright.controller.NavsetPillList.set) | Sets the state of the control to open or closed. |\n\n### expect_nav_titles { #shiny.playwright.controller.NavsetPillList.expect_nav_titles }\n\n```python\nplaywright.controller.NavsetPillList.expect_nav_titles(value, *, timeout=None)\n```\n\nExpects the control to have the specified nav titles.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                                     | Description                                                               | Default    |\n|---------|--------------------------------------------------------------------------|---------------------------------------------------------------------------|------------|\n| value   | [list](`list`)\\[[PatternOrStr](`shiny.playwright._types.PatternOrStr`)\\] | The expected nav titles.                                                  | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)                             | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### expect_nav_values { #shiny.playwright.controller.NavsetPillList.expect_nav_values }\n\n```python\nplaywright.controller.NavsetPillList.expect_nav_values(value, *, timeout=None)\n```\n\nExpects the control to have the specified nav values.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                                     | Description                                                               | Default    |\n|---------|--------------------------------------------------------------------------|---------------------------------------------------------------------------|------------|\n| value   | [list](`list`)\\[[PatternOrStr](`shiny.playwright._types.PatternOrStr`)\\] | The expected nav values.                                                  | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)                             | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### expect_value { #shiny.playwright.controller.NavsetPillList.expect_value }\n\n```python\nplaywright.controller.NavsetPillList.expect_value(value, *, timeout=None)\n```\n\nExpects the control to have the specified value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                               | Default    |\n|---------|--------------------------------------------------------|---------------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected value.                                                       | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### expect_well { #shiny.playwright.controller.NavsetPillList.expect_well }\n\n```python\nplaywright.controller.NavsetPillList.expect_well(value, *, timeout=None)\n```\n\nExpects the navset pill list to have a well.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                                                  | Default    |\n|---------|----------------------------------------------|----------------------------------------------------------------------------------------------|------------|\n| value   | [bool](`bool`)                               | `True` if the navset pill list is expected to be constructed with a well, `False` otherwise. | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the expectation to pass. Defaults to `None`.                    | `None`     |\n\n### expect_widths { #shiny.playwright.controller.NavsetPillList.expect_widths }\n\n```python\nplaywright.controller.NavsetPillList.expect_widths(value, *, timeout=None)\n```\n\nExpects the navset pill list to have the specified widths.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                     | Description                                                               | Default    |\n|---------|----------------------------------------------------------|---------------------------------------------------------------------------|------------|\n| value   | [ListOrTuple](`shiny.types.ListOrTuple`)\\[[int](`int`)\\] | The expected widths of the navset pill list.                              | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)             | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### get_loc_active_content { #shiny.playwright.controller.NavsetPillList.get_loc_active_content }\n\n```python\nplaywright.controller.NavsetPillList.get_loc_active_content(timeout=None)\n```\n\nReturns the locator for the active content.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                             | Default   |\n|---------|----------------------------------------------|-------------------------------------------------------------------------|-----------|\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the locator to appear. Defaults to `None`. | `None`    |\n\n### nav_panel { #shiny.playwright.controller.NavsetPillList.nav_panel }\n\n```python\nplaywright.controller.NavsetPillList.nav_panel(value)\n```\n\nReturns the nav panel ([](:class:`~shiny.playwright.controls.NavPanel`))\nwith the specified value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name   | Type         | Description                 | Default    |\n|--------|--------------|-----------------------------|------------|\n| value  | [str](`str`) | The value of the nav panel. | _required_ |\n\n### set { #shiny.playwright.controller.NavsetPillList.set }\n\n```python\nplaywright.controller.NavsetPillList.set(value, *, timeout=None)\n```\n\nSets the state of the control to open or closed.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name   | Type         | Description            | Default    |\n|--------|--------------|------------------------|------------|\n| value  | [str](`str`) | The selected nav item. | _required_ |"
    },
    {
        "controller_name": "playwright.controller.NavsetTab",
        "attributes": "| Name | Description |\n| --- | --- |\n| [expect](#shiny.playwright.controller.NavsetTab.expect) | Expectation method equivalent to `playwright.expect(self.loc)`. |\n| [id](#shiny.playwright.controller.NavsetTab.id) | The browser DOM `id` of the UI element. |\n| [loc](#shiny.playwright.controller.NavsetTab.loc) | Playwright `Locator` for the nav set tab. |\n| [loc_container](#shiny.playwright.controller.NavsetTab.loc_container) | Playwright `Locator` for the nav set tab container. |\n| [page](#shiny.playwright.controller.NavsetTab.page) | Playwright `Page` of the Shiny app. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [expect_nav_titles](#shiny.playwright.controller.NavsetTab.expect_nav_titles) | Expects the control to have the specified nav titles. |\n| [expect_nav_values](#shiny.playwright.controller.NavsetTab.expect_nav_values) | Expects the control to have the specified nav values. |\n| [expect_value](#shiny.playwright.controller.NavsetTab.expect_value) | Expects the control to have the specified value. |\n| [get_loc_active_content](#shiny.playwright.controller.NavsetTab.get_loc_active_content) | Returns the locator for the active content. |\n| [nav_panel](#shiny.playwright.controller.NavsetTab.nav_panel) | Returns the nav panel ([](:class:`~shiny.playwright.controls.NavPanel`)) with the specified value. |\n| [set](#shiny.playwright.controller.NavsetTab.set) | Sets the state of the control to open or closed. |\n\n### expect_nav_titles { #shiny.playwright.controller.NavsetTab.expect_nav_titles }\n\n```python\nplaywright.controller.NavsetTab.expect_nav_titles(value, *, timeout=None)\n```\n\nExpects the control to have the specified nav titles.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                                     | Description                                                               | Default    |\n|---------|--------------------------------------------------------------------------|---------------------------------------------------------------------------|------------|\n| value   | [list](`list`)\\[[PatternOrStr](`shiny.playwright._types.PatternOrStr`)\\] | The expected nav titles.                                                  | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)                             | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### expect_nav_values { #shiny.playwright.controller.NavsetTab.expect_nav_values }\n\n```python\nplaywright.controller.NavsetTab.expect_nav_values(value, *, timeout=None)\n```\n\nExpects the control to have the specified nav values.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                                     | Description                                                               | Default    |\n|---------|--------------------------------------------------------------------------|---------------------------------------------------------------------------|------------|\n| value   | [list](`list`)\\[[PatternOrStr](`shiny.playwright._types.PatternOrStr`)\\] | The expected nav values.                                                  | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)                             | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### expect_value { #shiny.playwright.controller.NavsetTab.expect_value }\n\n```python\nplaywright.controller.NavsetTab.expect_value(value, *, timeout=None)\n```\n\nExpects the control to have the specified value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                               | Default    |\n|---------|--------------------------------------------------------|---------------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected value.                                                       | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### get_loc_active_content { #shiny.playwright.controller.NavsetTab.get_loc_active_content }\n\n```python\nplaywright.controller.NavsetTab.get_loc_active_content(timeout=None)\n```\n\nReturns the locator for the active content.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                             | Default   |\n|---------|----------------------------------------------|-------------------------------------------------------------------------|-----------|\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the locator to appear. Defaults to `None`. | `None`    |\n\n### nav_panel { #shiny.playwright.controller.NavsetTab.nav_panel }\n\n```python\nplaywright.controller.NavsetTab.nav_panel(value)\n```\n\nReturns the nav panel ([](:class:`~shiny.playwright.controls.NavPanel`))\nwith the specified value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name   | Type         | Description                 | Default    |\n|--------|--------------|-----------------------------|------------|\n| value  | [str](`str`) | The value of the nav panel. | _required_ |\n\n### set { #shiny.playwright.controller.NavsetTab.set }\n\n```python\nplaywright.controller.NavsetTab.set(value, *, timeout=None)\n```\n\nSets the state of the control to open or closed.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name   | Type         | Description            | Default    |\n|--------|--------------|------------------------|------------|\n| value  | [str](`str`) | The selected nav item. | _required_ |"
    },
    {
        "controller_name": "playwright.controller.NavsetUnderline",
        "attributes": "| Name | Description |\n| --- | --- |\n| [expect](#shiny.playwright.controller.NavsetUnderline.expect) | Expectation method equivalent to `playwright.expect(self.loc)`. |\n| [id](#shiny.playwright.controller.NavsetUnderline.id) | The browser DOM `id` of the UI element. |\n| [loc](#shiny.playwright.controller.NavsetUnderline.loc) | Playwright `Locator` of the UI element. |\n| [loc_container](#shiny.playwright.controller.NavsetUnderline.loc_container) | Playwright `Locator` for the container of the UI element. |\n| [page](#shiny.playwright.controller.NavsetUnderline.page) | Playwright `Page` of the Shiny app. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [expect_nav_titles](#shiny.playwright.controller.NavsetUnderline.expect_nav_titles) | Expects the control to have the specified nav titles. |\n| [expect_nav_values](#shiny.playwright.controller.NavsetUnderline.expect_nav_values) | Expects the control to have the specified nav values. |\n| [expect_value](#shiny.playwright.controller.NavsetUnderline.expect_value) | Expects the control to have the specified value. |\n| [get_loc_active_content](#shiny.playwright.controller.NavsetUnderline.get_loc_active_content) | Returns the locator for the active content. |\n| [nav_panel](#shiny.playwright.controller.NavsetUnderline.nav_panel) | Returns the nav panel ([](:class:`~shiny.playwright.controls.NavPanel`)) with the specified value. |\n| [set](#shiny.playwright.controller.NavsetUnderline.set) | Sets the state of the control to open or closed. |\n\n### expect_nav_titles { #shiny.playwright.controller.NavsetUnderline.expect_nav_titles }\n\n```python\nplaywright.controller.NavsetUnderline.expect_nav_titles(value, *, timeout=None)\n```\n\nExpects the control to have the specified nav titles.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                                     | Description                                                               | Default    |\n|---------|--------------------------------------------------------------------------|---------------------------------------------------------------------------|------------|\n| value   | [list](`list`)\\[[PatternOrStr](`shiny.playwright._types.PatternOrStr`)\\] | The expected nav titles.                                                  | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)                             | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### expect_nav_values { #shiny.playwright.controller.NavsetUnderline.expect_nav_values }\n\n```python\nplaywright.controller.NavsetUnderline.expect_nav_values(value, *, timeout=None)\n```\n\nExpects the control to have the specified nav values.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                                     | Description                                                               | Default    |\n|---------|--------------------------------------------------------------------------|---------------------------------------------------------------------------|------------|\n| value   | [list](`list`)\\[[PatternOrStr](`shiny.playwright._types.PatternOrStr`)\\] | The expected nav values.                                                  | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)                             | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### expect_value { #shiny.playwright.controller.NavsetUnderline.expect_value }\n\n```python\nplaywright.controller.NavsetUnderline.expect_value(value, *, timeout=None)\n```\n\nExpects the control to have the specified value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                               | Default    |\n|---------|--------------------------------------------------------|---------------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected value.                                                       | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### get_loc_active_content { #shiny.playwright.controller.NavsetUnderline.get_loc_active_content }\n\n```python\nplaywright.controller.NavsetUnderline.get_loc_active_content(timeout=None)\n```\n\nReturns the locator for the active content.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                             | Default   |\n|---------|----------------------------------------------|-------------------------------------------------------------------------|-----------|\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the locator to appear. Defaults to `None`. | `None`    |\n\n### nav_panel { #shiny.playwright.controller.NavsetUnderline.nav_panel }\n\n```python\nplaywright.controller.NavsetUnderline.nav_panel(value)\n```\n\nReturns the nav panel ([](:class:`~shiny.playwright.controls.NavPanel`))\nwith the specified value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name   | Type         | Description                 | Default    |\n|--------|--------------|-----------------------------|------------|\n| value  | [str](`str`) | The value of the nav panel. | _required_ |\n\n### set { #shiny.playwright.controller.NavsetUnderline.set }\n\n```python\nplaywright.controller.NavsetUnderline.set(value, *, timeout=None)\n```\n\nSets the state of the control to open or closed.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name   | Type         | Description            | Default    |\n|--------|--------------|------------------------|------------|\n| value  | [str](`str`) | The selected nav item. | _required_ |"
    },
    {
        "controller_name": "playwright.controller.OutputCode",
        "attributes": "| Name | Description |\n| --- | --- |\n| [id](#shiny.playwright.controller.OutputCode.id) | The ID of the output control. |\n| [loc](#shiny.playwright.controller.OutputCode.loc) | Playwright `Locator` of the code output. |\n| [page](#shiny.playwright.controller.OutputCode.page) | Playwright `Page` of the Shiny app. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [expect_has_placeholder](#shiny.playwright.controller.OutputCode.expect_has_placeholder) | Asserts that the code output has the expected placeholder. |\n| [expect_value](#shiny.playwright.controller.OutputCode.expect_value) | Asserts that the output has the expected value. |\n\n### expect_has_placeholder { #shiny.playwright.controller.OutputCode.expect_has_placeholder }\n\n```python\nplaywright.controller.OutputCode.expect_has_placeholder(\n    value=False,\n    *,\n    timeout=None,\n)\n```\n\nAsserts that the code output has the expected placeholder.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                                 | Default   |\n|---------|----------------------------------------------|-----------------------------------------------------------------------------|-----------|\n| value   | [bool](`bool`)                               | Whether the code output has a placeholder.                                  | `False`   |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the placeholder to appear. Defaults to `None`. | `None`    |\n\n### expect_value { #shiny.playwright.controller.OutputCode.expect_value }\n\n```python\nplaywright.controller.OutputCode.expect_value(value, *, timeout=None)\n```\n\nAsserts that the output has the expected value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                           | Default    |\n|---------|--------------------------------------------------------|-----------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected value.                                                   | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the value to appear. Defaults to `None`. | `None`     |"
    },
    {
        "controller_name": "playwright.controller.OutputDataFrame",
        "attributes": "| Name | Description |\n| --- | --- |\n| [expect](#shiny.playwright.controller.OutputDataFrame.expect) | Expectation method equivalent to `playwright.expect(self.loc)`. |\n| [id](#shiny.playwright.controller.OutputDataFrame.id) | The browser DOM `id` of the UI element. |\n| [loc](#shiny.playwright.controller.OutputDataFrame.loc) | Playwright `Locator` for the data frame. |\n| [loc_body](#shiny.playwright.controller.OutputDataFrame.loc_body) | Playwright `Locator` for the body of the data frame table. |\n| [loc_container](#shiny.playwright.controller.OutputDataFrame.loc_container) | Playwright `Locator` for the data frame container. |\n| [loc_head](#shiny.playwright.controller.OutputDataFrame.loc_head) | Playwright `Locator` for the head of the data frame table. |\n| [page](#shiny.playwright.controller.OutputDataFrame.page) | Playwright `Page` of the Shiny app. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [cell_locator](#shiny.playwright.controller.OutputDataFrame.cell_locator) | Returns the locator for a specific cell in the data frame. |\n| [expect_cell](#shiny.playwright.controller.OutputDataFrame.expect_cell) | Expects the cell in the data frame to have the specified text. |\n| [expect_cell_class](#shiny.playwright.controller.OutputDataFrame.expect_cell_class) | Expects the class of the cell |\n| [expect_cell_title](#shiny.playwright.controller.OutputDataFrame.expect_cell_title) | Expects the validation message of the cell in the data frame, which will be in the `title` attribute of the element. |\n| [expect_class_state](#shiny.playwright.controller.OutputDataFrame.expect_class_state) | Expects the state of the class in the data frame. |\n| [expect_column_labels](#shiny.playwright.controller.OutputDataFrame.expect_column_labels) | Expects the column labels in the data frame. |\n| [expect_ncol](#shiny.playwright.controller.OutputDataFrame.expect_ncol) | Expects the number of columns in the data frame. |\n| [expect_nrow](#shiny.playwright.controller.OutputDataFrame.expect_nrow) | Expects the number of rows in the data frame. |\n| [expect_selected_num_rows](#shiny.playwright.controller.OutputDataFrame.expect_selected_num_rows) | Expects the number of selected rows in the data frame. |\n| [expect_selected_rows](#shiny.playwright.controller.OutputDataFrame.expect_selected_rows) | Expects the specified rows to be selected. |\n| [select_rows](#shiny.playwright.controller.OutputDataFrame.select_rows) | Selects the rows in the data frame. |\n| [set_cell](#shiny.playwright.controller.OutputDataFrame.set_cell) | Saves the value of the cell in the data frame. |\n| [set_filter](#shiny.playwright.controller.OutputDataFrame.set_filter) | Set or reset filters for columns in a table or grid component. This method allows setting string filters, numeric range filters, or clearing all filters. |\n| [set_sort](#shiny.playwright.controller.OutputDataFrame.set_sort) | Set or modify the sorting of columns in a table or grid component. This method allows setting single or multiple column sorts, or resetting the sort order. |\n\n### cell_locator { #shiny.playwright.controller.OutputDataFrame.cell_locator }\n\n```python\nplaywright.controller.OutputDataFrame.cell_locator(row, col)\n```\n\nReturns the locator for a specific cell in the data frame.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name   | Type         | Description                    | Default    |\n|--------|--------------|--------------------------------|------------|\n| row    | [int](`int`) | The row number of the cell.    | _required_ |\n| col    | [int](`int`) | The column number of the cell. | _required_ |\n\n### expect_cell { #shiny.playwright.controller.OutputDataFrame.expect_cell }\n\n```python\nplaywright.controller.OutputDataFrame.expect_cell(\n    value,\n    *,\n    row,\n    col,\n    timeout=None,\n)\n```\n\nExpects the cell in the data frame to have the specified text.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                               | Default    |\n|---------|--------------------------------------------------------|---------------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected text in the cell.                                            | _required_ |\n| row     | [int](`int`)                                           | The row number of the cell.                                               | _required_ |\n| col     | [int](`int`)                                           | The column number of the cell.                                            | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### expect_cell_class { #shiny.playwright.controller.OutputDataFrame.expect_cell_class }\n\n```python\nplaywright.controller.OutputDataFrame.expect_cell_class(\n    value,\n    *,\n    row,\n    col,\n    timeout=None,\n)\n```\n\nExpects the class of the cell\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                               | Default    |\n|---------|----------------------------------------------|---------------------------------------------------------------------------|------------|\n| value   | [str](`str`)                                 | The expected class of the cell.                                           | _required_ |\n| row     | [int](`int`)                                 | The row number of the cell.                                               | _required_ |\n| col     | [int](`int`)                                 | The column number of the cell.                                            | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### expect_cell_title { #shiny.playwright.controller.OutputDataFrame.expect_cell_title }\n\n```python\nplaywright.controller.OutputDataFrame.expect_cell_title(\n    value,\n    *,\n    row,\n    col,\n    timeout=None,\n)\n```\n\nExpects the validation message of the cell in the data frame, which will be in\nthe `title` attribute of the element.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                               | Default    |\n|---------|----------------------------------------------|---------------------------------------------------------------------------|------------|\n| value   | [str](`str`)                                 | The expected validation message of the cell.                              | _required_ |\n| row     | [int](`int`)                                 | The row number of the cell.                                               | _required_ |\n| col     | [int](`int`)                                 | The column number of the cell.                                            | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### expect_class_state { #shiny.playwright.controller.OutputDataFrame.expect_class_state }\n\n```python\nplaywright.controller.OutputDataFrame.expect_class_state(\n    value,\n    *,\n    row,\n    col,\n    timeout=None,\n)\n```\n\nExpects the state of the class in the data frame.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                               | Default    |\n|---------|----------------------------------------------|---------------------------------------------------------------------------|------------|\n| value   | [str](`str`)                                 | The expected state of the class.                                          | _required_ |\n| row     | [int](`int`)                                 | The row number of the cell.                                               | _required_ |\n| col     | [int](`int`)                                 | The column number of the cell.                                            | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### expect_column_labels { #shiny.playwright.controller.OutputDataFrame.expect_column_labels }\n\n```python\nplaywright.controller.OutputDataFrame.expect_column_labels(\n    value,\n    *,\n    timeout=None,\n)\n```\n\nExpects the column labels in the data frame.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                                   | Description                                                                             | Default    |\n|---------|------------------------------------------------------------------------|-----------------------------------------------------------------------------------------|------------|\n| value   | [ListPatternOrStr](`shiny.playwright._types.ListPatternOrStr`) \\| None | The expected column labels.  Note: None if the column labels are expected to not exist. | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)                           | The maximum time to wait for the expectation to pass. Defaults to `None`.               | `None`     |\n\n### expect_ncol { #shiny.playwright.controller.OutputDataFrame.expect_ncol }\n\n```python\nplaywright.controller.OutputDataFrame.expect_ncol(value, *, timeout=None)\n```\n\nExpects the number of columns in the data frame.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                               | Default    |\n|---------|----------------------------------------------|---------------------------------------------------------------------------|------------|\n| value   | [int](`int`)                                 | The expected number of columns.                                           | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### expect_nrow { #shiny.playwright.controller.OutputDataFrame.expect_nrow }\n\n```python\nplaywright.controller.OutputDataFrame.expect_nrow(value, *, timeout=None)\n```\n\nExpects the number of rows in the data frame.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                               | Default    |\n|---------|----------------------------------------------|---------------------------------------------------------------------------|------------|\n| value   | [int](`int`)                                 | The expected number of rows.                                              | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### expect_selected_num_rows { #shiny.playwright.controller.OutputDataFrame.expect_selected_num_rows }\n\n```python\nplaywright.controller.OutputDataFrame.expect_selected_num_rows(\n    value,\n    *,\n    timeout=None,\n)\n```\n\nExpects the number of selected rows in the data frame.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                               | Default    |\n|---------|----------------------------------------------|---------------------------------------------------------------------------|------------|\n| value   | [int](`int`)                                 | The expected number of selected rows.                                     | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### expect_selected_rows { #shiny.playwright.controller.OutputDataFrame.expect_selected_rows }\n\n```python\nplaywright.controller.OutputDataFrame.expect_selected_rows(\n    rows,\n    *,\n    timeout=None,\n)\n```\n\nExpects the specified rows to be selected.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                               | Default    |\n|---------|----------------------------------------------|---------------------------------------------------------------------------|------------|\n| rows    | [list](`list`)\\[[int](`int`)\\]               | The row numbers.                                                          | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### select_rows { #shiny.playwright.controller.OutputDataFrame.select_rows }\n\n```python\nplaywright.controller.OutputDataFrame.select_rows(value, *, timeout=None)\n```\n\nSelects the rows in the data frame.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                              | Default    |\n|---------|----------------------------------------------|--------------------------------------------------------------------------|------------|\n| value   | [list](`list`)\\[[int](`int`)\\]               | The list of row numbers to select.                                       | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the action to complete. Defaults to `None`. | `None`     |\n\n### set_cell { #shiny.playwright.controller.OutputDataFrame.set_cell }\n\n```python\nplaywright.controller.OutputDataFrame.set_cell(\n    text,\n    *,\n    row,\n    col,\n    finish_key=None,\n    timeout=None,\n)\n```\n\nSaves the value of the cell in the data frame.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name       | Type                                                                                        | Description                                                                                                                       | Default    |\n|------------|---------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------|------------|\n| text       | [str](`str`)                                                                                | The key to save the value of the cell.                                                                                            | _required_ |\n| row        | [int](`int`)                                                                                | The row number of the cell.                                                                                                       | _required_ |\n| col        | [int](`int`)                                                                                | The column number of the cell.                                                                                                    | _required_ |\n| finish_key | [Literal](`typing.Literal`)\\['Enter', 'Shift+Enter', 'Tab', 'Shift+Tab', 'Escape'\\] \\| None | The key to save the value of the cell. If `None` (the default), no key will be pressed and instead the page body will be clicked. | `None`     |\n| timeout    | [Timeout](`shiny.playwright._types.Timeout`)                                                | The maximum time to wait for the action to complete. Defaults to `None`.                                                          | `None`     |\n\n### set_filter { #shiny.playwright.controller.OutputDataFrame.set_filter }\n\n```python\nplaywright.controller.OutputDataFrame.set_filter(filter, *, timeout=None)\n```\n\nSet or reset filters for columns in a table or grid component.\nThis method allows setting string filters, numeric range filters, or clearing all filters.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                                                                                                         | Description                                                                                                                                                                                                                                                                               | Default    |\n|---------|----------------------------------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------|\n| filter  | [ColumnFilter](`shiny.express.render._data_frame.ColumnFilter`) \\| [list](`list`)\\[[ColumnFilter](`shiny.express.render._data_frame.ColumnFilter`)\\] \\| None | The filter to apply. Can be one of the following:     * `None`: Resets all filters.     * `ColumnFilterStr`: A dictionary specifying a string filter with 'col' and 'value' keys.     * `ColumnFilterNumber`: A dictionary specifying a numeric range filter with 'col' and 'value' keys. | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)                                                                                                 | The maximum time to wait for the action to complete. Defaults to `None`.                                                                                                                                                                                                                  | `None`     |\n\n### set_sort { #shiny.playwright.controller.OutputDataFrame.set_sort }\n\n```python\nplaywright.controller.OutputDataFrame.set_sort(sort, *, timeout=None)\n```\n\nSet or modify the sorting of columns in a table or grid component.\nThis method allows setting single or multiple column sorts, or resetting the sort order.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                                                                                                                                 | Description| Default    |\n|---------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------||------------|\n| sort    | [int](`int`) \\| [ColumnSort](`shiny.express.render._data_frame.ColumnSort`) \\| [list](`list`)\\[[int](`int`) \\| [ColumnSort](`shiny.express.render._data_frame.ColumnSort`)\\] \\| None | The sorting configuration to apply. Can be one of the following:     * `int`: Index of the column to sort by (ascending order by default).     * `ColumnSort`: A dictionary specifying a single column sort with 'col' and 'desc' keys.     * `list[int \\| ColumnSort]`: A list of ints or dictionaries for multi-column sorting.     * `None`: No sorting applied (not implemented in the current code).  If a `desc` values is provided within your `ColumnSort` shaped dictionary, then the direction will be set to that value. If no `desc` value is provided, the column will be sorted in the default sorting order. | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)                                                                                                                         | The maximum time to wait for the action to complete. Defaults to `None`| `None`     |"
    },
    {
        "controller_name": "playwright.controller.OutputImage",
        "attributes": "| Name | Description |\n| --- | --- |\n| [id](#shiny.playwright.controller.OutputImage.id) | The ID of the output control. |\n| [loc](#shiny.playwright.controller.OutputImage.loc) | Playwright `Locator` of the output control. |\n| [loc_img](#shiny.playwright.controller.OutputImage.loc_img) | Playwright `Locator` of the image. |\n| [page](#shiny.playwright.controller.OutputImage.page) | Playwright `Page` of the Shiny app. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [expect_container_tag](#shiny.playwright.controller.OutputImage.expect_container_tag) | Asserts that the output has the expected container tag. |\n| [expect_height](#shiny.playwright.controller.OutputImage.expect_height) | Asserts that the image has the expected height. |\n| [expect_img_alt](#shiny.playwright.controller.OutputImage.expect_img_alt) | Asserts that the image has the expected alt text. |\n| [expect_img_height](#shiny.playwright.controller.OutputImage.expect_img_height) | Asserts that the image has the expected height. |\n| [expect_img_src](#shiny.playwright.controller.OutputImage.expect_img_src) | Asserts that the image has the expected src. |\n| [expect_img_width](#shiny.playwright.controller.OutputImage.expect_img_width) | Asserts that the image has the expected width. |\n| [expect_inline](#shiny.playwright.controller.OutputImage.expect_inline) | Asserts that the output is inline. |\n| [expect_width](#shiny.playwright.controller.OutputImage.expect_width) | Asserts that the image has the expected width. |\n\n### expect_container_tag { #shiny.playwright.controller.OutputImage.expect_container_tag }\n\n```python\nplaywright.controller.OutputImage.expect_container_tag(value, *, timeout=None)\n```\n\nAsserts that the output has the expected container tag.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                         | Description                                                                   | Default    |\n|---------|--------------------------------------------------------------|-------------------------------------------------------------------------------|------------|\n| value   | [Literal](`typing.Literal`)\\['span', 'div'\\] \\| [str](`str`) | The expected container tag.                                                   | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)                 | The maximum time to wait for the container tag to appear. Defaults to `None`. | `None`     |\n\n### expect_height { #shiny.playwright.controller.OutputImage.expect_height }\n\n```python\nplaywright.controller.OutputImage.expect_height(value, *, timeout=None)\n```\n\nAsserts that the image has the expected height.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                               | Description                                                            | Default    |\n|---------|----------------------------------------------------|------------------------------------------------------------------------|------------|\n| value   | [StyleValue](`shiny.playwright._types.StyleValue`) | The expected height.                                                   | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)       | The maximum time to wait for the height to appear. Defaults to `None`. | `None`     |\n\n### expect_img_alt { #shiny.playwright.controller.OutputImage.expect_img_alt }\n\n```python\nplaywright.controller.OutputImage.expect_img_alt(value, *, timeout=None)\n```\n\nAsserts that the image has the expected alt text.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                                              | Default    |\n|---------|--------------------------------------------------|--------------------------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected alt text.                                                   | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The maximum time to wait for the alt text to appear. Defaults to `None`. | `None`     |\n\n### expect_img_height { #shiny.playwright.controller.OutputImage.expect_img_height }\n\n```python\nplaywright.controller.OutputImage.expect_img_height(value, *, timeout=None)\n```\n\nAsserts that the image has the expected height.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                                            | Default    |\n|---------|--------------------------------------------------|------------------------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected height.                                                   | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The maximum time to wait for the height to appear. Defaults to `None`. | `None`     |\n\n### expect_img_src { #shiny.playwright.controller.OutputImage.expect_img_src }\n\n```python\nplaywright.controller.OutputImage.expect_img_src(value, *, timeout=None)\n```\n\nAsserts that the image has the expected src.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                                         | Default    |\n|---------|--------------------------------------------------|---------------------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected src.                                                   | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The maximum time to wait for the src to appear. Defaults to `None`. | `None`     |\n\n### expect_img_width { #shiny.playwright.controller.OutputImage.expect_img_width }\n\n```python\nplaywright.controller.OutputImage.expect_img_width(value, *, timeout=None)\n```\n\nAsserts that the image has the expected width.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                                           | Default    |\n|---------|--------------------------------------------------|-----------------------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected width.                                                   | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The maximum time to wait for the width to appear. Defaults to `None`. | `None`     |\n\n### expect_inline { #shiny.playwright.controller.OutputImage.expect_inline }\n\n```python\nplaywright.controller.OutputImage.expect_inline(value=False, *, timeout=None)\n```\n\nAsserts that the output is inline.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                            | Default   |\n|---------|----------------------------------------------|------------------------------------------------------------------------|-----------|\n| value   | [bool](`bool`)                               | Whether the output is inline.                                          | `False`   |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the output to appear. Defaults to `None`. | `None`    |\n\n### expect_width { #shiny.playwright.controller.OutputImage.expect_width }\n\n```python\nplaywright.controller.OutputImage.expect_width(value, *, timeout=None)\n```\n\nAsserts that the image has the expected width.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                               | Description                                                           | Default    |\n|---------|----------------------------------------------------|-----------------------------------------------------------------------|------------|\n| value   | [StyleValue](`shiny.playwright._types.StyleValue`) | The expected width.                                                   | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)       | The maximum time to wait for the width to appear. Defaults to `None`. | `None`     |"
    },
    {
        "controller_name": "playwright.controller.OutputPlot",
        "attributes": "| Name | Description |\n| --- | --- |\n| [id](#shiny.playwright.controller.OutputPlot.id) | The ID of the output control. |\n| [loc](#shiny.playwright.controller.OutputPlot.loc) | Playwright `Locator` of the plot output. |\n| [loc_img](#shiny.playwright.controller.OutputPlot.loc_img) | Playwright `Locator` of the image. |\n| [page](#shiny.playwright.controller.OutputPlot.page) | Playwright `Page` of the Shiny app. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [expect_container_tag](#shiny.playwright.controller.OutputPlot.expect_container_tag) | Asserts that the output has the expected container tag. |\n| [expect_height](#shiny.playwright.controller.OutputPlot.expect_height) | Asserts that the image has the expected height. |\n| [expect_img_alt](#shiny.playwright.controller.OutputPlot.expect_img_alt) | Asserts that the image has the expected alt text. |\n| [expect_img_height](#shiny.playwright.controller.OutputPlot.expect_img_height) | Asserts that the image has the expected height. |\n| [expect_img_src](#shiny.playwright.controller.OutputPlot.expect_img_src) | Asserts that the image has the expected src. |\n| [expect_img_width](#shiny.playwright.controller.OutputPlot.expect_img_width) | Asserts that the image has the expected width. |\n| [expect_inline](#shiny.playwright.controller.OutputPlot.expect_inline) | Asserts that the output is inline. |\n| [expect_width](#shiny.playwright.controller.OutputPlot.expect_width) | Asserts that the image has the expected width. |\n\n### expect_container_tag { #shiny.playwright.controller.OutputPlot.expect_container_tag }\n\n```python\nplaywright.controller.OutputPlot.expect_container_tag(value, *, timeout=None)\n```\n\nAsserts that the output has the expected container tag.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                         | Description                                                                   | Default    |\n|---------|--------------------------------------------------------------|-------------------------------------------------------------------------------|------------|\n| value   | [Literal](`typing.Literal`)\\['span', 'div'\\] \\| [str](`str`) | The expected container tag.                                                   | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)                 | The maximum time to wait for the container tag to appear. Defaults to `None`. | `None`     |\n\n### expect_height { #shiny.playwright.controller.OutputPlot.expect_height }\n\n```python\nplaywright.controller.OutputPlot.expect_height(value, *, timeout=None)\n```\n\nAsserts that the image has the expected height.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                               | Description                                                            | Default    |\n|---------|----------------------------------------------------|------------------------------------------------------------------------|------------|\n| value   | [StyleValue](`shiny.playwright._types.StyleValue`) | The expected height.                                                   | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)       | The maximum time to wait for the height to appear. Defaults to `None`. | `None`     |\n\n### expect_img_alt { #shiny.playwright.controller.OutputPlot.expect_img_alt }\n\n```python\nplaywright.controller.OutputPlot.expect_img_alt(value, *, timeout=None)\n```\n\nAsserts that the image has the expected alt text.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                                              | Default    |\n|---------|--------------------------------------------------|--------------------------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected alt text.                                                   | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The maximum time to wait for the alt text to appear. Defaults to `None`. | `None`     |\n\n### expect_img_height { #shiny.playwright.controller.OutputPlot.expect_img_height }\n\n```python\nplaywright.controller.OutputPlot.expect_img_height(value, *, timeout=None)\n```\n\nAsserts that the image has the expected height.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                                            | Default    |\n|---------|--------------------------------------------------|------------------------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected height.                                                   | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The maximum time to wait for the height to appear. Defaults to `None`. | `None`     |\n\n### expect_img_src { #shiny.playwright.controller.OutputPlot.expect_img_src }\n\n```python\nplaywright.controller.OutputPlot.expect_img_src(value, *, timeout=None)\n```\n\nAsserts that the image has the expected src.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                                         | Default    |\n|---------|--------------------------------------------------|---------------------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected src.                                                   | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The maximum time to wait for the src to appear. Defaults to `None`. | `None`     |\n\n### expect_img_width { #shiny.playwright.controller.OutputPlot.expect_img_width }\n\n```python\nplaywright.controller.OutputPlot.expect_img_width(value, *, timeout=None)\n```\n\nAsserts that the image has the expected width.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                                           | Default    |\n|---------|--------------------------------------------------|-----------------------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected width.                                                   | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The maximum time to wait for the width to appear. Defaults to `None`. | `None`     |\n\n### expect_inline { #shiny.playwright.controller.OutputPlot.expect_inline }\n\n```python\nplaywright.controller.OutputPlot.expect_inline(value=False, *, timeout=None)\n```\n\nAsserts that the output is inline.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                            | Default   |\n|---------|----------------------------------------------|------------------------------------------------------------------------|-----------|\n| value   | [bool](`bool`)                               | Whether the output is inline.                                          | `False`   |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the output to appear. Defaults to `None`. | `None`    |\n\n### expect_width { #shiny.playwright.controller.OutputPlot.expect_width }\n\n```python\nplaywright.controller.OutputPlot.expect_width(value, *, timeout=None)\n```\n\nAsserts that the image has the expected width.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                               | Description                                                           | Default    |\n|---------|----------------------------------------------------|-----------------------------------------------------------------------|------------|\n| value   | [StyleValue](`shiny.playwright._types.StyleValue`) | The expected width.                                                   | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)       | The maximum time to wait for the width to appear. Defaults to `None`. | `None`     |"
    },
    {
        "controller_name": "playwright.controller.OutputTable",
        "attributes": "| Name | Description |\n| --- | --- |\n| [id](#shiny.playwright.controller.OutputTable.id) | The ID of the output control. |\n| [loc](#shiny.playwright.controller.OutputTable.loc) | Playwright `Locator` of the output control. |\n| [page](#shiny.playwright.controller.OutputTable.page) | Playwright `Page` of the Shiny app. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [expect_cell](#shiny.playwright.controller.OutputTable.expect_cell) | Asserts that the table cell has the expected text. |\n| [expect_column_labels](#shiny.playwright.controller.OutputTable.expect_column_labels) | Asserts that the table has the expected column labels. |\n| [expect_column_text](#shiny.playwright.controller.OutputTable.expect_column_text) | Asserts that the column has the expected text. |\n| [expect_ncol](#shiny.playwright.controller.OutputTable.expect_ncol) | Asserts that the table has the expected number of columns. |\n| [expect_nrow](#shiny.playwright.controller.OutputTable.expect_nrow) | Asserts that the table has the expected number of rows. |\n\n### expect_cell { #shiny.playwright.controller.OutputTable.expect_cell }\n\n```python\nplaywright.controller.OutputTable.expect_cell(value, row, col, *, timeout=None)\n```\n\nAsserts that the table cell has the expected text.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                          | Default    |\n|---------|--------------------------------------------------------|----------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected text in the cell.                                       | _required_ |\n| row     | [int](`int`)                                           | The row number.                                                      | _required_ |\n| col     | [int](`int`)                                           | The column number.                                                   | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the text to appear. Defaults to `None`. | `None`     |\n\n### expect_column_labels { #shiny.playwright.controller.OutputTable.expect_column_labels }\n\n```python\nplaywright.controller.OutputTable.expect_column_labels(value, *, timeout=None)\n```\n\nAsserts that the table has the expected column labels.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                                   | Description                                                                          | Default    |\n|---------|------------------------------------------------------------------------|--------------------------------------------------------------------------------------|------------|\n| value   | [ListPatternOrStr](`shiny.playwright._types.ListPatternOrStr`) \\| None | The expected column labels. If None, it asserts that the table has no column labels. | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)                           | The maximum time to wait for the column labels to appear. Defaults to `None`.        | `None`     |\n\n### expect_column_text { #shiny.playwright.controller.OutputTable.expect_column_text }\n\n```python\nplaywright.controller.OutputTable.expect_column_text(\n    col,\n    value,\n    *,\n    timeout=None,\n)\n```\n\nAsserts that the column has the expected text.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                           | Description                                                          | Default    |\n|---------|----------------------------------------------------------------|----------------------------------------------------------------------|------------|\n| col     | [int](`int`)                                                   | The column number.                                                   | _required_ |\n| value   | [ListPatternOrStr](`shiny.playwright._types.ListPatternOrStr`) | The expected text in the column.                                     | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)                   | The maximum time to wait for the text to appear. Defaults to `None`. | `None`     |\n\n### expect_ncol { #shiny.playwright.controller.OutputTable.expect_ncol }\n\n```python\nplaywright.controller.OutputTable.expect_ncol(value, *, timeout=None)\n```\n\nAsserts that the table has the expected number of columns.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                                                        | Default    |\n|---------|----------------------------------------------|----------------------------------------------------------------------------------------------------|------------|\n| value   | [int](`int`)                                 | The expected number of columns in the table.                                                       | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the table to have the expected number of columns. Defaults to `None`. | `None`     |\n\n### expect_nrow { #shiny.playwright.controller.OutputTable.expect_nrow }\n\n```python\nplaywright.controller.OutputTable.expect_nrow(value, *, timeout=None)\n```\n\nAsserts that the table has the expected number of rows.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                                                     | Default    |\n|---------|----------------------------------------------|-------------------------------------------------------------------------------------------------|------------|\n| value   | [int](`int`)                                 | The expected number of rows in the table.                                                       | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the table to have the expected number of rows. Defaults to `None`. | `None`     |"
    },
    {
        "controller_name": "playwright.controller.OutputText",
        "attributes": "| Name | Description |\n| --- | --- |\n| [id](#shiny.playwright.controller.OutputText.id) | The ID of the output control. |\n| [loc](#shiny.playwright.controller.OutputText.loc) | Playwright `Locator` of the text output. |\n| [page](#shiny.playwright.controller.OutputText.page) | Playwright `Page` of the Shiny app. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [expect_container_tag](#shiny.playwright.controller.OutputText.expect_container_tag) | Asserts that the output has the expected container tag. |\n| [expect_inline](#shiny.playwright.controller.OutputText.expect_inline) | Asserts that the output is inline. |\n| [expect_value](#shiny.playwright.controller.OutputText.expect_value) | Asserts that the output has the expected value. |\n| [get_value](#shiny.playwright.controller.OutputText.get_value) | Gets the text value of the output. |\n\n### expect_container_tag { #shiny.playwright.controller.OutputText.expect_container_tag }\n\n```python\nplaywright.controller.OutputText.expect_container_tag(value, *, timeout=None)\n```\n\nAsserts that the output has the expected container tag.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                         | Description                                                                   | Default    |\n|---------|--------------------------------------------------------------|-------------------------------------------------------------------------------|------------|\n| value   | [Literal](`typing.Literal`)\\['span', 'div'\\] \\| [str](`str`) | The expected container tag.                                                   | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)                 | The maximum time to wait for the container tag to appear. Defaults to `None`. | `None`     |\n\n### expect_inline { #shiny.playwright.controller.OutputText.expect_inline }\n\n```python\nplaywright.controller.OutputText.expect_inline(value=False, *, timeout=None)\n```\n\nAsserts that the output is inline.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                            | Default   |\n|---------|----------------------------------------------|------------------------------------------------------------------------|-----------|\n| value   | [bool](`bool`)                               | Whether the output is inline.                                          | `False`   |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the output to appear. Defaults to `None`. | `None`    |\n\n### expect_value { #shiny.playwright.controller.OutputText.expect_value }\n\n```python\nplaywright.controller.OutputText.expect_value(value, *, timeout=None)\n```\n\nAsserts that the output has the expected value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                           | Default    |\n|---------|--------------------------------------------------------|-----------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected value.                                                   | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the value to appear. Defaults to `None`. | `None`     |\n\n### get_value { #shiny.playwright.controller.OutputText.get_value }\n\n```python\nplaywright.controller.OutputText.get_value(timeout=None)\n```\n\nGets the text value of the output.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                           | Default   |\n|---------|----------------------------------------------|-----------------------------------------------------------------------|-----------|\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the value to appear. Defaults to `None`. | `None`    |"
    },
    {
        "controller_name": "playwright.controller.OutputTextVerbatim",
        "attributes": "| Name | Description |\n| --- | --- |\n| [id](#shiny.playwright.controller.OutputTextVerbatim.id) | The ID of the output control. |\n| [loc](#shiny.playwright.controller.OutputTextVerbatim.loc) | Playwright `Locator` of the verbatim text output. |\n| [page](#shiny.playwright.controller.OutputTextVerbatim.page) | Playwright `Page` of the Shiny app. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [expect_has_placeholder](#shiny.playwright.controller.OutputTextVerbatim.expect_has_placeholder) | Asserts that the verbatim text output has the expected placeholder. |\n| [expect_value](#shiny.playwright.controller.OutputTextVerbatim.expect_value) | Asserts that the output has the expected value. |\n\n### expect_has_placeholder { #shiny.playwright.controller.OutputTextVerbatim.expect_has_placeholder }\n\n```python\nplaywright.controller.OutputTextVerbatim.expect_has_placeholder(\n    value=False,\n    *,\n    timeout=None,\n)\n```\n\nAsserts that the verbatim text output has the expected placeholder.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                                 | Default   |\n|---------|----------------------------------------------|-----------------------------------------------------------------------------|-----------|\n| value   | [bool](`bool`)                               | Whether the verbatim text output has a placeholder.                         | `False`   |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the placeholder to appear. Defaults to `None`. | `None`    |\n\n### expect_value { #shiny.playwright.controller.OutputTextVerbatim.expect_value }\n\n```python\nplaywright.controller.OutputTextVerbatim.expect_value(value, *, timeout=None)\n```\n\nAsserts that the output has the expected value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                           | Default    |\n|---------|--------------------------------------------------------|-----------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected value.                                                   | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the value to appear. Defaults to `None`. | `None`     |"
    },
    {
        "controller_name": "playwright.controller.OutputUi",
        "attributes": "| Name | Description |\n| --- | --- |\n| [id](#shiny.playwright.controller.OutputUi.id) | The ID of the output control. |\n| [loc](#shiny.playwright.controller.OutputUi.loc) | Playwright `Locator` of the output control. |\n| [page](#shiny.playwright.controller.OutputUi.page) | Playwright `Page` of the Shiny app. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [expect_container_tag](#shiny.playwright.controller.OutputUi.expect_container_tag) | Asserts that the output has the expected container tag. |\n| [expect_empty](#shiny.playwright.controller.OutputUi.expect_empty) | Asserts that the output is empty. |\n| [expect_inline](#shiny.playwright.controller.OutputUi.expect_inline) | Asserts that the output is inline. |\n\n### expect_container_tag { #shiny.playwright.controller.OutputUi.expect_container_tag }\n\n```python\nplaywright.controller.OutputUi.expect_container_tag(value, *, timeout=None)\n```\n\nAsserts that the output has the expected container tag.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                         | Description                                                                   | Default    |\n|---------|--------------------------------------------------------------|-------------------------------------------------------------------------------|------------|\n| value   | [Literal](`typing.Literal`)\\['span', 'div'\\] \\| [str](`str`) | The expected container tag.                                                   | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)                 | The maximum time to wait for the container tag to appear. Defaults to `None`. | `None`     |\n\n### expect_empty { #shiny.playwright.controller.OutputUi.expect_empty }\n\n```python\nplaywright.controller.OutputUi.expect_empty(value, *, timeout=None)\n```\n\nAsserts that the output is empty.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                              | Default    |\n|---------|----------------------------------------------|--------------------------------------------------------------------------|------------|\n| value   | [bool](`bool`)                               | Whether the output is empty.                                             | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the output to be empty. Defaults to `None`. | `None`     |\n\n### expect_inline { #shiny.playwright.controller.OutputUi.expect_inline }\n\n```python\nplaywright.controller.OutputUi.expect_inline(value=False, *, timeout=None)\n```\n\nAsserts that the output is inline.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                            | Default   |\n|---------|----------------------------------------------|------------------------------------------------------------------------|-----------|\n| value   | [bool](`bool`)                               | Whether the output is inline.                                          | `False`   |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the output to appear. Defaults to `None`. | `None`    |"
    },
    {
        "controller_name": "playwright.controller.Popover",
        "attributes": "| Name | Description |\n| --- | --- |\n| [expect](#shiny.playwright.controller.Popover.expect) | Expectation method equivalent to `playwright.expect(self.loc)`. |\n| [id](#shiny.playwright.controller.Popover.id) | The browser DOM `id` of the UI element. |\n| [loc](#shiny.playwright.controller.Popover.loc) | Playwright `Locator` of the UI element. |\n| [loc_overlay_body](#shiny.playwright.controller.Popover.loc_overlay_body) | Playwright `Locator` for the popover body. |\n| [loc_overlay_container](#shiny.playwright.controller.Popover.loc_overlay_container) | Playwright `Locator` for the popover container. |\n| [loc_trigger](#shiny.playwright.controller.Popover.loc_trigger) | Playwright `Locator` for the trigger element that opens/closes the popover. |\n| [page](#shiny.playwright.controller.Popover.page) | Playwright `Page` of the Shiny app. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [expect_active](#shiny.playwright.controller.Popover.expect_active) | Expects the overlay to be active or inactive. |\n| [expect_body](#shiny.playwright.controller.Popover.expect_body) | Expects the overlay body to have the specified text. |\n| [expect_placement](#shiny.playwright.controller.Popover.expect_placement) | Expects the overlay to have the specified placement. |\n| [expect_title](#shiny.playwright.controller.Popover.expect_title) | Expects the popover title to have the specified text. |\n| [get_loc_overlay_container](#shiny.playwright.controller.Popover.get_loc_overlay_container) | Returns the locator for the overlay container. |\n| [set](#shiny.playwright.controller.Popover.set) | Sets the state of the popover. |\n\n### expect_active { #shiny.playwright.controller.Popover.expect_active }\n\n```python\nplaywright.controller.Popover.expect_active(value, *, timeout=None)\n```\n\nExpects the overlay to be active or inactive.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                               | Default    |\n|---------|----------------------------------------------|---------------------------------------------------------------------------|------------|\n| value   | [bool](`bool`)                               | `True` if the overlay is expected to be active, False otherwise.          | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### expect_body { #shiny.playwright.controller.Popover.expect_body }\n\n```python\nplaywright.controller.Popover.expect_body(value, *, timeout=None)\n```\n\nExpects the overlay body to have the specified text.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                                  | Default    |\n|---------|--------------------------------------------------------|------------------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected text pattern or string.                                         | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the overlay body to appear. Defaults to `None`. | `None`     |\n\n### expect_placement { #shiny.playwright.controller.Popover.expect_placement }\n\n```python\nplaywright.controller.Popover.expect_placement(value, *, timeout=None)\n```\n\nExpects the overlay to have the specified placement.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                               | Default    |\n|---------|----------------------------------------------|---------------------------------------------------------------------------|------------|\n| value   | [str](`str`)                                 | The expected placement value.                                             | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### expect_title { #shiny.playwright.controller.Popover.expect_title }\n\n```python\nplaywright.controller.Popover.expect_title(value, *, timeout=None)\n```\n\nExpects the popover title to have the specified text.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                                    | Default    |\n|---------|--------------------------------------------------------|--------------------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected text pattern or string.                                           | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the popover header to appear. Defaults to `None`. | `None`     |\n\n### get_loc_overlay_container { #shiny.playwright.controller.Popover.get_loc_overlay_container }\n\n```python\nplaywright.controller.Popover.get_loc_overlay_container(timeout=None)\n```\n\nReturns the locator for the overlay container.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                                       | Default   |\n|---------|----------------------------------------------|-----------------------------------------------------------------------------------|-----------|\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the overlay container to appear. Defaults to `None`. | `None`    |\n\n### set { #shiny.playwright.controller.Popover.set }\n\n```python\nplaywright.controller.Popover.set(open, timeout=None)\n```\n\nSets the state of the popover.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                                                  | Default    |\n|---------|----------------------------------------------|----------------------------------------------------------------------------------------------|------------|\n| open    | [bool](`bool`)                               | `True` to open the popover and `False` to close it.                                          | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the popover to be visible and interactable. Defaults to `None`. | `None`     |"
    },
    {
        "controller_name": "playwright.controller.Sidebar",
        "attributes": "| Name | Description |\n| --- | --- |\n| [expect](#shiny.playwright.controller.Sidebar.expect) | Expectation method equivalent to `playwright.expect(self.loc)`. |\n| [id](#shiny.playwright.controller.Sidebar.id) | The browser DOM `id` of the UI element. |\n| [loc](#shiny.playwright.controller.Sidebar.loc) | Playwright `Locator` for the sidebar. |\n| [loc_container](#shiny.playwright.controller.Sidebar.loc_container) | Playwright `Locator` for the sidebar layout. |\n| [loc_content](#shiny.playwright.controller.Sidebar.loc_content) | Playwright `Locator` for the content of the sidebar. |\n| [loc_handle](#shiny.playwright.controller.Sidebar.loc_handle) | Playwright `Locator` for the open/close handle of the sidebar. |\n| [loc_position](#shiny.playwright.controller.Sidebar.loc_position) | Playwright `Locator` for the position of the sidebar. |\n| [loc_title](#shiny.playwright.controller.Sidebar.loc_title) | Playwright `Locator` for the title of the sidebar. |\n| [page](#shiny.playwright.controller.Sidebar.page) | Playwright `Page` of the Shiny app. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [expect_bg_color](#shiny.playwright.controller.Sidebar.expect_bg_color) | Asserts that the sidebar has the expected background color. |\n| [expect_class](#shiny.playwright.controller.Sidebar.expect_class) | Asserts that the sidebar has or does not have a CSS class. |\n| [expect_desktop_state](#shiny.playwright.controller.Sidebar.expect_desktop_state) | Asserts that the sidebar has the expected state on desktop. |\n| [expect_gap](#shiny.playwright.controller.Sidebar.expect_gap) | Asserts that the sidebar has the expected gap. |\n| [expect_handle](#shiny.playwright.controller.Sidebar.expect_handle) | Asserts that the sidebar handle exists or does not exist. |\n| [expect_mobile_max_height](#shiny.playwright.controller.Sidebar.expect_mobile_max_height) | Asserts that the sidebar has the expected maximum height on mobile. |\n| [expect_mobile_state](#shiny.playwright.controller.Sidebar.expect_mobile_state) | Asserts that the sidebar has the expected state on mobile. |\n| [expect_open](#shiny.playwright.controller.Sidebar.expect_open) | Expect the sidebar to be open or closed. |\n| [expect_padding](#shiny.playwright.controller.Sidebar.expect_padding) | Asserts that the sidebar has the expected padding. |\n| [expect_position](#shiny.playwright.controller.Sidebar.expect_position) | Asserts that the sidebar is in the expected position. |\n| [expect_text](#shiny.playwright.controller.Sidebar.expect_text) | Asserts that the sidebar has the expected text. |\n| [expect_title](#shiny.playwright.controller.Sidebar.expect_title) | Asserts that the sidebar has the expected title. |\n| [expect_width](#shiny.playwright.controller.Sidebar.expect_width) | Asserts that the sidebar has the expected width. |\n| [set](#shiny.playwright.controller.Sidebar.set) | Sets the sidebar to be open or closed. |\n\n### expect_bg_color { #shiny.playwright.controller.Sidebar.expect_bg_color }\n\n```python\nplaywright.controller.Sidebar.expect_bg_color(value, *, timeout=None)\n```\n\nAsserts that the sidebar has the expected background color.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                                      | Default    |\n|---------|--------------------------------------------------------|----------------------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected background color of the sidebar.                                    | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the background color to appear. Defaults to `None`. | `None`     |\n\n### expect_class { #shiny.playwright.controller.Sidebar.expect_class }\n\n```python\nplaywright.controller.Sidebar.expect_class(\n    class_name,\n    *,\n    has_class=True,\n    timeout=None,\n)\n```\n\nAsserts that the sidebar has or does not have a CSS class.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name       | Type                                         | Description                                                             | Default    |\n|------------|----------------------------------------------|-------------------------------------------------------------------------|------------|\n| class_name | [str](`str`)                                 | The CSS class to check for.                                             | _required_ |\n| has_class  | [bool](`bool`)                               | `True` if the sidebar should have the CSS class, `False` otherwise.     | `True`     |\n| timeout    | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the sidebar to appear. Defaults to `None`. | `None`     |\n\n### expect_desktop_state { #shiny.playwright.controller.Sidebar.expect_desktop_state }\n\n```python\nplaywright.controller.Sidebar.expect_desktop_state(value, *, timeout=None)\n```\n\nAsserts that the sidebar has the expected state on desktop.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                      | Description                                                           | Default    |\n|---------|-----------------------------------------------------------|-----------------------------------------------------------------------|------------|\n| value   | [Literal](`typing.Literal`)\\['open', 'closed', 'always'\\] | The expected state of the sidebar on desktop.                         | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)              | The maximum time to wait for the state to appear. Defaults to `None`. | `None`     |\n\n### expect_gap { #shiny.playwright.controller.Sidebar.expect_gap }\n\n```python\nplaywright.controller.Sidebar.expect_gap(value, *, timeout=None)\n```\n\nAsserts that the sidebar has the expected gap.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                         | Default    |\n|---------|--------------------------------------------------------|---------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected gap of the sidebar.                                    | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the gap to appear. Defaults to `None`. | `None`     |\n\n### expect_handle { #shiny.playwright.controller.Sidebar.expect_handle }\n\n```python\nplaywright.controller.Sidebar.expect_handle(exists, *, timeout=None)\n```\n\nAsserts that the sidebar handle exists or does not exist.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                                    | Default    |\n|---------|----------------------------------------------|--------------------------------------------------------------------------------|------------|\n| exists  | [bool](`bool`)                               | `True` if the sidebar open/close handle should exist, `False` otherwise.       | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the sidebar handle to appear. Defaults to `None`. | `None`     |\n\n### expect_mobile_max_height { #shiny.playwright.controller.Sidebar.expect_mobile_max_height }\n\n```python\nplaywright.controller.Sidebar.expect_mobile_max_height(value, *, timeout=None)\n```\n\nAsserts that the sidebar has the expected maximum height on mobile.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                                    | Default    |\n|---------|--------------------------------------------------------|--------------------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected maximum height of the sidebar on mobile.                          | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the maximum height to appear. Defaults to `None`. | `None`     |\n\n### expect_mobile_state { #shiny.playwright.controller.Sidebar.expect_mobile_state }\n\n```python\nplaywright.controller.Sidebar.expect_mobile_state(value, *, timeout=None)\n```\n\nAsserts that the sidebar has the expected state on mobile.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                      | Description                                                           | Default    |\n|---------|-----------------------------------------------------------|-----------------------------------------------------------------------|------------|\n| value   | [Literal](`typing.Literal`)\\['open', 'closed', 'always'\\] | The expected state of the sidebar on mobile.                          | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)              | The maximum time to wait for the state to appear. Defaults to `None`. | `None`     |\n\n### expect_open { #shiny.playwright.controller.Sidebar.expect_open }\n\n```python\nplaywright.controller.Sidebar.expect_open(value, *, timeout=None)\n```\n\nExpect the sidebar to be open or closed.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                                    | Default    |\n|---------|----------------------------------------------|--------------------------------------------------------------------------------|------------|\n| value   | [bool](`bool`)                               | `True` if the sidebar should be open, `False` to be closed.                    | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the sidebar to open or close. Defaults to `None`. | `None`     |\n\n### expect_padding { #shiny.playwright.controller.Sidebar.expect_padding }\n\n```python\nplaywright.controller.Sidebar.expect_padding(value, *, timeout=None)\n```\n\nAsserts that the sidebar has the expected padding.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                           | Description                                                             | Default    |\n|---------|------------------------------------------------|-------------------------------------------------------------------------|------------|\n| value   | [str](`str`) \\| [list](`list`)\\[[str](`str`)\\] | The expected padding of the sidebar.                                    | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)   | The maximum time to wait for the padding to appear. Defaults to `None`. | `None`     |\n\n### expect_position { #shiny.playwright.controller.Sidebar.expect_position }\n\n```python\nplaywright.controller.Sidebar.expect_position(value, *, timeout=None)\n```\n\nAsserts that the sidebar is in the expected position.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                           | Description                                                             | Default    |\n|---------|------------------------------------------------|-------------------------------------------------------------------------|------------|\n| value   | [Literal](`typing.Literal`)\\['left', 'right'\\] | The expected position of the sidebar.                                   | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)   | The maximum time to wait for the sidebar to appear. Defaults to `None`. | `None`     |\n\n### expect_text { #shiny.playwright.controller.Sidebar.expect_text }\n\n```python\nplaywright.controller.Sidebar.expect_text(value, *, timeout=None)\n```\n\nAsserts that the sidebar has the expected text.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                          | Default    |\n|---------|--------------------------------------------------------|----------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected text in the sidebar.                                    | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the text to appear. Defaults to `None`. | `None`     |\n\n### expect_title { #shiny.playwright.controller.Sidebar.expect_title }\n\n```python\nplaywright.controller.Sidebar.expect_title(value, *, timeout=None)\n```\n\nAsserts that the sidebar has the expected title.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                           | Default    |\n|---------|--------------------------------------------------------|-----------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected title of the sidebar.                                    | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the title to appear. Defaults to `None`. | `None`     |\n\n### expect_width { #shiny.playwright.controller.Sidebar.expect_width }\n\n```python\nplaywright.controller.Sidebar.expect_width(value, *, timeout=None)\n```\n\nAsserts that the sidebar has the expected width.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                           | Default    |\n|---------|--------------------------------------------------------|-----------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected width of the sidebar.                                    | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the width to appear. Defaults to `None`. | `None`     |\n\n### set { #shiny.playwright.controller.Sidebar.set }\n\n```python\nplaywright.controller.Sidebar.set(open, *, timeout=None)\n```\n\nSets the sidebar to be open or closed.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                                    | Default    |\n|---------|----------------------------------------------|--------------------------------------------------------------------------------|------------|\n| open    | [bool](`bool`)                               | `True` to open the sidebar and `False` to close it.                            | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the sidebar to open or close. Defaults to `None`. | `None`     |"
    },
    {
        "controller_name": "playwright.controller.Tooltip",
        "attributes": "| Name | Description |\n| --- | --- |\n| [expect](#shiny.playwright.controller.Tooltip.expect) | Expectation method equivalent to `playwright.expect(self.loc)`. |\n| [id](#shiny.playwright.controller.Tooltip.id) | The browser DOM `id` of the UI element. |\n| [loc](#shiny.playwright.controller.Tooltip.loc) | Playwright `Locator` for the tooltip content. |\n| [loc_container](#shiny.playwright.controller.Tooltip.loc_container) | Playwright `Locator` for the container tooltip. |\n| [loc_overlay_body](#shiny.playwright.controller.Tooltip.loc_overlay_body) | Playwright `Locator` for the overlay body. |\n| [loc_overlay_container](#shiny.playwright.controller.Tooltip.loc_overlay_container) | Playwright `Locator` for the overlay container. |\n| [loc_trigger](#shiny.playwright.controller.Tooltip.loc_trigger) | Playwright `Locator` for the trigger element. |\n| [page](#shiny.playwright.controller.Tooltip.page) | Playwright `Page` of the Shiny app. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [expect_active](#shiny.playwright.controller.Tooltip.expect_active) | Expects the overlay to be active or inactive. |\n| [expect_body](#shiny.playwright.controller.Tooltip.expect_body) | Expects the overlay body to have the specified text. |\n| [expect_placement](#shiny.playwright.controller.Tooltip.expect_placement) | Expects the overlay to have the specified placement. |\n| [get_loc_overlay_container](#shiny.playwright.controller.Tooltip.get_loc_overlay_container) | Returns the locator for the overlay container. |\n| [set](#shiny.playwright.controller.Tooltip.set) | Sets the state of the tooltip. |\n\n### expect_active { #shiny.playwright.controller.Tooltip.expect_active }\n\n```python\nplaywright.controller.Tooltip.expect_active(value, *, timeout=None)\n```\n\nExpects the overlay to be active or inactive.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                               | Default    |\n|---------|----------------------------------------------|---------------------------------------------------------------------------|------------|\n| value   | [bool](`bool`)                               | `True` if the overlay is expected to be active, False otherwise.          | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### expect_body { #shiny.playwright.controller.Tooltip.expect_body }\n\n```python\nplaywright.controller.Tooltip.expect_body(value, *, timeout=None)\n```\n\nExpects the overlay body to have the specified text.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                                  | Default    |\n|---------|--------------------------------------------------------|------------------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected text pattern or string.                                         | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the overlay body to appear. Defaults to `None`. | `None`     |\n\n### expect_placement { #shiny.playwright.controller.Tooltip.expect_placement }\n\n```python\nplaywright.controller.Tooltip.expect_placement(value, *, timeout=None)\n```\n\nExpects the overlay to have the specified placement.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                               | Default    |\n|---------|----------------------------------------------|---------------------------------------------------------------------------|------------|\n| value   | [str](`str`)                                 | The expected placement value.                                             | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### get_loc_overlay_container { #shiny.playwright.controller.Tooltip.get_loc_overlay_container }\n\n```python\nplaywright.controller.Tooltip.get_loc_overlay_container(timeout=None)\n```\n\nReturns the locator for the overlay container.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                                       | Default   |\n|---------|----------------------------------------------|-----------------------------------------------------------------------------------|-----------|\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the overlay container to appear. Defaults to `None`. | `None`    |\n\n### set { #shiny.playwright.controller.Tooltip.set }\n\n```python\nplaywright.controller.Tooltip.set(open, timeout=None)\n```\n\nSets the state of the tooltip.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                                                  | Default    |\n|---------|----------------------------------------------|----------------------------------------------------------------------------------------------|------------|\n| open    | [bool](`bool`)                               | `True` to open the tooltip and `False` to close it.                                          | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the tooltip to be visible and interactable. Defaults to `None`. | `None`     |"
    },
    {
        "controller_name": "playwright.controller.ValueBox",
        "attributes": "| Name | Description |\n| --- | --- |\n| [expect](#shiny.playwright.controller.ValueBox.expect) | Expectation method equivalent to `playwright.expect(self.loc)`. |\n| [id](#shiny.playwright.controller.ValueBox.id) | The browser DOM `id` of the UI element. |\n| [loc](#shiny.playwright.controller.ValueBox.loc) | Playwright `Locator` for the value box's value. |\n| [loc_body](#shiny.playwright.controller.ValueBox.loc_body) | Playwright `Locator` for the value box body. |\n| [loc_container](#shiny.playwright.controller.ValueBox.loc_container) | Playwright `Locator` for the container of the UI element. |\n| [loc_showcase](#shiny.playwright.controller.ValueBox.loc_showcase) | Playwright `Locator` for the value box showcase. |\n| [loc_title](#shiny.playwright.controller.ValueBox.loc_title) | Playwright `Locator` for the value box title. |\n| [page](#shiny.playwright.controller.ValueBox.page) | Playwright `Page` of the Shiny app. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [expect_body](#shiny.playwright.controller.ValueBox.expect_body) | Expects the value box body to have specific text. |\n| [expect_full_screen](#shiny.playwright.controller.ValueBox.expect_full_screen) | Verifies if the full screen mode is currently open. |\n| [expect_full_screen_available](#shiny.playwright.controller.ValueBox.expect_full_screen_available) | Expects whether full screen mode is available for the element. |\n| [expect_height](#shiny.playwright.controller.ValueBox.expect_height) | Expects the value box to have a specific height. |\n| [expect_title](#shiny.playwright.controller.ValueBox.expect_title) | Expects the value box title to have a specific text. |\n| [expect_value](#shiny.playwright.controller.ValueBox.expect_value) | Expects the value box value to have a specific text. |\n| [expect_width](#shiny.playwright.controller.ValueBox.expect_width) | Expect the `width` attribute of a DOM element to have a specific value. |\n| [set_full_screen](#shiny.playwright.controller.ValueBox.set_full_screen) | Sets the element to full screen mode or exits full screen mode. |\n\n### expect_body { #shiny.playwright.controller.ValueBox.expect_body }\n\n```python\nplaywright.controller.ValueBox.expect_body(value, *, timeout=None)\n```\n\nExpects the value box body to have specific text.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                                                                                               | Description                                                                                                                  | Default    |\n|---------|------------------------------------------------------------------------------------------------------------------------------------|------------------------------------------------------------------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) \\| [list](`list`)\\[[PatternOrStr](`shiny.playwright._types.PatternOrStr`)\\] | The expected text pattern or list of patterns/strings.  Note: If testing against multiple elements, text should be an array. | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)                                                                                       | The maximum time to wait for the expectation to pass. Defaults to `None`.                                                    | `None`     |\n\n### expect_full_screen { #shiny.playwright.controller.ValueBox.expect_full_screen }\n\n```python\nplaywright.controller.ValueBox.expect_full_screen(value, *, timeout=None)\n```\n\nVerifies if the full screen mode is currently open.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                         | Default    |\n|---------|----------------------------------------------|---------------------------------------------------------------------|------------|\n| value   | [bool](`bool`)                               | `True` if the item is to be in full screen mode, `False` otherwise. | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the verification. Defaults to `None`.  | `None`     |\n\n### expect_full_screen_available { #shiny.playwright.controller.ValueBox.expect_full_screen_available }\n\n```python\nplaywright.controller.ValueBox.expect_full_screen_available(\n    value,\n    *,\n    timeout=None,\n)\n```\n\nExpects whether full screen mode is available for the element.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                                              | Default    |\n|---------|----------------------------------------------|------------------------------------------------------------------------------------------|------------|\n| value   | [bool](`bool`)                               | `True` if the element is expected to be available for full screen mode, False otherwise. | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the expectation to pass. Defaults to `None`.                | `None`     |\n\n### expect_height { #shiny.playwright.controller.ValueBox.expect_height }\n\n```python\nplaywright.controller.ValueBox.expect_height(value, *, timeout=None)\n```\n\nExpects the value box to have a specific height.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                               | Description                                                               | Default    |\n|---------|----------------------------------------------------|---------------------------------------------------------------------------|------------|\n| value   | [StyleValue](`shiny.playwright._types.StyleValue`) | The expected height value.                                                | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)       | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### expect_title { #shiny.playwright.controller.ValueBox.expect_title }\n\n```python\nplaywright.controller.ValueBox.expect_title(value, *, timeout=None)\n```\n\nExpects the value box title to have a specific text.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                               | Default    |\n|---------|--------------------------------------------------------|---------------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected text pattern or string.                                      | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### expect_value { #shiny.playwright.controller.ValueBox.expect_value }\n\n```python\nplaywright.controller.ValueBox.expect_value(value, *, timeout=None)\n```\n\nExpects the value box value to have a specific text.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                                   | Description                                                               | Default    |\n|---------|--------------------------------------------------------|---------------------------------------------------------------------------|------------|\n| value   | [PatternOrStr](`shiny.playwright._types.PatternOrStr`) | The expected text pattern or string.                                      | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)           | The maximum time to wait for the expectation to pass. Defaults to `None`. | `None`     |\n\n### expect_width { #shiny.playwright.controller.ValueBox.expect_width }\n\n```python\nplaywright.controller.ValueBox.expect_width(value, *, timeout=None)\n```\n\nExpect the `width` attribute of a DOM element to have a specific value.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                             | Description                                                                       | Default    |\n|---------|--------------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| value   | [AttrValue](`shiny.playwright._types.AttrValue`) | The expected value of the `width` attribute.                                      | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`)     | The maximum time to wait for the expectation to be fulfilled. Defaults to `None`. | `None`     |\n\n### set_full_screen { #shiny.playwright.controller.ValueBox.set_full_screen }\n\n```python\nplaywright.controller.ValueBox.set_full_screen(open, *, timeout=None)\n```\n\nSets the element to full screen mode or exits full screen mode.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name    | Type                                         | Description                                                                       | Default    |\n|---------|----------------------------------------------|-----------------------------------------------------------------------------------|------------|\n| open    | [bool](`bool`)                               | `True` to open the element in full screen mode, `False` to exit full screen mode. | _required_ |\n| timeout | [Timeout](`shiny.playwright._types.Timeout`) | The maximum time to wait for the operation to complete. Defaults to `None`.       | `None`     |"
    },
    {
        "controller_name": "playwright.controls.Accordion",
        "attributes": "| Name | Description |\n| --- | --- |\n| [loc](#shiny.playwright.controls.Accordion.loc) | Playwright `Locator` for each accordion items. |\n| [loc_container](#shiny.playwright.controls.Accordion.loc_container) | Playwright `Locator` for the accordion container. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [accordion_panel](#shiny.playwright.controls.Accordion.accordion_panel) | Returns the accordion panel ([](:class:`~shiny.playwright.controls.AccordionPanel`)) with the specified data value. |\n| [expect_height](#shiny.playwright.controls.Accordion.expect_height) | Expects the accordion to have the specified height. |\n| [expect_panels](#shiny.playwright.controls.Accordion.expect_panels) | Expects the accordion to have the specified panels. |\n| [expect_width](#shiny.playwright.controls.Accordion.expect_width) | Expects the accordion to have the specified width. |\n| [set](#shiny.playwright.controls.Accordion.set) | Sets the state of the accordion panel. |\n\n### accordion_panel { #shiny.playwright.controls.Accordion.accordion_panel }\n\n`playwright.controls.Accordion.accordion_panel(data_value)`\n\nReturns the accordion panel ([](:class:`~shiny.playwright.controls.AccordionPanel`))\nwith the specified data value.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">data_value</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[str](`str`)</span></code>\n\n:   The data value of the accordion panel.\n\n### expect_height { #shiny.playwright.controls.Accordion.expect_height }\n\n`playwright.controls.Accordion.expect_height(value, *, timeout=None)`\n\nExpects the accordion to have the specified height.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">value</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[StyleValue](`shiny.playwright._types.StyleValue`)</span></code>\n\n:   The expected height.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the height to be visible and interactable. Defaults to `None`.\n\n### expect_panels { #shiny.playwright.controls.Accordion.expect_panels }\n\n`playwright.controls.Accordion.expect_panels(value, *, timeout=None)`\n\nExpects the accordion to have the specified panels.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">value</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[list](`list`)\\[[PatternOrStr](`shiny.playwright._types.PatternOrStr`)\\]</span></code>\n\n:   The expected panels.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the panels to be visible and interactable. Defaults to `None`.\n\n### expect_width { #shiny.playwright.controls.Accordion.expect_width }\n\n`playwright.controls.Accordion.expect_width(value, *, timeout=None)`\n\nExpects the accordion to have the specified width.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">value</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[StyleValue](`shiny.playwright._types.StyleValue`)</span></code>\n\n:   The expected width.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the width to be visible and interactable. Defaults to `None`.\n\n### set { #shiny.playwright.controls.Accordion.set }\n\n`playwright.controls.Accordion.set(selected, *, timeout=None)`\n\nSets the state of the accordion panel.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">selected</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[str](`str`) \\| [list](`list`)\\[[str](`str`)\\]</span></code>\n\n:   The selected accordion panel(s).\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the accordion panel to be visible and interactable. Defaults to `None`."
    },
    {
        "controller_name": "playwright.controls.AccordionPanel",
        "attributes": "| Name | Description |\n| --- | --- |\n| [loc_body](#shiny.playwright.controls.AccordionPanel.loc_body) | Playwright `Locator` for the accordion panel's body. |\n| [loc_header](#shiny.playwright.controls.AccordionPanel.loc_header) | Playwright `Locator` for the accordion panel's header. |\n| [loc_icon](#shiny.playwright.controls.AccordionPanel.loc_icon) | Playwright `Locator` for the accordion panel's icon. |\n| [loc_label](#shiny.playwright.controls.AccordionPanel.loc_label) | Playwright `Locator` for the accordion panel's label. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [expect_body](#shiny.playwright.controls.AccordionPanel.expect_body) | Expects the accordion panel body to have the specified text. |\n| [expect_icon](#shiny.playwright.controls.AccordionPanel.expect_icon) | Expects the accordion panel icon to have the specified text. |\n| [expect_label](#shiny.playwright.controls.AccordionPanel.expect_label) | Expects the accordion panel label to have the specified text. |\n| [expect_open](#shiny.playwright.controls.AccordionPanel.expect_open) | Expects the accordion panel to be open or closed. |\n| [set](#shiny.playwright.controls.AccordionPanel.set) | Sets the state of the control to open or closed. |\n| [toggle](#shiny.playwright.controls.AccordionPanel.toggle) | Toggles the state of the control. |\n\n### expect_body { #shiny.playwright.controls.AccordionPanel.expect_body }\n\n`playwright.controls.AccordionPanel.expect_body(value, *, timeout=None)`\n\nExpects the accordion panel body to have the specified text.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">value</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[PatternOrStr](`shiny.playwright._types.PatternOrStr`)</span></code>\n\n:   The expected text pattern or string.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the body to appear. Defaults to `None`.\n\n### expect_icon { #shiny.playwright.controls.AccordionPanel.expect_icon }\n\n`playwright.controls.AccordionPanel.expect_icon(value, *, timeout=None)`\n\nExpects the accordion panel icon to have the specified text.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">value</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[PatternOrStr](`shiny.playwright._types.PatternOrStr`)</span></code>\n\n:   The expected text pattern or string.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the icon to appear. Defaults to `None`.\n\n### expect_label { #shiny.playwright.controls.AccordionPanel.expect_label }\n\n`playwright.controls.AccordionPanel.expect_label(value, *, timeout=None)`\n\nExpects the accordion panel label to have the specified text.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">value</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[PatternOrStr](`shiny.playwright._types.PatternOrStr`)</span></code>\n\n:   The expected text pattern or string.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the label to appear. Defaults to `None`.\n\n### expect_open { #shiny.playwright.controls.AccordionPanel.expect_open }\n\n`playwright.controls.AccordionPanel.expect_open(value, *, timeout=None)`\n\nExpects the accordion panel to be open or closed.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">value</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[bool](`bool`)</span></code>\n\n:   `True` if the accordion panel is expected to be open, `False` otherwise.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the expectation to pass. Defaults to `None`.\n\n### set { #shiny.playwright.controls.AccordionPanel.set }\n\n`playwright.controls.AccordionPanel.set(open, *, timeout=None)`\n\nSets the state of the control to open or closed.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">open</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[bool](`bool`)</span></code>\n\n:   `True` to open the accordion panel, False to close it.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the control to be visible and interactable. Defaults to `None`.\n\n### toggle { #shiny.playwright.controls.AccordionPanel.toggle }\n\n`playwright.controls.AccordionPanel.toggle(timeout=None)`\n\nToggles the state of the control.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the control to be visible and interactable. Defaults to `None`."
    },
    {
        "controller_name": "playwright.controls.Card",
        "attributes": "| Name | Description |\n| --- | --- |\n| [loc](#shiny.playwright.controls.Card.loc) | Playwright `Locator` for the card's value. |\n| [loc_body](#shiny.playwright.controls.Card.loc_body) | Playwright `Locator` for the card body. |\n| [loc_container](#shiny.playwright.controls.Card.loc_container) | Playwright `Locator` for the card container. |\n| [loc_footer](#shiny.playwright.controls.Card.loc_footer) | Playwright `Locator` for the card footer. |\n| [loc_title](#shiny.playwright.controls.Card.loc_title) | Playwright `Locator` for the card title. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [expect_footer](#shiny.playwright.controls.Card.expect_footer) | Expects the card footer to have a specific text. |\n| [expect_header](#shiny.playwright.controls.Card.expect_header) | Expects the card header to have a specific text. |\n| [expect_height](#shiny.playwright.controls.Card.expect_height) | Expects the card to have a specific height. |\n| [expect_max_height](#shiny.playwright.controls.Card.expect_max_height) | Expects the card to have a specific maximum height. |\n| [expect_min_height](#shiny.playwright.controls.Card.expect_min_height) | Expects the card to have a specific minimum height. |\n\n### expect_footer { #shiny.playwright.controls.Card.expect_footer }\n\n`playwright.controls.Card.expect_footer(value, *, timeout=None)`\n\nExpects the card footer to have a specific text.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">value</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[PatternOrStr](`shiny.playwright._types.PatternOrStr`) \\| None</span></code>\n\n:   The expected text pattern or string\n    Note: None if the footer is expected to not exist.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the expectation to pass. Defaults to `None`.\n\n### expect_header { #shiny.playwright.controls.Card.expect_header }\n\n`playwright.controls.Card.expect_header(value, *, timeout=None)`\n\nExpects the card header to have a specific text.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">value</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[PatternOrStr](`shiny.playwright._types.PatternOrStr`) \\| None</span></code>\n\n:   The expected text pattern or string.\n\n    Note: `None` if the header is expected to not exist.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the expectation to pass. Defaults to `None`.\n\n### expect_height { #shiny.playwright.controls.Card.expect_height }\n\n`playwright.controls.Card.expect_height(value, *, timeout=None)`\n\nExpects the card to have a specific height.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">value</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[StyleValue](`shiny.playwright._types.StyleValue`)</span></code>\n\n:   The expected height value.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the expectation to pass. Defaults to `None`.\n\n### expect_max_height { #shiny.playwright.controls.Card.expect_max_height }\n\n`playwright.controls.Card.expect_max_height(value, *, timeout=None)`\n\nExpects the card to have a specific maximum height.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">value</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[StyleValue](`shiny.playwright._types.StyleValue`)</span></code>\n\n:   The expected maximum height value.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the expectation to pass. Defaults to `None`.\n\n### expect_min_height { #shiny.playwright.controls.Card.expect_min_height }\n\n`playwright.controls.Card.expect_min_height(value, *, timeout=None)`\n\nExpects the card to have a specific minimum height.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">value</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[StyleValue](`shiny.playwright._types.StyleValue`)</span></code>\n\n:   The expected minimum height value.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the expectation to pass. Defaults to `None`."
    },
    {
        "controller_name": "playwright.controls.InputDateRange",
        "attributes": "| Name | Description |\n| --- | --- |\n| [date_end](#shiny.playwright.controls.InputDateRange.date_end) | The end date input element. |\n| [date_start](#shiny.playwright.controls.InputDateRange.date_start) | The start date input element. |\n| [loc_end](#shiny.playwright.controls.InputDateRange.loc_end) | Playwright `Locator` of the end date input element. |\n| [loc_separator](#shiny.playwright.controls.InputDateRange.loc_separator) | Playwright `Locator` of the separator between the two input elements. |\n| [loc_start](#shiny.playwright.controls.InputDateRange.loc_start) | Playwright `Locator` of the start date input element. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [expect_autoclose](#shiny.playwright.controls.InputDateRange.expect_autoclose) | Asserts that the input element has the expected autoclose value. |\n| [expect_format](#shiny.playwright.controls.InputDateRange.expect_format) | Asserts that the input element has the expected format. |\n| [expect_language](#shiny.playwright.controls.InputDateRange.expect_language) | Asserts that the input element has the expected language. |\n| [expect_max_date](#shiny.playwright.controls.InputDateRange.expect_max_date) | Asserts that the input element has the expected maximum date. |\n| [expect_min_date](#shiny.playwright.controls.InputDateRange.expect_min_date) | Asserts that the input element has the expected minimum date. |\n| [expect_separator](#shiny.playwright.controls.InputDateRange.expect_separator) | Asserts that the input element has the expected separator. |\n| [expect_startview](#shiny.playwright.controls.InputDateRange.expect_startview) | Asserts that the input element has the expected start view. |\n| [expect_value](#shiny.playwright.controls.InputDateRange.expect_value) | Asserts that the input element has the expected value. |\n| [expect_weekstart](#shiny.playwright.controls.InputDateRange.expect_weekstart) | Asserts that the input element has the expected week start. |\n| [set](#shiny.playwright.controls.InputDateRange.set) | Sets the value of the input element. |\n\n### expect_autoclose { #shiny.playwright.controls.InputDateRange.expect_autoclose }\n\n`playwright.controls.InputDateRange.expect_autoclose(value, *, timeout=None)`\n\nAsserts that the input element has the expected autoclose value.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">value</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Literal](`typing.Literal`)\\['true', 'false'\\]</span></code>\n\n:   The expected autoclose value.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the value to appear. Defaults to `None`.\n\n### expect_format { #shiny.playwright.controls.InputDateRange.expect_format }\n\n`playwright.controls.InputDateRange.expect_format(value, *, timeout=None)`\n\nAsserts that the input element has the expected format.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">value</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[AttrValue](`shiny.playwright._types.AttrValue`)</span></code>\n\n:   The expected format.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the format to appear. Defaults to `None`.\n\n### expect_language { #shiny.playwright.controls.InputDateRange.expect_language }\n\n`playwright.controls.InputDateRange.expect_language(value, *, timeout=None)`\n\nAsserts that the input element has the expected language.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">value</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[AttrValue](`shiny.playwright._types.AttrValue`)</span></code>\n\n:   The expected language.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the language to appear. Defaults to `None`.\n\n### expect_max_date { #shiny.playwright.controls.InputDateRange.expect_max_date }\n\n`playwright.controls.InputDateRange.expect_max_date(value, *, timeout=None)`\n\nAsserts that the input element has the expected maximum date.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">value</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[AttrValue](`shiny.playwright._types.AttrValue`)</span></code>\n\n:   The expected maximum date.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the maximum date to appear. Defaults to `None`.\n\n### expect_min_date { #shiny.playwright.controls.InputDateRange.expect_min_date }\n\n`playwright.controls.InputDateRange.expect_min_date(value, *, timeout=None)`\n\nAsserts that the input element has the expected minimum date.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">value</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[AttrValue](`shiny.playwright._types.AttrValue`)</span></code>\n\n:   The expected minimum date.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the minimum date to appear. Defaults to `None`.\n\n### expect_separator { #shiny.playwright.controls.InputDateRange.expect_separator }\n\n`playwright.controls.InputDateRange.expect_separator(value, *, timeout=None)`\n\nAsserts that the input element has the expected separator.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">value</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[PatternOrStr](`shiny.playwright._types.PatternOrStr`)</span></code>\n\n:   The expected separator.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the separator to appear. Defaults to `None`.\n\n### expect_startview { #shiny.playwright.controls.InputDateRange.expect_startview }\n\n`playwright.controls.InputDateRange.expect_startview(value, *, timeout=None)`\n\nAsserts that the input element has the expected start view.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">value</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[AttrValue](`shiny.playwright._types.AttrValue`)</span></code>\n\n:   The expected start view.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the start view to appear. Defaults to `None`.\n\n### expect_value { #shiny.playwright.controls.InputDateRange.expect_value }\n\n`playwright.controls.InputDateRange.expect_value(value, *, timeout=None)`\n\nAsserts that the input element has the expected value.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">value</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[typing](`typing`).[Tuple](`typing.Tuple`)\\[[PatternOrStr](`shiny.playwright._types.PatternOrStr`), [PatternOrStr](`shiny.playwright._types.PatternOrStr`)\\] \\| [typing](`typing`).[Tuple](`typing.Tuple`)\\[[PatternOrStr](`shiny.playwright._types.PatternOrStr`), [MISSING_TYPE](`shiny.types.MISSING_TYPE`)\\] \\| [typing](`typing`).[Tuple](`typing.Tuple`)\\[[MISSING_TYPE](`shiny.types.MISSING_TYPE`), [PatternOrStr](`shiny.playwright._types.PatternOrStr`)\\]</span></code>\n\n:   The expected value. The first element is the start date and the second element is the end date.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the value to appear. Defaults to `None`.\n\n### expect_weekstart { #shiny.playwright.controls.InputDateRange.expect_weekstart }\n\n`playwright.controls.InputDateRange.expect_weekstart(value, *, timeout=None)`\n\nAsserts that the input element has the expected week start.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">value</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[int](`int`) \\| [AttrValue](`shiny.playwright._types.AttrValue`)</span></code>\n\n:   The expected week start.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the week start to appear. Defaults to `None`.\n\n### set { #shiny.playwright.controls.InputDateRange.set }\n\n`playwright.controls.InputDateRange.set(value, *, timeout=None)`\n\nSets the value of the input element.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">value</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[typing](`typing`).[Tuple](`typing.Tuple`)\\[[str](`str`) \\| None, [str](`str`) \\| None\\]</span></code>\n\n:   The value to set. The first element is the start date and the second element is the end date.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the value to be set. Defaults to `None`."
    },
    {
        "controller_name": "playwright.controls.InputFile",
        "attributes": "| Name | Description |\n| --- | --- |\n| [loc_button](#shiny.playwright.controls.InputFile.loc_button) | Playwright `Locator` of the button. |\n| [loc_file_display](#shiny.playwright.controls.InputFile.loc_file_display) | Playwright `Locator` of the file display. |\n| [loc_progress](#shiny.playwright.controls.InputFile.loc_progress) | Playwright `Locator` of the progress bar. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [expect_accept](#shiny.playwright.controls.InputFile.expect_accept) | Expect the `accept` attribute to have a specific value. |\n| [expect_button_label](#shiny.playwright.controls.InputFile.expect_button_label) | Expect the button label to have a specific value. |\n| [expect_capture](#shiny.playwright.controls.InputFile.expect_capture) | Expect the `capture` attribute to have a specific value. |\n| [expect_complete](#shiny.playwright.controls.InputFile.expect_complete) | Expect the file upload to be complete. |\n| [expect_multiple](#shiny.playwright.controls.InputFile.expect_multiple) | Expect the `multiple` attribute to have a specific value. |\n| [expect_width](#shiny.playwright.controls.InputFile.expect_width) | Expect the width of the input file to have a specific value. |\n| [set](#shiny.playwright.controls.InputFile.set) | Set the file upload. |\n\n### expect_accept { #shiny.playwright.controls.InputFile.expect_accept }\n\n`playwright.controls.InputFile.expect_accept(value, *, timeout=None)`\n\nExpect the `accept` attribute to have a specific value.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">value</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[list](`list`)\\[[str](`str`)\\] \\| [AttrValue](`shiny.playwright._types.AttrValue`)</span></code>\n\n:   The expected value of the `accept` attribute.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The timeout for the expectation. Defaults to `None`.\n\n### expect_button_label { #shiny.playwright.controls.InputFile.expect_button_label }\n\n`playwright.controls.InputFile.expect_button_label(value, *, timeout=None)`\n\nExpect the button label to have a specific value.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">value</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[PatternOrStr](`shiny.playwright._types.PatternOrStr`)</span></code>\n\n:   The expected value of the button label.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The timeout for the expectation. Defaults to `None`.\n\n### expect_capture { #shiny.playwright.controls.InputFile.expect_capture }\n\n`playwright.controls.InputFile.expect_capture(value, *, timeout=None)`\n\nExpect the `capture` attribute to have a specific value.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">value</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Literal](`typing.Literal`)\\['environment', 'user'\\] \\| None</span></code>\n\n:   The expected value of the `capture` attribute.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The timeout for the expectation. Defaults to `None`.\n\n### expect_complete { #shiny.playwright.controls.InputFile.expect_complete }\n\n`playwright.controls.InputFile.expect_complete(timeout=None)`\n\nExpect the file upload to be complete.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The timeout for the expectation. Defaults to `None`.\n\n### expect_multiple { #shiny.playwright.controls.InputFile.expect_multiple }\n\n`playwright.controls.InputFile.expect_multiple(value, *, timeout=None)`\n\nExpect the `multiple` attribute to have a specific value.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">value</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[bool](`bool`)</span></code>\n\n:   The expected value of the `multiple` attribute.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The timeout for the expectation. Defaults to `None`.\n\n### expect_width { #shiny.playwright.controls.InputFile.expect_width }\n\n`playwright.controls.InputFile.expect_width(value, *, timeout=None)`\n\nExpect the width of the input file to have a specific value.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">value</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[StyleValue](`shiny.playwright._types.StyleValue`)</span></code>\n\n:   The expected value of the width.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The timeout for the expectation. Defaults to `None`.\n\n### set { #shiny.playwright.controls.InputFile.set }\n\n`playwright.controls.InputFile.set(file_path, *, timeout=None, expect_complete_timeout=30 * 1000)`\n\nSet the file upload.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">file_path</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[str](`str`) \\| [pathlib](`pathlib`).[Path](`pathlib.Path`) \\| [FilePayload](`playwright.sync_api.FilePayload`) \\| [list](`list`)\\[[str](`str`) \\| [pathlib](`pathlib`).[Path](`pathlib.Path`)\\] \\| [list](`list`)\\[[FilePayload](`playwright.sync_api.FilePayload`)\\]</span></code>\n\n:   The path to the file to upload.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The timeout for the action. Defaults to `None`.\n\n<code><span class=\"parameter-name\">expect_complete_timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">30 * 1000</span></code>\n\n:   The timeout for the expectation that the upload is complete. Defaults to `30 * 1000`."
    },
    {
        "controller_name": "playwright.controls.InputRadioButtons",
        "attributes": "| Name | Description |\n| --- | --- |\n| [loc_choice_labels](#shiny.playwright.controls.InputRadioButtons.loc_choice_labels) | Playwright `Locator` of the labels of the radio button choices. |\n| [loc_choices](#shiny.playwright.controls.InputRadioButtons.loc_choices) | Playwright `Locator` of the radio button choices. |\n| [loc_selected](#shiny.playwright.controls.InputRadioButtons.loc_selected) | Playwright `Locator` of the selected radio button. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [expect_choices](#shiny.playwright.controls.InputRadioButtons.expect_choices) | Expect the radio button choices. |\n| [expect_selected](#shiny.playwright.controls.InputRadioButtons.expect_selected) | Expect the selected radio button. |\n| [set](#shiny.playwright.controls.InputRadioButtons.set) | Set the selected radio button. |\n\n### expect_choices { #shiny.playwright.controls.InputRadioButtons.expect_choices }\n\n`playwright.controls.InputRadioButtons.expect_choices(value, *, timeout=None)`\n\nExpect the radio button choices.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">value</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[ListPatternOrStr](`shiny.playwright._types.ListPatternOrStr`)</span></code>\n\n:   The expected choices.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The timeout for the expectation. Defaults to `None`.\n\n### expect_selected { #shiny.playwright.controls.InputRadioButtons.expect_selected }\n\n`playwright.controls.InputRadioButtons.expect_selected(value, *, timeout=None)`\n\nExpect the selected radio button.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">value</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[PatternOrStr](`shiny.playwright._types.PatternOrStr`) \\| None</span></code>\n\n:   The expected value of the selected radio button.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The timeout for the expectation. Defaults to `None`.\n\n### set { #shiny.playwright.controls.InputRadioButtons.set }\n\n`playwright.controls.InputRadioButtons.set(selected, *, timeout=None, **kwargs)`\n\nSet the selected radio button.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">selected</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[str](`str`)</span></code>\n\n:   The value of the selected radio button.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The timeout for the action. Defaults to `None`."
    },
    {
        "controller_name": "playwright.controls.InputSlider",
        "attributes": "| Name | Description |\n| --- | --- |\n| [loc_irs_label](#shiny.playwright.controls.InputSlider.loc_irs_label) | Playwright `Locator` of the input slider label. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [expect_value](#shiny.playwright.controls.InputSlider.expect_value) | Asserts that the input element has the expected value. |\n| [set](#shiny.playwright.controls.InputSlider.set) | Set the value of the slider. |\n\n### expect_value { #shiny.playwright.controls.InputSlider.expect_value }\n\n`playwright.controls.InputSlider.expect_value(value, *, timeout=None)`\n\nAsserts that the input element has the expected value.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">value</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[PatternOrStr](`shiny.playwright._types.PatternOrStr`)</span></code>\n\n:   The expected value.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the value to appear. Defaults to `None`.\n\n### set { #shiny.playwright.controls.InputSlider.set }\n\n`playwright.controls.InputSlider.set(value, *, max_err_values=15, timeout=None)`\n\nSet the value of the slider.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">value</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[str](`str`)</span></code>\n\n:   The value to set the slider to.\n\n<code><span class=\"parameter-name\">max_err_values</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[int](`int`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">15</span></code>\n\n:   The maximum number of error values to display if the value is not found. Defaults to 15.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the value to appear. Defaults to `None`."
    },
    {
        "controller_name": "playwright.controls.InputSliderRange",
        "attributes": "| Name | Description |\n| --- | --- |\n| [loc_irs_label_from](#shiny.playwright.controls.InputSliderRange.loc_irs_label_from) | Playwright `Locator` of the input slider label for the `from` handle. |\n| [loc_irs_label_to](#shiny.playwright.controls.InputSliderRange.loc_irs_label_to) | Playwright `Locator` of the input slider label for the `to` handle. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [expect_value](#shiny.playwright.controls.InputSliderRange.expect_value) | Asserts that the input element has the expected value. |\n| [set](#shiny.playwright.controls.InputSliderRange.set) | Set the value of the slider. |\n\n### expect_value { #shiny.playwright.controls.InputSliderRange.expect_value }\n\n`playwright.controls.InputSliderRange.expect_value(value, *, timeout=None)`\n\nAsserts that the input element has the expected value.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">value</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[typing](`typing`).[Tuple](`typing.Tuple`)\\[[PatternOrStr](`shiny.playwright._types.PatternOrStr`), [PatternOrStr](`shiny.playwright._types.PatternOrStr`)\\] \\| [typing](`typing`).[Tuple](`typing.Tuple`)\\[[PatternOrStr](`shiny.playwright._types.PatternOrStr`), [MISSING_TYPE](`shiny.types.MISSING_TYPE`)\\] \\| [typing](`typing`).[Tuple](`typing.Tuple`)\\[[MISSING_TYPE](`shiny.types.MISSING_TYPE`), [PatternOrStr](`shiny.playwright._types.PatternOrStr`)\\]</span></code>\n\n:   The expected value.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the value to appear. Defaults to `None`.\n\n### set { #shiny.playwright.controls.InputSliderRange.set }\n\n`playwright.controls.InputSliderRange.set(value, *, max_err_values=15, timeout=None)`\n\nSet the value of the slider.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">value</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[typing](`typing`).[Tuple](`typing.Tuple`)\\[[str](`str`), [str](`str`)\\] \\| [typing](`typing`).[Tuple](`typing.Tuple`)\\[[str](`str`), [MISSING_TYPE](`shiny.types.MISSING_TYPE`)\\] \\| [typing](`typing`).[Tuple](`typing.Tuple`)\\[[MISSING_TYPE](`shiny.types.MISSING_TYPE`), [str](`str`)\\]</span></code>\n\n:   The value to set the slider to.\n\n<code><span class=\"parameter-name\">max_err_values</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[int](`int`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">15</span></code>\n\n:   The maximum number of error values to display if the value is not found. Defaults to 15.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the value to appear. Defaults to `None`."
    },
    {
        "controller_name": "playwright.controls.NavItem",
        "attributes": "| Name | Description |\n| --- | --- |\n| [loc](#shiny.playwright.controls.NavItem.loc) | Playwright `Locator` for the nav item. |\n| [loc_container](#shiny.playwright.controls.NavItem.loc_container) | Playwright `Locator` for the nav item container. |\n| [loc_content](#shiny.playwright.controls.NavItem.loc_content) | Returns the locator for the content of the nav item. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [click](#shiny.playwright.controls.NavItem.click) | Clicks the nav item. |\n| [expect_active](#shiny.playwright.controls.NavItem.expect_active) | Expects the nav item to be active or inactive. |\n| [expect_content](#shiny.playwright.controls.NavItem.expect_content) | Expects the nav item content to have the specified text. |\n\n### click { #shiny.playwright.controls.NavItem.click }\n\n`playwright.controls.NavItem.click(timeout=None)`\n\nClicks the nav item.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the nav item to be visible and interactable. Defaults to `None`.\n\n### expect_active { #shiny.playwright.controls.NavItem.expect_active }\n\n`playwright.controls.NavItem.expect_active(value, *, timeout=None)`\n\nExpects the nav item to be active or inactive.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">active</span></code>\n\n:   `True` if the nav item is expected to be active, False otherwise.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the expectation to pass. Defaults to `None`.\n\n### expect_content { #shiny.playwright.controls.NavItem.expect_content }\n\n`playwright.controls.NavItem.expect_content(value, *, timeout=None)`\n\nExpects the nav item content to have the specified text.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">value</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[PatternOrStr](`shiny.playwright._types.PatternOrStr`)</span></code>\n\n:   The expected text pattern or string.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the expectation to pass. Defaults to `None`."
    },
    {
        "controller_name": "playwright.controls.OutputCode",
        "attributes": "| Name | Description |\n| --- | --- |\n| [loc](#shiny.playwright.controls.OutputCode.loc) | Playwright `Locator` of the code output. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [expect_has_placeholder](#shiny.playwright.controls.OutputCode.expect_has_placeholder) | Asserts that the code output has the expected placeholder. |\n\n### expect_has_placeholder { #shiny.playwright.controls.OutputCode.expect_has_placeholder }\n\n`playwright.controls.OutputCode.expect_has_placeholder(value=False, *, timeout=None)`\n\nAsserts that the code output has the expected placeholder.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">value</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[bool](`bool`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">False</span></code>\n\n:   Whether the code output has a placeholder.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the placeholder to appear. Defaults to `None`."
    },
    {
        "controller_name": "playwright.controls.OutputDataFrame",
        "attributes": "| Name | Description |\n| --- | --- |\n| [loc](#shiny.playwright.controls.OutputDataFrame.loc) | Playwright `Locator` for the data frame. |\n| [loc_body](#shiny.playwright.controls.OutputDataFrame.loc_body) | Playwright `Locator` for the body of the data frame table. |\n| [loc_container](#shiny.playwright.controls.OutputDataFrame.loc_container) | Playwright `Locator` for the data frame container. |\n| [loc_head](#shiny.playwright.controls.OutputDataFrame.loc_head) | Playwright `Locator` for the head of the data frame table. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [cell_locator](#shiny.playwright.controls.OutputDataFrame.cell_locator) | Returns the locator for a specific cell in the data frame. |\n| [edit_cell](#shiny.playwright.controls.OutputDataFrame.edit_cell) | Edits the cell in the data frame. |\n| [expect_cell](#shiny.playwright.controls.OutputDataFrame.expect_cell) | Expects the cell in the data frame to have the specified text. |\n| [expect_cell_class](#shiny.playwright.controls.OutputDataFrame.expect_cell_class) | Expects the class of the cell |\n| [expect_cell_title](#shiny.playwright.controls.OutputDataFrame.expect_cell_title) | Expects the validation message of the cell in the data frame. |\n| [expect_class_state](#shiny.playwright.controls.OutputDataFrame.expect_class_state) | Expects the state of the class in the data frame. |\n| [expect_column_label](#shiny.playwright.controls.OutputDataFrame.expect_column_label) | Expects the text in the specified column of the data frame. |\n| [expect_column_labels](#shiny.playwright.controls.OutputDataFrame.expect_column_labels) | Expects the column labels in the data frame. |\n| [expect_n_col](#shiny.playwright.controls.OutputDataFrame.expect_n_col) | Expects the number of columns in the data frame. |\n| [expect_n_row](#shiny.playwright.controls.OutputDataFrame.expect_n_row) | Expects the number of rows in the data frame. |\n| [save_cell](#shiny.playwright.controls.OutputDataFrame.save_cell) | Saves the value of the cell in the data frame. |\n| [select_rows](#shiny.playwright.controls.OutputDataFrame.select_rows) | Selects the rows in the data frame. |\n| [set_column_filter](#shiny.playwright.controls.OutputDataFrame.set_column_filter) | Filters the column in the data frame. |\n| [set_column_sort](#shiny.playwright.controls.OutputDataFrame.set_column_sort) | Sorts the column in the data frame. |\n\n### cell_locator { #shiny.playwright.controls.OutputDataFrame.cell_locator }\n\n`playwright.controls.OutputDataFrame.cell_locator(row, col)`\n\nReturns the locator for a specific cell in the data frame.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">row</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[int](`int`)</span></code>\n\n:   The row number of the cell.\n\n<code><span class=\"parameter-name\">col</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[int](`int`)</span></code>\n\n:   The column number of the cell.\n\n### edit_cell { #shiny.playwright.controls.OutputDataFrame.edit_cell }\n\n`playwright.controls.OutputDataFrame.edit_cell(text, *, row, col, timeout=None)`\n\nEdits the cell in the data frame.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">value</span></code>\n\n:   The value to edit in the cell.\n\n<code><span class=\"parameter-name\">row</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[int](`int`)</span></code>\n\n:   The row number of the cell.\n\n<code><span class=\"parameter-name\">col</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[int](`int`)</span></code>\n\n:   The column number of the cell.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the action to complete. Defaults to `None`.\n\n### expect_cell { #shiny.playwright.controls.OutputDataFrame.expect_cell }\n\n`playwright.controls.OutputDataFrame.expect_cell(value, *, row, col, timeout=None)`\n\nExpects the cell in the data frame to have the specified text.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">value</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[PatternOrStr](`shiny.playwright._types.PatternOrStr`)</span></code>\n\n:   The expected text in the cell.\n\n<code><span class=\"parameter-name\">row</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[int](`int`)</span></code>\n\n:   The row number of the cell.\n\n<code><span class=\"parameter-name\">col</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[int](`int`)</span></code>\n\n:   The column number of the cell.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the expectation to pass. Defaults to `None`.\n\n### expect_cell_class { #shiny.playwright.controls.OutputDataFrame.expect_cell_class }\n\n`playwright.controls.OutputDataFrame.expect_cell_class(value, *, row, col, timeout=None)`\n\nExpects the class of the cell\n\n#### Parameters\n\n<code><span class=\"parameter-name\">value</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[str](`str`)</span></code>\n\n:   The expected class of the cell.\n\n<code><span class=\"parameter-name\">row</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[int](`int`)</span></code>\n\n:   The row number of the cell.\n\n<code><span class=\"parameter-name\">col</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[int](`int`)</span></code>\n\n:   The column number of the cell.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the expectation to pass. Defaults to `None`.\n\n### expect_cell_title { #shiny.playwright.controls.OutputDataFrame.expect_cell_title }\n\n`playwright.controls.OutputDataFrame.expect_cell_title(value, *, row, col, timeout=None)`\n\nExpects the validation message of the cell in the data frame.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">value</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[str](`str`)</span></code>\n\n:   The expected validation message of the cell.\n\n<code><span class=\"parameter-name\">row</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[int](`int`)</span></code>\n\n:   The row number of the cell.\n\n<code><span class=\"parameter-name\">col</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[int](`int`)</span></code>\n\n:   The column number of the cell.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the expectation to pass. Defaults to `None`.\n\n### expect_class_state { #shiny.playwright.controls.OutputDataFrame.expect_class_state }\n\n`playwright.controls.OutputDataFrame.expect_class_state(value, *, row, col, timeout=None)`\n\nExpects the state of the class in the data frame.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">value</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[str](`str`)</span></code>\n\n:   The expected state of the class.\n\n<code><span class=\"parameter-name\">row</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[int](`int`)</span></code>\n\n:   The row number of the cell.\n\n<code><span class=\"parameter-name\">col</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[int](`int`)</span></code>\n\n:   The column number of the cell.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the expectation to pass. Defaults to `None`.\n\n### expect_column_label { #shiny.playwright.controls.OutputDataFrame.expect_column_label }\n\n`playwright.controls.OutputDataFrame.expect_column_label(value, *, col, timeout=None)`\n\nExpects the text in the specified column of the data frame.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">value</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[ListPatternOrStr](`shiny.playwright._types.ListPatternOrStr`)</span></code>\n\n:   The expected text in the column.\n\n<code><span class=\"parameter-name\">col</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[int](`int`)</span></code>\n\n:   The column number.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the expectation to pass. Defaults to `None`.\n\n### expect_column_labels { #shiny.playwright.controls.OutputDataFrame.expect_column_labels }\n\n`playwright.controls.OutputDataFrame.expect_column_labels(value, *, timeout=None)`\n\nExpects the column labels in the data frame.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">value</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[ListPatternOrStr](`shiny.playwright._types.ListPatternOrStr`) \\| None</span></code>\n\n:   The expected column labels.\n\n    Note: None if the column labels are expected to not exist.\n\n<code><span class=\"parameter-name\">edit</span></code>\n\n:   `True` if the data frame is to be in edit mode, `False` otherwise.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the expectation to pass. Defaults to `None`.\n\n### expect_n_col { #shiny.playwright.controls.OutputDataFrame.expect_n_col }\n\n`playwright.controls.OutputDataFrame.expect_n_col(value, *, timeout=None)`\n\nExpects the number of columns in the data frame.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">value</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[int](`int`)</span></code>\n\n:   The expected number of columns.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the expectation to pass. Defaults to `None`.\n\n### expect_n_row { #shiny.playwright.controls.OutputDataFrame.expect_n_row }\n\n`playwright.controls.OutputDataFrame.expect_n_row(value, *, timeout=None)`\n\nExpects the number of rows in the data frame.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">value</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[int](`int`)</span></code>\n\n:   The expected number of rows.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the expectation to pass. Defaults to `None`.\n\n### save_cell { #shiny.playwright.controls.OutputDataFrame.save_cell }\n\n`playwright.controls.OutputDataFrame.save_cell(text, *, row, col, save_key, timeout=None)`\n\nSaves the value of the cell in the data frame.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">text</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[str](`str`)</span></code>\n\n:   The key to save the value of the cell.\n\n<code><span class=\"parameter-name\">row</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[int](`int`)</span></code>\n\n:   The row number of the cell.\n\n<code><span class=\"parameter-name\">col</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[int](`int`)</span></code>\n\n:   The column number of the cell.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the action to complete. Defaults to `None`.\n\n### select_rows { #shiny.playwright.controls.OutputDataFrame.select_rows }\n\n`playwright.controls.OutputDataFrame.select_rows(value, *, timeout=None)`\n\nSelects the rows in the data frame.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">value</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[list](`list`)\\[[int](`int`)\\]</span></code>\n\n:   The list of row numbers to select.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the action to complete. Defaults to `None`.\n\n### set_column_filter { #shiny.playwright.controls.OutputDataFrame.set_column_filter }\n\n`playwright.controls.OutputDataFrame.set_column_filter(col, *, text, timeout=None)`\n\nFilters the column in the data frame.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">col</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[int](`int`)</span></code>\n\n:   The column number to filter.\n\n<code><span class=\"parameter-name\">text</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[str](`str`) \\| [list](`list`)\\[[str](`str`)\\] \\| [tuple](`tuple`)\\[[str](`str`), [str](`str`)\\]</span></code>\n\n:   The text to filter the column.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the action to complete. Defaults to `None`.\n\n### set_column_sort { #shiny.playwright.controls.OutputDataFrame.set_column_sort }\n\n`playwright.controls.OutputDataFrame.set_column_sort(col, *, timeout=None)`\n\nSorts the column in the data frame.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">col</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[int](`int`)</span></code>\n\n:   The column number to sort.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the action to complete. Defaults to `None`."
    },
    {
        "controller_name": "playwright.controls.OutputText",
        "attributes": "| Name | Description |\n| --- | --- |\n| [loc](#shiny.playwright.controls.OutputText.loc) | Playwright `Locator` of the text output. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [get_value](#shiny.playwright.controls.OutputText.get_value) | Gets the text value of the output. |\n\n### get_value { #shiny.playwright.controls.OutputText.get_value }\n\n`playwright.controls.OutputText.get_value(timeout=None)`\n\nGets the text value of the output.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the value to appear. Defaults to `None`."
    },
    {
        "controller_name": "playwright.controls.OutputTextVerbatim",
        "attributes": "| Name | Description |\n| --- | --- |\n| [loc](#shiny.playwright.controls.OutputTextVerbatim.loc) | Playwright `Locator` of the verbatim text output. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [expect_has_placeholder](#shiny.playwright.controls.OutputTextVerbatim.expect_has_placeholder) | Asserts that the verbatim text output has the expected placeholder. |\n\n### expect_has_placeholder { #shiny.playwright.controls.OutputTextVerbatim.expect_has_placeholder }\n\n`playwright.controls.OutputTextVerbatim.expect_has_placeholder(value=False, *, timeout=None)`\n\nAsserts that the verbatim text output has the expected placeholder.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">value</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[bool](`bool`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">False</span></code>\n\n:   Whether the verbatim text output has a placeholder.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the placeholder to appear. Defaults to `None`."
    },
    {
        "controller_name": "playwright.controls.Popover",
        "attributes": "| Name | Description |\n| --- | --- |\n| [loc_overlay_body](#shiny.playwright.controls.Popover.loc_overlay_body) | Playwright `Locator` for the popover body. |\n| [loc_overlay_container](#shiny.playwright.controls.Popover.loc_overlay_container) | Playwright `Locator` for the popover container. |\n| [loc_trigger](#shiny.playwright.controls.Popover.loc_trigger) | Playwright `Locator` for the trigger element that opens/closes the popover. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [set](#shiny.playwright.controls.Popover.set) | Sets the state of the popover. |\n| [toggle](#shiny.playwright.controls.Popover.toggle) | Toggles the state of the popover. |\n\n### set { #shiny.playwright.controls.Popover.set }\n\n`playwright.controls.Popover.set(open, timeout=None)`\n\nSets the state of the popover.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">open</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[bool](`bool`)</span></code>\n\n:   `True` to open the popover and `False` to close it.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the popover to be visible and interactable. Defaults to `None`.\n\n### toggle { #shiny.playwright.controls.Popover.toggle }\n\n`playwright.controls.Popover.toggle(timeout=None)`\n\nToggles the state of the popover.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the popover to be visible and interactable. Defaults to `None`."
    },
    {
        "controller_name": "playwright.controls.Sidebar",
        "attributes": "| Name | Description |\n| --- | --- |\n| [loc](#shiny.playwright.controls.Sidebar.loc) | Playwright `Locator` for the sidebar. |\n| [loc_container](#shiny.playwright.controls.Sidebar.loc_container) | Playwright `Locator` for the sidebar layout. |\n| [loc_handle](#shiny.playwright.controls.Sidebar.loc_handle) | Playwright `Locator` for the open/close handle of the sidebar. |\n| [loc_position](#shiny.playwright.controls.Sidebar.loc_position) | Playwright `Locator` for the position of the sidebar. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [expect_handle](#shiny.playwright.controls.Sidebar.expect_handle) | Asserts that the sidebar handle exists or does not exist. |\n| [expect_open](#shiny.playwright.controls.Sidebar.expect_open) | Expect the sidebar to be open or closed. |\n| [expect_position](#shiny.playwright.controls.Sidebar.expect_position) | Asserts that the sidebar is in the expected position. |\n| [expect_text](#shiny.playwright.controls.Sidebar.expect_text) | Asserts that the sidebar has the expected text. |\n| [set](#shiny.playwright.controls.Sidebar.set) | Sets the sidebar to be open or closed. |\n| [toggle](#shiny.playwright.controls.Sidebar.toggle) | Toggles the sidebar open or closed. |\n\n### expect_handle { #shiny.playwright.controls.Sidebar.expect_handle }\n\n`playwright.controls.Sidebar.expect_handle(exists, *, timeout=None)`\n\nAsserts that the sidebar handle exists or does not exist.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">exists</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[bool](`bool`)</span></code>\n\n:   `True` if the sidebar open/close handle should exist, `False` otherwise.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the sidebar handle to appear. Defaults to `None`.\n\n### expect_open { #shiny.playwright.controls.Sidebar.expect_open }\n\n`playwright.controls.Sidebar.expect_open(value, *, timeout=None)`\n\nExpect the sidebar to be open or closed.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">value</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[bool](`bool`)</span></code>\n\n:   `True` if the sidebar should be open, `False` to be closed.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the sidebar to open or close. Defaults to `None`.\n\n### expect_position { #shiny.playwright.controls.Sidebar.expect_position }\n\n`playwright.controls.Sidebar.expect_position(value, *, timeout=None)`\n\nAsserts that the sidebar is in the expected position.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">value</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Literal](`typing.Literal`)\\['left', 'right'\\]</span></code>\n\n:   The expected position of the sidebar.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the sidebar to appear. Defaults to `None`.\n\n### expect_text { #shiny.playwright.controls.Sidebar.expect_text }\n\n`playwright.controls.Sidebar.expect_text(value, *, timeout=None)`\n\nAsserts that the sidebar has the expected text.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">value</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[PatternOrStr](`shiny.playwright._types.PatternOrStr`)</span></code>\n\n:   The expected text in the sidebar.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the text to appear. Defaults to `None`.\n\n### set { #shiny.playwright.controls.Sidebar.set }\n\n`playwright.controls.Sidebar.set(open, *, timeout=None)`\n\nSets the sidebar to be open or closed.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">open</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[bool](`bool`)</span></code>\n\n:   `True` to open the sidebar and `False` to close it.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the sidebar to open or close. Defaults to `None`.\n\n### toggle { #shiny.playwright.controls.Sidebar.toggle }\n\n`playwright.controls.Sidebar.toggle(timeout=None)`\n\nToggles the sidebar open or closed.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the sidebar to toggle. Defaults to `None`."
    },
    {
        "controller_name": "playwright.controls.Tooltip",
        "attributes": "| Name | Description |\n| --- | --- |\n| [loc](#shiny.playwright.controls.Tooltip.loc) | Playwright `Locator` for the tooltip content. |\n| [loc_container](#shiny.playwright.controls.Tooltip.loc_container) | Playwright `Locator` for the container tooltip. |\n| [loc_overlay_body](#shiny.playwright.controls.Tooltip.loc_overlay_body) | Playwright `Locator` for the overlay body. |\n| [loc_overlay_container](#shiny.playwright.controls.Tooltip.loc_overlay_container) | Playwright `Locator` for the overlay container. |\n| [loc_trigger](#shiny.playwright.controls.Tooltip.loc_trigger) | Playwright `Locator` for the trigger element. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [set](#shiny.playwright.controls.Tooltip.set) | Sets the state of the tooltip. |\n| [toggle](#shiny.playwright.controls.Tooltip.toggle) | Toggles the state of the tooltip. |\n\n### set { #shiny.playwright.controls.Tooltip.set }\n\n`playwright.controls.Tooltip.set(open, timeout=None)`\n\nSets the state of the tooltip.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">open</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[bool](`bool`)</span></code>\n\n:   `True` to open the tooltip and `False` to close it.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the tooltip to be visible and interactable. Defaults to `None`.\n\n### toggle { #shiny.playwright.controls.Tooltip.toggle }\n\n`playwright.controls.Tooltip.toggle(timeout=None)`\n\nToggles the state of the tooltip.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the tooltip to be visible and interactable. Defaults to `None`."
    },
    {
        "controller_name": "playwright.controls.ValueBox",
        "attributes": "| Name | Description |\n| --- | --- |\n| [loc](#shiny.playwright.controls.ValueBox.loc) | Playwright `Locator` for the value box's value. |\n| [loc_body](#shiny.playwright.controls.ValueBox.loc_body) | Playwright `Locator` for the value box body. |\n| [loc_showcase](#shiny.playwright.controls.ValueBox.loc_showcase) | Playwright `Locator` for the value box showcase. |\n| [loc_title](#shiny.playwright.controls.ValueBox.loc_title) | Playwright `Locator` for the value box title. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [expect_body](#shiny.playwright.controls.ValueBox.expect_body) | Expects the value box body to have specific text. |\n| [expect_height](#shiny.playwright.controls.ValueBox.expect_height) | Expects the value box to have a specific height. |\n| [expect_title](#shiny.playwright.controls.ValueBox.expect_title) | Expects the value box title to have a specific text. |\n| [expect_value](#shiny.playwright.controls.ValueBox.expect_value) | Expects the value box value to have a specific text. |\n\n### expect_body { #shiny.playwright.controls.ValueBox.expect_body }\n\n`playwright.controls.ValueBox.expect_body(value, *, timeout=None)`\n\nExpects the value box body to have specific text.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">value</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[PatternOrStr](`shiny.playwright._types.PatternOrStr`) \\| [list](`list`)\\[[PatternOrStr](`shiny.playwright._types.PatternOrStr`)\\]</span></code>\n\n:   The expected text pattern or list of patterns/strings.\n\n    Note: If testing against multiple elements, text should be an array.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the expectation to pass. Defaults to `None`.\n\n### expect_height { #shiny.playwright.controls.ValueBox.expect_height }\n\n`playwright.controls.ValueBox.expect_height(value, *, timeout=None)`\n\nExpects the value box to have a specific height.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">value</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[StyleValue](`shiny.playwright._types.StyleValue`)</span></code>\n\n:   The expected height value.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the expectation to pass. Defaults to `None`.\n\n### expect_title { #shiny.playwright.controls.ValueBox.expect_title }\n\n`playwright.controls.ValueBox.expect_title(value, *, timeout=None)`\n\nExpects the value box title to have a specific text.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">value</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[PatternOrStr](`shiny.playwright._types.PatternOrStr`)</span></code>\n\n:   The expected text pattern or string.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the expectation to pass. Defaults to `None`.\n\n### expect_value { #shiny.playwright.controls.ValueBox.expect_value }\n\n`playwright.controls.ValueBox.expect_value(value, *, timeout=None)`\n\nExpects the value box value to have a specific text.\n\n#### Parameters\n\n<code><span class=\"parameter-name\">value</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[PatternOrStr](`shiny.playwright._types.PatternOrStr`)</span></code>\n\n:   The expected text pattern or string.\n\n<code><span class=\"parameter-name\">timeout</span><span class=\"parameter-annotation-sep\">:</span> <span class=\"parameter-annotation\">[Timeout](`shiny.playwright._types.Timeout`)</span> <span class=\"parameter-default-sep\">=</span> <span class=\"parameter-default\">None</span></code>\n\n:   The maximum time to wait for the expectation to pass. Defaults to `None`."
    },
    {
        "controller_name": "run.ShinyAppProc",
        "attributes": "| Name | Description |\n| --- | --- |\n| [file](#shiny.run.ShinyAppProc.file) | The path to the Shiny app file. |\n| [port](#shiny.run.ShinyAppProc.port) | The port that the Shiny app is running on. |\n| [proc](#shiny.run.ShinyAppProc.proc) | The subprocess object that represents the running Shiny app. |\n| [stderr](#shiny.run.ShinyAppProc.stderr) | The standard error stream of the Shiny app subprocess. |\n| [stdout](#shiny.run.ShinyAppProc.stdout) | The standard output stream of the Shiny app subprocess. |\n| [url](#shiny.run.ShinyAppProc.url) | The URL that the Shiny app is running on. |",
        "methods": "| Name | Description |\n| --- | --- |\n| [close](#shiny.run.ShinyAppProc.close) | Closes the connection and terminates the process. |\n| [wait_until_ready](#shiny.run.ShinyAppProc.wait_until_ready) | Waits until the shiny app is ready to serve requests. |\n\n### close { #shiny.run.ShinyAppProc.close }\n\n```python\nrun.ShinyAppProc.close()\n```\n\nCloses the connection and terminates the process.\n\nThis method is responsible for closing the connection and terminating the process associated with it.\n\n### wait_until_ready { #shiny.run.ShinyAppProc.wait_until_ready }\n\n```python\nrun.ShinyAppProc.wait_until_ready(timeout_secs)\n```\n\nWaits until the shiny app is ready to serve requests.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name         | Type             | Description                                                        | Default    |\n|--------------|------------------|--------------------------------------------------------------------|------------|\n| timeout_secs | [float](`float`) | The maximum number of seconds to wait for the app to become ready. | _required_ |\n\n#### Raises {.doc-section .doc-section-raises}\n\n| Name   | Type                                 | Description                                                          |\n|--------|--------------------------------------|----------------------------------------------------------------------|\n|        | [ConnectionError](`ConnectionError`) | If there is an error while starting the shiny app.                   |\n|        | [TimeoutError](`TimeoutError`)       | If the shiny app does not become ready within the specified timeout. |"
    }
]